[{"/home/elr/largeProject/event-u/frontend/src/index.js":"1","/home/elr/largeProject/event-u/frontend/src/reportWebVitals.js":"2","/home/elr/largeProject/event-u/frontend/src/App.js":"3","/home/elr/largeProject/event-u/frontend/src/pages/IntroPage.js":"4","/home/elr/largeProject/event-u/frontend/src/pages/LoginPage.js":"5","/home/elr/largeProject/event-u/frontend/src/pages/CreatePage.js":"6","/home/elr/largeProject/event-u/frontend/src/pages/HomePage.js":"7","/home/elr/largeProject/event-u/frontend/src/pages/PreferencePage.js":"8","/home/elr/largeProject/event-u/frontend/src/pages/MapPage.js":"9","/home/elr/largeProject/event-u/frontend/src/pages/CalendarPage.js":"10","/home/elr/largeProject/event-u/frontend/src/components/Intro.js":"11","/home/elr/largeProject/event-u/frontend/src/components/Create.js":"12","/home/elr/largeProject/event-u/frontend/src/components/LoggedInName.js":"13","/home/elr/largeProject/event-u/frontend/src/components/Preferences.js":"14","/home/elr/largeProject/event-u/frontend/src/components/Map.js":"15","/home/elr/largeProject/event-u/frontend/src/components/Login.js":"16","/home/elr/largeProject/event-u/frontend/src/components/Home.js":"17","/home/elr/largeProject/event-u/frontend/src/components/Calendar.js":"18","/home/elr/largeProject/event-u/frontend/src/components/Path.js":"19","/home/elr/largeProject/event-u/frontend/src/tokenStorage.js":"20","/home/elr/largeProject/event-u/frontend/src/components/ConfirmDelete.js":"21","/home/elr/largeProject/event-u/frontend/src/components/TopNav.js":"22","/home/elr/largeProject/event-u/frontend/src/components/Month.js":"23","/home/elr/largeProject/event-u/frontend/src/components/Day.js":"24","/home/elr/largeProject/event-u/frontend/src/components/FullDay.js":"25","/home/elr/largeProject/event-u/frontend/src/pages/SettingsPage.js":"26","/home/elr/largeProject/event-u/frontend/src/components/Settings.js":"27","/home/elr/largeProject/event-u/frontend/src/pages/UpdatePrefPage.js":"28","/home/elr/largeProject/event-u/frontend/src/components/UpdatePreferences.js":"29"},{"size":500,"mtime":1626407357567,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1626407357567,"results":"32","hashOfConfig":"31"},{"size":1388,"mtime":1627001409873,"results":"33","hashOfConfig":"31"},{"size":190,"mtime":1626407357567,"results":"34","hashOfConfig":"31"},{"size":189,"mtime":1626407357567,"results":"35","hashOfConfig":"31"},{"size":193,"mtime":1626407357567,"results":"36","hashOfConfig":"31"},{"size":264,"mtime":1626407357567,"results":"37","hashOfConfig":"31"},{"size":216,"mtime":1626407357567,"results":"38","hashOfConfig":"31"},{"size":180,"mtime":1626407357567,"results":"39","hashOfConfig":"31"},{"size":203,"mtime":1626407357567,"results":"40","hashOfConfig":"31"},{"size":1184,"mtime":1626407357503,"results":"41","hashOfConfig":"31"},{"size":2365,"mtime":1626407357503,"results":"42","hashOfConfig":"31"},{"size":750,"mtime":1626407357503,"results":"43","hashOfConfig":"31"},{"size":6801,"mtime":1626973846990,"results":"44","hashOfConfig":"31"},{"size":54227,"mtime":1627063998349,"results":"45","hashOfConfig":"31"},{"size":2981,"mtime":1626987446740,"results":"46","hashOfConfig":"31"},{"size":66693,"mtime":1626987446824,"results":"47","hashOfConfig":"31"},{"size":1396,"mtime":1626987446740,"results":"48","hashOfConfig":"31"},{"size":284,"mtime":1626407357503,"results":"49","hashOfConfig":"31"},{"size":366,"mtime":1626407357567,"results":"50","hashOfConfig":"31"},{"size":1679,"mtime":1626895575894,"results":"51","hashOfConfig":"31"},{"size":2775,"mtime":1626988187834,"results":"52","hashOfConfig":"31"},{"size":4039,"mtime":1626987446740,"results":"53","hashOfConfig":"31"},{"size":3302,"mtime":1626987446740,"results":"54","hashOfConfig":"31"},{"size":3423,"mtime":1626987446740,"results":"55","hashOfConfig":"31"},{"size":202,"mtime":1626988289145,"results":"56","hashOfConfig":"31"},{"size":6068,"mtime":1627063533005,"results":"57","hashOfConfig":"31"},{"size":240,"mtime":1627001336593,"results":"58","hashOfConfig":"31"},{"size":6823,"mtime":1627011343154,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"lwhxap",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},"/home/elr/largeProject/event-u/frontend/src/index.js",[],["130","131"],"/home/elr/largeProject/event-u/frontend/src/reportWebVitals.js",[],"/home/elr/largeProject/event-u/frontend/src/App.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/IntroPage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/LoginPage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/CreatePage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/HomePage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/PreferencePage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/MapPage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/CalendarPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Intro.js",["132"],"import React, { useState } from 'react';\n\nfunction signUpRedirect() {\n    window.location.href = '/signup';\n};\n  \nfunction loginRedirect() {\n    window.location.href = '/login';\n};\n  \nfunction Header() {\n    return (\n      <header className=\"indexHeader\">\n        <h1>EventU</h1>\n        <section>\n          <ul className=\"Links\">\n            <li><button className=\"headerBtn\" onClick={signUpRedirect}>New User? Sign Up!</button></li>\n            <li><button className=\"loginBtn\" onClick={loginRedirect}>Log In</button></li>\n          </ul>\n        </section>\n      </header>\n    );\n}\n  \nfunction Main() {\n    return(\n      <div className=\"Main\">\n        <h1>Keeping U up to date with events near campus!</h1>\n        <button className=\"middleBtn\" onClick={signUpRedirect}>Get started for free!</button>\n      </div>\n    );\n}\n  \nfunction Footer() {\n    return(\n      <footer>\n        <p>Project Created by Group 23</p>\n      </footer>\n    );\n}\n\nfunction Intro() {\n    return(\n        <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n                <Main />\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Intro;\n","/home/elr/largeProject/event-u/frontend/src/components/Create.js",["133","134"],"import React, { useState, Component } from 'react';\nimport './css/login.css';\n\n\nfunction Inputs() {\n    var bp = require('./Path.js');\n\n    var createName;\n    var createPassword;\n    var lname;\n    var fname;\n    var email;\n\n    const [message,setMessage] = useState('');\n\n    const doSignUp = async event =>\n    {\n        event.preventDefault();\n\n\n        var obj = {username:createName.value,firstName:fname.value,lastName:lname.value,password:createPassword.value,email:email.value};\n        console.log(obj);\n        var js = JSON.stringify(obj);\n        var url = bp.buildPath('api/users/register');\n        try\n        {\n            const response = await fetch(url, \n                {method:'POST',body:js,headers:{'Content-Type':'application/json'}});\n                \n            var res = JSON.parse(await response.text());\n\n            if(res.id <= 0)\n            {\n                setMessage('Failed to create new account');\n            }\n            else\n            {\n                var user = {firstName:res.firstName,lastName:res.lastName};\n                localStorage.setItem('user_data', JSON.stringify(user));\n\n                setMessage('');\n                window.location.href = '/preferences';\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }\n    };\n\n    return(\n        <div className=\"createDiv\">\n            <h1 id=\"title\">Welcome to EventU!</h1>\n            <input type=\"text\" id=\"fname\" placeholder=\"First Name\" ref={(c) => fname = c}></input> <br />\n            <input type=\"text\" id=\"lname\" placeholder=\"Last Name\" ref={(c) => lname = c}></input> <br />\n            <input type=\"text\" id=\"email\" placeholder=\"Email\" ref={(c) => email = c}></input> <br />\n            <input type=\"text\" id=\"createName\" placeholder=\"Username\" ref={(c) => createName = c}></input> <br />\n            <input type=\"password\" id=\"createPassword\" placeholder=\"Password\" ref={(c) => createPassword = c}></input><br />\n            <input type=\"submit\" id=\"loginButton\" value=\"Sign Up\" onClick={doSignUp}></input>\n            <h3 id=\"redirectText\">Already have an account?<a href=\"/login\" id=\"redirectButton\"> Sign In!</a></h3>\n        </div>\n    );\n}\n\nfunction Create()\n{\n    return(\n        <div className=\"LoginPage\">\n            <Inputs />\n        </div>\n    );\n};\n\nexport default Create;\n","/home/elr/largeProject/event-u/frontend/src/components/LoggedInName.js",["135"],"import React from 'react';\n\nfunction LoggedInName()\n{\n    /*var _ud = localStorage.getItem('user_data');\n    var ud = JSON.parse(_ud);\n    //var userId = ud._id;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;*/\n\n    var firstName = \"user\";\n    var lastName = \"name\";\n\n    var user = {}\n\n    const doLogout = event =>\n    {\n        event.preventDefault();\n\n        localStorage.removeItem(\"user_data\");\n        window.location.href = '/';\n    };\n\n    return(\n        <div id=\"loggedInDiv\">\n            <span id=\"userName\">Logged In As {firstName} {lastName}</span><br/>\n            <button type=\"button\" id=\"logoutButton\" className=\"buttons\" onClick={doLogout}>Log Out</button>\n        </div>\n    );\n};\n\nexport default LoggedInName;","/home/elr/largeProject/event-u/frontend/src/components/Preferences.js",["136","137","138","139","140"],"import React, { useEffect, useState } from 'react';\nimport './css/preferences.css';\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nvar interestArr;\n\n\nfunction ListElements() {\n    const [interestState, setInterestState] = useState([]);\n\n    useEffect(() => {\n        let interestState = [\n            {interest: \"Music\"},\n            {interest: \"Studying\"},\n            {interest: \"Arts & Culture\"},\n            {interest: \"Shopping\"},\n            {interest: \"Science\"},\n            {interest: \"Sports\"},\n        ];\n\n        setInterestState(\n            interestState.map(d=> {\n                return {\n                    select: false,\n                    interest: d.interest\n                };\n            })\n        );\n    }, []);\n    interestArr = interestState;\n\n    return(\n        <div>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <input type=\"checkbox\" onChange={e => {\n                                let checked = e.target.checked;\n                                setInterestState(\n                                    interestState.map(d => {\n                                        d.select = checked;\n                                        return d;\n                                    })\n                                );\n                            }}>\n                            </input>\n                        </th>\n                        <th scope=\"col\" id=\"interestHeader\">Interest</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {interestState.map((d,i) => (\n                        <tr key={d.interest}>\n                            <th scope=\"row\">\n                                <input onChange={event=> {\n                                    let checked = event.target.checked;\n                                    setInterestState(\n                                        interestState.map(data => {\n                                            if(d.interest === data.interest) {\n                                                data.select = checked;\n                                            }\n                                            return data;\n                                        })\n                                    );\n                                }}\n                                type=\"checkbox\"\n                                checked={d.select}\n                                ></input>\n                            </th>\n                            <td>{d.interest}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nfunction Options() {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 45, opacity: 1},        \n    })\n\n    return(\n        <animated.div style={props} className=\"options\">\n            <ul className =\"choiceList\">\n                <ListElements />\n            </ul>\n        </animated.div>\n    );\n};\n\nconst HeaderText = ({}) => {\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 70, opacity: 1}\n    });\n    return <animated.h1 style={props} id=\"welcomeMessage\">Hello {firstName} {lastName}!</animated.h1>\n};\n\nconst SkipOption = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 5, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"skipMessage\">Not interested? <a href='/home'>Skip this step.</a></animated.h2>;\n}\n\nconst HeaderText2 = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 75, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"welcomeParagraph\">Let's get to know you better, select some of the following general interests:</animated.h2>;\n};\n\nconst SubmitButton = ({}) => {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var uname = ud.username;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const [message,setMessage] = useState('');\n\n    const addPreferences = async event =>\n    {\n        const interestPayload = [];\n        for(var i = 0; i < interestArr.length; i++) {\n            if(interestArr[i].select == true) {\n                interestPayload.push(interestArr[i].interest);\n            }\n        }\n\n        event.preventDefault();\n        \n        var obj = {username:uname,preferences:interestPayload};\n        var js = JSON.stringify(obj);\n        console.log(js);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/preferences'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setMessage('Unable to submit, try again');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n                    \n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n                    \n                    var preferences = ud.payload.preferences;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var email = ud.payload.email;\n                    var likedEvents = ud.payload.likedEvents;\n\n                    var user = {firstName:firstName,lastName:lastName,preferences:preferences,username:uname,likedEvents:likedEvents,email:email,attendedEvents:attendedEvents};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    window.location.href = '/home';\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                console.log(message);\n            });\n    }\n\n    const props = useSpring({\n        from: {y: 700, opacity: 0},\n        to: {y: 0, opacity: 1}\n    });\n\n    return(\n        <div id=\"submitButtonContainer\">\n            <animated.button style={props} onClick={addPreferences} id=\"submitSelections\">Submit</animated.button>\n        </div>\n    );\n};\n\nfunction Preferences() {\n    //const[on, set] = React.useState(true);\n    return(\n        <div className=\"preferencesPage\">\n            <HeaderText />\n            <HeaderText2 />\n            <Options />\n            <SubmitButton />\n            <SkipOption />\n            <span></span>\n        </div>\n    );\n};\n\nexport default Preferences;","/home/elr/largeProject/event-u/frontend/src/components/Map.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"/home/elr/largeProject/event-u/frontend/src/components/Login.js",["165"],"import React, { useState } from 'react';\nimport './css/login.css';\nimport axios from 'axios';\n\nfunction Login()\n{\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n\n    var loginName;\n    var loginPassword;\n\n    const [message,setMessage] = useState('');\n\n    const doLogin = async event =>\n    {\n        event.preventDefault();\n\n\n        var obj = {username:loginName.value,password:loginPassword.value};\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/login'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        try {\n            axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setMessage('User/Password combination incorrect');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n                    \n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n                    \n                    var firstName = ud.payload.firstName;\n                    var lastName = ud.payload.lastName;\n                    var username = ud.payload.username;\n                    var preferences = ud.payload.preferences;\n                    var likedEvents = ud.payload.likedEvents;\n                    var email = ud.payload.email;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var userId = ud.payload._id;\n\n                    var user = {firstName:firstName,lastName:lastName,username:username,preferences:preferences,_id:userId,attendedEvents:attendedEvents,email:email,likedEvents:likedEvents};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    window.location.href = '/home';\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        }\n        catch(e) {\n            console.log(e);\n        };\n    };\n\n    return(\n        <div className=\"LoginPage\">\n            <div className=\"loginDiv\">\n                <h1 id=\"title\">Welcome Back!</h1>\n                <input type=\"text\" id=\"loginName\" placeholder=\"Username\" ref={(c) => loginName = c} /> <br />\n                <input type=\"password\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c}/><br />\n                <input type=\"submit\" id=\"loginButton\" value=\"Sign In\" onClick={doLogin} />\n                <h3 id=\"forgotPass\">Forgot Password? <a id=\"forgotBtn\">Click here</a></h3>\n                <span id=\"loginResult\">{message}</span>\n                <h3 id=\"redirectText\">Don't have an account?<a href=\"/signup\" id=\"redirectButton\"> Sign Up!</a></h3>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","/home/elr/largeProject/event-u/frontend/src/components/Home.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import './css/home.css';\nimport { faPlus, faTimesCircle, faRunning, faFlask, faUserGraduate, faPalette, faGuitar, faShoppingBag, faSearch, faHeart, faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from 'react';\nimport TopNav from '../components/TopNav';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nconst initialList = [];\n\n\n// function AddEvent() {\n//     // this will redirect you to the page for adding events\n//     // window.location.href=\"http://localhost:3000\";\n// }\n\n\n\n\n\nfunction Events() {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var testArr = [];\n\n    const [name, setName] = useState('');\n\n    const [contentStatus, displayContent] = React.useState(false);\n\n    const contentProps = useSpring({\n        opacity: contentStatus ? 1 : 0,\n        marginTop: contentStatus ? 295 : -1000\n    })\n\n    const [editStatus, displayEdit] = React.useState(false);\n    const editProps = useSpring ({\n        opacity: editStatus ? 1 : 0,\n        marginTop: editStatus ? -250 : -1000\n    })\n\n    const [userEvents, setUserEvents] = useState([]);\n    //var userLiked = ud.likedEvents;\n\n    var createdBy = ud.username;\n    const [eventToDelete, setEventToDelete] = useState('');\n    const [values, setValues] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [currentPlaceId, setCurrentPlaceId] = useState(null);\n    const [newPlace, setNewPlace] = useState(null);\n    const [title, setTitle] = useState(null);\n    const [lat, setLat] = useState(null);\n    const [long, setLong] = useState(null);\n    const [category, setCategory] = useState(null);\n    const [address, setAddress] = useState(null);\n    const [startHour, setStartHour] = useState('12');\n    const [startMin, setStartMin] = useState('00');\n    const [startAMPM, setStartAMPM] = useState('AM');\n    const [startTime, setStartTime] = useState(null);\n    const [endHour, setEndHour] = useState('12');\n    const [endMin, setEndMin] = useState('00');\n    const [endAMPM, setEndAMPM] = useState('AM');\n    const [endTime, setEndTime] = useState(null);\n    const [description, setDescription] = useState(null);\n    const [likes, setLikes] = useState(0);\n    const [capacity, setCapacity] = useState(0);\n    const [eventMsg, setEventMsg] = useState(\"\");\n    const [currentId, setCurrentId] = useState();\n\n    const fetchEvents = async event => {\n        event.preventDefault();\n        var bp = require('./Path.js');\n        var storage = require('../tokenStorage.js');\n        var jwt = require('jsonwebtoken');\n\n        var userd = jwt.decode(storage.retrieveToken(),{complete:true});\n        var userLiked = userd.payload.likedEvents;\n        \n        var obj = {likedEvents:userLiked};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/userevents'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        try {\n            const result = await axios(config)\n                .then(function (response) {\n                    var res = response.data;\n                    console.log(res);\n                    setUserEvents(res);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                });\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    }\n    \n    \n\n    const deleteEvent = async event =>\n    {\n        var obj = {_id:eventToDelete};\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/delete'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n        .then(function (response) {\n            var res = response.data;\n            if(res.error) {\n                console.log(res.error);\n            }\n            else {\n                console.log(res);\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    function handleDelete(deleteId) {\n        setEventToDelete(deleteId);\n        deleteEvent();\n    }\n\n    const handleEventUpdate = async (e) => {\n        setStartTime(startHour + \":\" + startMin + \" \" + startAMPM);\n        setEndTime(endHour + \":\" + endMin + \" \" + endAMPM);\n        e.preventDefault();\n        if(title === null) {\n            setEventMsg(\"Invalid title\");\n            return;\n        }\n        else if(category === null) {\n            setEventMsg(\"No category selected\");\n            return;\n        }\n        else if(address === null) {\n            setEventMsg(\"Invalid address\");\n            return;\n        }\n        else if(startTime === null) {\n            setEventMsg(\"Invalid start time\");\n            return;\n        }\n        else if(endTime === null) {\n            setEventMsg(\"Invalid end time\");\n            return;\n        }\n        else if(description === null) {\n            setEventMsg(\"Invalid description\");\n            return;\n        }\n        else if(capacity === null) {\n            setEventMsg(\"Insert a capacity\");\n            return;\n        }\n        \n        const event = currentId;\n        const editPayload = {\n            title,\n            category,\n            address,\n            lat,\n            long,\n            startTime,\n            endTime,\n            createdBy,\n            description,\n            // likes,\n            capacity,\n        }\n        var obj = {event:event,editPayload};\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/editevent'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setEventMsg('Unable to submit, try again');\n                }\n                else {\n                    setEventMsg('');\n                    displayEdit(a => !a);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const handleSubmit = async (e) => {\n        console.log(\"start time: \" + startTime);\n        setStartTime(startHour + \":\" + startMin + \" \" + startAMPM);\n        setEndTime(endHour + \":\" + endMin + \" \" + endAMPM);\n        e.preventDefault();\n        if(title === null) {\n            setEventMsg(\"Invalid title\");\n            return;\n        }\n        else if(category === null) {\n            setEventMsg(\"No category selected\");\n            return;\n        }\n        else if(address === null) {\n            setEventMsg(\"Invalid address\");\n            return;\n        }\n        else if(startTime === null) {\n            setEventMsg(\"Invalid start time\");\n            return;\n        }\n        else if(endTime === null) {\n            setEventMsg(\"Invalid end time\");\n            return;\n        }\n        else if(description === null) {\n            setEventMsg(\"Invalid description\");\n            return;\n        }\n        else if(capacity === null) {\n            setEventMsg(\"Insert a capacity\");\n            return;\n        }\n        \n        \n        const newEvent = {\n            title,\n            category,\n            address,\n            lat,\n            long,\n            startTime,\n            endTime,\n            createdBy,\n            description,\n            // likes,\n            capacity,\n        }\n        try {\n            const url = bp.buildPath(\"api/events/newevent\");\n\n            const res = await axios.post(url, newEvent);\n            setEvents([...events, res.data]);\n            const addToLike = res.data;\n            handleLike(addToLike._id);\n            setNewPlace(null);\n            setEventMsg('');\n            displayContent(a => !a);\n        } catch(err) {\n            console.log(err)\n        }\n    };\n\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n      \n    const ref = useOnclickOutside(() => {\n        // When user clicks outside of the component, we can dismiss\n        // the searched suggestions by calling this method\n        clearSuggestions();\n    });\n    \n    const handleAddressInput = (e) => {\n        // Update the keyword of the input element\n        setValue(e.target.value);\n    };\n    \n    const handleSelect =\n        ({ description }) =>\n        () => {\n          // When user selects a place, we can replace the keyword without request data from API\n          // by setting the second parameter to \"false\"\n          setValue(description, false);\n          setAddress(description);\n          clearSuggestions();\n    \n          // Get latitude and longitude via utility functions\n          getGeocode({ address: description })\n            .then((results) => getLatLng(results[0]))\n            .then(({ lat, lng }) => {\n                setLat(lat);\n                setLong(lng);\n            })\n            .catch((error) => {\n              console.log(\"Error: \", error);\n            });\n        };\n    \n    const renderSuggestions = () =>\n        data.map((suggestion) => {\n          const {\n            place_id,\n            structured_formatting: { main_text, secondary_text },\n          } = suggestion;\n    \n        return (\n            <li className=\"addressResults\" key={place_id} onClick={handleSelect(suggestion)}>\n              <strong>{main_text}</strong> <small>{secondary_text}</small>\n            </li>\n        );\n    });\n\n    function handleLike(itemId)\n    {\n        var _userd = localStorage.getItem('user_data');        \n        var userd = JSON.parse(_userd);\n        var likedEvents = userd.likedEvents;\n        if(likedEvents.includes(itemId)) { // remove the item from likes if it is there\n            for(var i = 0; i < likedEvents.length; i++) {\n                if( likedEvents[i] === itemId) {\n                    likedEvents.splice(i, 1);\n                }\n            }\n        }\n        else { // add it if it isnt\n            likedEvents.push(itemId);\n        }\n\n        testArr = likedEvents;\n        addLike();\n    }\n\n    const addLike = async event =>\n    {\n        var obj = {username:ud.username,likedEvents:testArr};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/likes'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    console.log(res.error);\n                }\n                else {\n                    storage.storeToken(res);\n                    \n                    var user = {firstName:ud.firstName,lastName:ud.lastName,preferences:ud.preferences,username:ud.username,likedEvents:testArr};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    _ud = localStorage.getItem('user_data');\n                    ud = JSON.parse(_ud);\n                }\n            }) \n    }\n    \n    \n\n\n    function getIcon(preferenceName)\n    {\n        if(preferenceName === 'Sports')\n            return faRunning;\n        else if(preferenceName === 'Science')\n            return faFlask;\n        else if(preferenceName === 'Studying')\n            return faUserGraduate;\n        else if(preferenceName === 'Arts & Culture')\n            return faPalette;\n        else if(preferenceName === 'Music')\n            return faGuitar;\n        else if(preferenceName === 'Shopping')\n            return faShoppingBag;\n    }\n\n    function compareIds(x)\n    {\n        if(x === currentId)\n            return true;\n        return false;\n    }\n    \n    function handleOpenEdit(itemId, itemAddress, itemTitle, itemCategory, itemCapacity, itemDesc)\n    {\n        displayEdit(a => !a);\n        setCurrentId(itemId);\n        setAddress(itemAddress);\n        setTitle(itemTitle);\n        setCategory(itemCategory);\n        setCapacity(itemCapacity);\n        setDescription(itemDesc)\n    }\n\n    return(\n        <div className=\"myEvents\">\n            <br /><br /><br />\n            <h1 id=\"eventsHeader\">My Events</h1>\n            <div id=\"postContainer\" onClick={() => displayContent(a => !a)} value={name}>\n                <button id=\"postButton\"><FontAwesomeIcon icon={faPlus}/></button>\n            </div>\n            <div className=\"vl\"></div>\n            <div className=\"eventHolder\">\n                <ul className=\"eventList\">\n                    <button className=\"refreshButton\" onClick={fetchEvents}><FontAwesomeIcon icon={faSync} /></button>\n                    {userEvents.map((item) => (\n                        <li key={item._id} className=\"catEventItem\">\n                            <FontAwesomeIcon className=\"likeIconMyEvents\" icon={faHeart} onClick={handleLike.bind(null, item._id)}/>\n                            <h1 className=\"itemTitle\"><FontAwesomeIcon className=\"myEventsIcon\" icon={getIcon(item.category)} />{item.title}</h1>\n                            <h2 className=\"itemCreator\">Posted by: {item.createdBy}</h2>\n                            <h3 className=\"itemDesc\">{item.description}</h3>\n                            <h3 className=\"itemAddress\">{item.address}</h3>\n                            <h3 className=\"itemTime\">{item.startTime} to {item.endTime}</h3>\n                            {(item.createdBy===ud.username) &&\n                                <div>\n                                    <button className=\"customBtns\" id=\"editBtn\" onClick={handleOpenEdit.bind(null, item._id, item.address, item.title, item.category, item.capacity, item.description)}>Edit</button>\n                                    <button className=\"customBtns\" id=\"deleteBtn\" onClick={handleDelete.bind(null, item._id)}>Delete</button>\n                                \n                                    {compareIds(item._id) && <animated.div className=\"editEvent\" style={editProps}>\n                                        <div className=\"eventPostContainer\">\n                                            <div className=\"position\">\n                                                <div id=\"closeForm\" onClick={() => displayEdit(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                                                <form className=\"eventForm\" onSubmit={handleEventUpdate} autoComplete=\"off\">\n                                                    <h4 className=\"form-header\">Edit your Event!</h4>\n                                                    <label className=\"label\" id=\"name-label\">title: \n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"input-field\" \n                                                            id=\"name-input\" \n                                                            placeholder=\"Enter title...\"\n                                                            defaultValue={item.title}\n                                                            onChange={(e) => setTitle(e.target.value)}\n                                                        />\n                                                    </label>\n                                                    <label className=\"label\" id=\"cat-label\">category:\n                                                        <select id=\"options-list\" onChange={(e) => setCategory(e.target.value)}>\n                                                            <option id=\"cat-options\" value={null}></option>\n                                                            <option id=\"cat-options\" value=\"Arts & Culture\">Arts & Culture</option>\n                                                            <option id=\"cat-options\" value=\"Sports\">Sports</option>\n                                                            <option id=\"cat-options\" value=\"Science\">Science</option>\n                                                            <option id=\"cat-options\" value=\"Music\">Music</option>\n                                                            <option id=\"cat-options\" value=\"Shopping\">Shopping</option>\n                                                            <option id=\"cat-options\" value=\"Studying\">Studying</option>\n                                                        </select>\n                                                    </label>\n                                                    <label className=\"label\" id=\"add-label\">address:\n                                                        <div ref={ref}>\n                                                            <input \n                                                            defaultValue={item.address}\n                                                            value={value}\n                                                            type=\"text\" \n                                                            className=\"input-field\" \n                                                            id=\"add-input\" \n                                                            placeholder=\"Enter address...\"\n                                                            onChange={handleAddressInput}\n                                                            />\n                                                            {status === \"OK\" && <ul className=\"addressUl\">{renderSuggestions()}</ul>}\n                                                        </div>\n                                                    </label>\n                                                    <label className=\"label\" id=\"startTime-label\">start time:\n                                                        <select className=\"time\" defaultValue=\"12\" id=\"time-hour-select\" onChange={(e) => setStartHour(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"12\">12</option>\n                                                            <option className=\"time-options\" value=\"1\">1</option>\n                                                            <option className=\"time-options\" value=\"2\">2</option>\n                                                            <option className=\"time-options\" value=\"3\">3</option>\n                                                            <option className=\"time-options\" value=\"4\">4</option>\n                                                            <option className=\"time-options\" value=\"5\">5</option>\n                                                            <option className=\"time-options\" value=\"6\">6</option>\n                                                            <option className=\"time-options\" value=\"7\">7</option>\n                                                            <option className=\"time-options\" value=\"1\">8</option>\n                                                            <option className=\"time-options\" value=\"9\">9</option>\n                                                            <option className=\"time-options\" value=\"10\">10</option>\n                                                            <option className=\"time-options\" value=\"11\">11</option>\n                                                        </select>\n                                                        <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => setStartMin(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"00\">00</option>\n                                                            <option className=\"time-options\" value=\"01\">01</option>\n                                                            <option className=\"time-options\" value=\"02\">02</option>\n                                                            <option className=\"time-options\" value=\"03\">03</option>\n                                                            <option className=\"time-options\" value=\"04\">04</option>\n                                                            <option className=\"time-options\" value=\"05\">05</option>\n                                                            <option className=\"time-options\" value=\"06\">06</option>\n                                                            <option className=\"time-options\" value=\"07\">07</option>\n                                                            <option className=\"time-options\" value=\"08\">08</option>\n                                                            <option className=\"time-options\" value=\"09\">09</option>\n                                                            <option className=\"time-options\" value=\"10\">10</option>\n                                                            <option className=\"time-options\" value=\"00\">11</option>\n                                                            <option className=\"time-options\" value=\"01\">12</option>\n                                                            <option className=\"time-options\" value=\"02\">13</option>\n                                                            <option className=\"time-options\" value=\"03\">14</option>\n                                                            <option className=\"time-options\" value=\"04\">15</option>\n                                                            <option className=\"time-options\" value=\"05\">15</option>\n                                                            <option className=\"time-options\" value=\"06\">16</option>\n                                                            <option className=\"time-options\" value=\"07\">17</option>\n                                                            <option className=\"time-options\" value=\"08\">18</option>\n                                                            <option className=\"time-options\" value=\"09\">19</option>\n                                                            <option className=\"time-options\" value=\"10\">20</option>\n                                                            <option className=\"time-options\" value=\"00\">21</option>\n                                                            <option className=\"time-options\" value=\"01\">22</option>\n                                                            <option className=\"time-options\" value=\"02\">23</option>\n                                                            <option className=\"time-options\" value=\"03\">24</option>\n                                                            <option className=\"time-options\" value=\"04\">25</option>\n                                                            <option className=\"time-options\" value=\"05\">25</option>\n                                                            <option className=\"time-options\" value=\"06\">26</option>\n                                                            <option className=\"time-options\" value=\"07\">27</option>\n                                                            <option className=\"time-options\" value=\"08\">28</option>\n                                                            <option className=\"time-options\" value=\"09\">29</option>\n                                                            <option className=\"time-options\" value=\"10\">30</option>\n                                                            <option className=\"time-options\" value=\"00\">31</option>\n                                                            <option className=\"time-options\" value=\"01\">32</option>\n                                                            <option className=\"time-options\" value=\"02\">33</option>\n                                                            <option className=\"time-options\" value=\"03\">34</option>\n                                                            <option className=\"time-options\" value=\"04\">35</option>\n                                                            <option className=\"time-options\" value=\"05\">35</option>\n                                                            <option className=\"time-options\" value=\"06\">36</option>\n                                                            <option className=\"time-options\" value=\"07\">37</option>\n                                                            <option className=\"time-options\" value=\"08\">38</option>\n                                                            <option className=\"time-options\" value=\"09\">39</option>\n                                                            <option className=\"time-options\" value=\"10\">40</option>\n                                                            <option className=\"time-options\" value=\"00\">41</option>\n                                                            <option className=\"time-options\" value=\"01\">42</option>\n                                                            <option className=\"time-options\" value=\"02\">43</option>\n                                                            <option className=\"time-options\" value=\"03\">44</option>\n                                                            <option className=\"time-options\" value=\"04\">45</option>\n                                                            <option className=\"time-options\" value=\"05\">45</option>\n                                                            <option className=\"time-options\" value=\"06\">46</option>\n                                                            <option className=\"time-options\" value=\"07\">47</option>\n                                                            <option className=\"time-options\" value=\"08\">48</option>\n                                                            <option className=\"time-options\" value=\"09\">49</option>\n                                                            <option className=\"time-options\" value=\"10\">50</option>\n                                                            <option className=\"time-options\" value=\"00\">51</option>\n                                                            <option className=\"time-options\" value=\"01\">52</option>\n                                                            <option className=\"time-options\" value=\"02\">53</option>\n                                                            <option className=\"time-options\" value=\"03\">54</option>\n                                                            <option className=\"time-options\" value=\"04\">55</option>\n                                                            <option className=\"time-options\" value=\"05\">55</option>\n                                                            <option className=\"time-options\" value=\"06\">56</option>\n                                                            <option className=\"time-options\" value=\"07\">57</option>\n                                                            <option className=\"time-options\" value=\"08\">58</option>\n                                                            <option className=\"time-options\" value=\"09\">59</option>\n                                                        </select>\n                                                        <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setStartAMPM(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"AM\">AM</option>\n                                                            <option className=\"time-options\" value=\"PM\">PM</option>\n                                                        </select>\n                                                    </label>\n                                                    <label className=\"label\" id=\"endTime-label\">end time:\n                                                        <select className=\"time\" id=\"time-hour-select\" defaultValue=\"12\" onChange={(e) => setEndHour(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"12\">12</option>\n                                                            <option className=\"time-options\" value=\"1\">1</option>\n                                                            <option className=\"time-options\" value=\"2\">2</option>\n                                                            <option className=\"time-options\" value=\"3\">3</option>\n                                                            <option className=\"time-options\" value=\"4\">4</option>\n                                                            <option className=\"time-options\" value=\"5\">5</option>\n                                                            <option className=\"time-options\" value=\"6\">6</option>\n                                                            <option className=\"time-options\" value=\"7\">7</option>\n                                                            <option className=\"time-options\" value=\"1\">8</option>\n                                                            <option className=\"time-options\" value=\"9\">9</option>\n                                                            <option className=\"time-options\" value=\"10\">10</option>\n                                                            <option className=\"time-options\" value=\"11\">11</option>\n                                                        </select>\n                                                        <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => setEndMin(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"00\">00</option>\n                                                            <option className=\"time-options\" value=\"01\">01</option>\n                                                            <option className=\"time-options\" value=\"02\">02</option>\n                                                            <option className=\"time-options\" value=\"03\">03</option>\n                                                            <option className=\"time-options\" value=\"04\">04</option>\n                                                            <option className=\"time-options\" value=\"05\">05</option>\n                                                            <option className=\"time-options\" value=\"06\">06</option>\n                                                            <option className=\"time-options\" value=\"07\">07</option>\n                                                            <option className=\"time-options\" value=\"08\">08</option>\n                                                            <option className=\"time-options\" value=\"09\">09</option>\n                                                            <option className=\"time-options\" value=\"10\">10</option>\n                                                            <option className=\"time-options\" value=\"00\">11</option>\n                                                            <option className=\"time-options\" value=\"01\">12</option>\n                                                            <option className=\"time-options\" value=\"02\">13</option>\n                                                            <option className=\"time-options\" value=\"03\">14</option>\n                                                            <option className=\"time-options\" value=\"04\">15</option>\n                                                            <option className=\"time-options\" value=\"05\">15</option>\n                                                            <option className=\"time-options\" value=\"06\">16</option>\n                                                            <option className=\"time-options\" value=\"07\">17</option>\n                                                            <option className=\"time-options\" value=\"08\">18</option>\n                                                            <option className=\"time-options\" value=\"09\">19</option>\n                                                            <option className=\"time-options\" value=\"10\">20</option>\n                                                            <option className=\"time-options\" value=\"00\">21</option>\n                                                            <option className=\"time-options\" value=\"01\">22</option>\n                                                            <option className=\"time-options\" value=\"02\">23</option>\n                                                            <option className=\"time-options\" value=\"03\">24</option>\n                                                            <option className=\"time-options\" value=\"04\">25</option>\n                                                            <option className=\"time-options\" value=\"05\">25</option>\n                                                            <option className=\"time-options\" value=\"06\">26</option>\n                                                            <option className=\"time-options\" value=\"07\">27</option>\n                                                            <option className=\"time-options\" value=\"08\">28</option>\n                                                            <option className=\"time-options\" value=\"09\">29</option>\n                                                            <option className=\"time-options\" value=\"10\">30</option>\n                                                            <option className=\"time-options\" value=\"00\">31</option>\n                                                            <option className=\"time-options\" value=\"01\">32</option>\n                                                            <option className=\"time-options\" value=\"02\">33</option>\n                                                            <option className=\"time-options\" value=\"03\">34</option>\n                                                            <option className=\"time-options\" value=\"04\">35</option>\n                                                            <option className=\"time-options\" value=\"05\">35</option>\n                                                            <option className=\"time-options\" value=\"06\">36</option>\n                                                            <option className=\"time-options\" value=\"07\">37</option>\n                                                            <option className=\"time-options\" value=\"08\">38</option>\n                                                            <option className=\"time-options\" value=\"09\">39</option>\n                                                            <option className=\"time-options\" value=\"10\">40</option>\n                                                            <option className=\"time-options\" value=\"00\">41</option>\n                                                            <option className=\"time-options\" value=\"01\">42</option>\n                                                            <option className=\"time-options\" value=\"02\">43</option>\n                                                            <option className=\"time-options\" value=\"03\">44</option>\n                                                            <option className=\"time-options\" value=\"04\">45</option>\n                                                            <option className=\"time-options\" value=\"05\">45</option>\n                                                            <option className=\"time-options\" value=\"06\">46</option>\n                                                            <option className=\"time-options\" value=\"07\">47</option>\n                                                            <option className=\"time-options\" value=\"08\">48</option>\n                                                            <option className=\"time-options\" value=\"09\">49</option>\n                                                            <option className=\"time-options\" value=\"10\">50</option>\n                                                            <option className=\"time-options\" value=\"00\">51</option>\n                                                            <option className=\"time-options\" value=\"01\">52</option>\n                                                            <option className=\"time-options\" value=\"02\">53</option>\n                                                            <option className=\"time-options\" value=\"03\">54</option>\n                                                            <option className=\"time-options\" value=\"04\">55</option>\n                                                            <option className=\"time-options\" value=\"05\">55</option>\n                                                            <option className=\"time-options\" value=\"06\">56</option>\n                                                            <option className=\"time-options\" value=\"07\">57</option>\n                                                            <option className=\"time-options\" value=\"08\">58</option>\n                                                            <option className=\"time-options\" value=\"09\">59</option>\n                                                        </select>\n                                                        <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setEndAMPM(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"AM\">AM</option>\n                                                            <option className=\"time-options\" value=\"PM\">PM</option>\n                                                        </select>\n                                                    </label>\n                                                    <label className=\"label\" id=\"desc-label\" >description:</label>\n                                                    <textarea \n                                                        id=\"comment-box\" \n                                                        defaultValue={item.description}\n                                                        placeholder=\"Comments...\" \n                                                        rows=\"9\" \n                                                        cols=\"40\"\n                                                        onChange={(e) => setDescription(e.target.value)}\n                                                    />\n                                                    <label className=\"label\" id=\"cap-label\">capacity:\n                                                        <input \n                                                            defaultValue={item.capacity}\n                                                            type=\"number\" \n                                                            className=\"input-field\" \n                                                            id=\"cap-input\" \n                                                            min=\"0\"\n                                                            onChange={(e) => setCapacity(e.target.value)}\n                                                        />\n                                                    </label>\n                                                    <div className=\"submitContainer\">\n                                                        <button type =\"submit\" id=\"submitEvent\">Add Event</button>\n                                                    </div>\n                                                    <span className=\"eventError\">{eventMsg}</span>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </animated.div>}\n                                </div>\n                            }\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            \n            \n            <animated.div className=\"addEvent\" style={contentProps}>\n                <div className=\"eventPostContainer\">\n                    <div className=\"position\">\n                        <div id=\"closeForm\" onClick={() => displayContent(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                        <form className=\"eventForm\" onSubmit={handleSubmit} autoComplete=\"off\">\n                            <h4 className=\"form-header\">Add an Event!</h4>\n                            <label className=\"label\" id=\"name-label\">title: \n                                <input \n                                    type=\"text\" \n                                    className=\"input-field\" \n                                    id=\"name-input\" \n                                    placeholder=\"Enter title...\"\n                                    onChange={(e) => setTitle(e.target.value)}\n                                />\n                            </label>\n                            <label className=\"label\" id=\"cat-label\">category:\n                                <select id=\"options-list\" onChange={(e) => setCategory(e.target.value)}>\n                                    <option id=\"cat-options\" value={null}></option>\n                                    <option id=\"cat-options\" value=\"Arts & Culture\">Arts & Culture</option>\n                                    <option id=\"cat-options\" value=\"Sports\">Sports</option>\n                                    <option id=\"cat-options\" value=\"Science\">Science</option>\n                                    <option id=\"cat-options\" value=\"Music\">Music</option>\n                                    <option id=\"cat-options\" value=\"Shopping\">Shopping</option>\n                                    <option id=\"cat-options\" value=\"Studying\">Studying</option>\n                                </select>\n                            </label>\n                            <label className=\"label\" id=\"add-label\">address:\n                                <div ref={ref}>\n                                    <input \n                                    type=\"text\" \n                                    className=\"input-field\" \n                                    id=\"add-input\" \n                                    placeholder=\"Enter address...\"\n                                    onChange={handleAddressInput}\n                                    />\n                                    {status === \"OK\" && <ul className=\"addressUl\">{renderSuggestions()}</ul>}\n                                </div>\n                            </label>\n                            <label className=\"label\" id=\"startTime-label\">start time:\n                                <select className=\"time\" defaultValue=\"12\" id=\"time-hour-select\" onChange={(e) => setStartHour(e.target.value)}>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"1\">1</option>\n                                    <option className=\"time-options\" value=\"2\">2</option>\n                                    <option className=\"time-options\" value=\"3\">3</option>\n                                    <option className=\"time-options\" value=\"4\">4</option>\n                                    <option className=\"time-options\" value=\"5\">5</option>\n                                    <option className=\"time-options\" value=\"6\">6</option>\n                                    <option className=\"time-options\" value=\"7\">7</option>\n                                    <option className=\"time-options\" value=\"1\">8</option>\n                                    <option className=\"time-options\" value=\"9\">9</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                </select>\n                                <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => setStartMin(e.target.value)}>\n                                    <option className=\"time-options\" value=\"00\" selected>00</option>\n                                    <option className=\"time-options\" value=\"01\">01</option>\n                                    <option className=\"time-options\" value=\"02\">02</option>\n                                    <option className=\"time-options\" value=\"03\">03</option>\n                                    <option className=\"time-options\" value=\"04\">04</option>\n                                    <option className=\"time-options\" value=\"05\">05</option>\n                                    <option className=\"time-options\" value=\"06\">06</option>\n                                    <option className=\"time-options\" value=\"07\">07</option>\n                                    <option className=\"time-options\" value=\"08\">08</option>\n                                    <option className=\"time-options\" value=\"09\">09</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"13\">13</option>\n                                    <option className=\"time-options\" value=\"14\">14</option>\n                                    <option className=\"time-options\" value=\"15\">15</option>\n                                    <option className=\"time-options\" value=\"16\">16</option>\n                                    <option className=\"time-options\" value=\"17\">17</option>\n                                    <option className=\"time-options\" value=\"18\">18</option>\n                                    <option className=\"time-options\" value=\"19\">19</option>\n                                    <option className=\"time-options\" value=\"20\">20</option>\n                                    <option className=\"time-options\" value=\"21\">21</option>\n                                    <option className=\"time-options\" value=\"22\">22</option>\n                                    <option className=\"time-options\" value=\"23\">23</option>\n                                    <option className=\"time-options\" value=\"24\">24</option>\n                                    <option className=\"time-options\" value=\"25\">25</option>\n                                    <option className=\"time-options\" value=\"26\">26</option>\n                                    <option className=\"time-options\" value=\"27\">27</option>\n                                    <option className=\"time-options\" value=\"28\">28</option>\n                                    <option className=\"time-options\" value=\"29\">29</option>\n                                    <option className=\"time-options\" value=\"30\">30</option>\n                                    <option className=\"time-options\" value=\"31\">31</option>\n                                    <option className=\"time-options\" value=\"32\">32</option>\n                                    <option className=\"time-options\" value=\"44\">33</option>\n                                    <option className=\"time-options\" value=\"34\">34</option>\n                                    <option className=\"time-options\" value=\"35\">35</option>\n                                    <option className=\"time-options\" value=\"36\">36</option>\n                                    <option className=\"time-options\" value=\"37\">37</option>\n                                    <option className=\"time-options\" value=\"38\">38</option>\n                                    <option className=\"time-options\" value=\"39\">39</option>\n                                    <option className=\"time-options\" value=\"40\">40</option>\n                                    <option className=\"time-options\" value=\"41\">41</option>\n                                    <option className=\"time-options\" value=\"42\">42</option>\n                                    <option className=\"time-options\" value=\"43\">43</option>\n                                    <option className=\"time-options\" value=\"44\">44</option>\n                                    <option className=\"time-options\" value=\"45\">45</option>\n                                    <option className=\"time-options\" value=\"46\">46</option>\n                                    <option className=\"time-options\" value=\"47\">47</option>\n                                    <option className=\"time-options\" value=\"48\">48</option>\n                                    <option className=\"time-options\" value=\"49\">49</option>\n                                    <option className=\"time-options\" value=\"50\">50</option>\n                                    <option className=\"time-options\" value=\"51\">51</option>\n                                    <option className=\"time-options\" value=\"52\">52</option>\n                                    <option className=\"time-options\" value=\"53\">53</option>\n                                    <option className=\"time-options\" value=\"54\">54</option>\n                                    <option className=\"time-options\" value=\"55\">55</option>\n                                    <option className=\"time-options\" value=\"56\">56</option>\n                                    <option className=\"time-options\" value=\"57\">57</option>\n                                    <option className=\"time-options\" value=\"58\">58</option>\n                                    <option className=\"time-options\" value=\"59\">59</option>\n                                </select>\n                                <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setStartAMPM(e.target.value)}>\n                                    <option className=\"time-options\" value=\"AM\">AM</option>\n                                    <option className=\"time-options\" value=\"PM\">PM</option>\n                                </select>\n                            </label>\n                            <label className=\"label\" id=\"endTime-label\">end time:\n                                <select className=\"time\" id=\"time-hour-select\" defaultValue=\"12\" onChange={(e) => setEndHour(e.target.value)}>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"1\">1</option>\n                                    <option className=\"time-options\" value=\"2\">2</option>\n                                    <option className=\"time-options\" value=\"3\">3</option>\n                                    <option className=\"time-options\" value=\"4\">4</option>\n                                    <option className=\"time-options\" value=\"5\">5</option>\n                                    <option className=\"time-options\" value=\"6\">6</option>\n                                    <option className=\"time-options\" value=\"7\">7</option>\n                                    <option className=\"time-options\" value=\"1\">8</option>\n                                    <option className=\"time-options\" value=\"9\">9</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                </select>\n                                <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => setEndMin(e.target.value)}>\n                                    <option className=\"time-options\" value=\"00\" selected>00</option>\n                                    <option className=\"time-options\" value=\"01\">01</option>\n                                    <option className=\"time-options\" value=\"02\">02</option>\n                                    <option className=\"time-options\" value=\"03\">03</option>\n                                    <option className=\"time-options\" value=\"04\">04</option>\n                                    <option className=\"time-options\" value=\"05\">05</option>\n                                    <option className=\"time-options\" value=\"06\">06</option>\n                                    <option className=\"time-options\" value=\"07\">07</option>\n                                    <option className=\"time-options\" value=\"08\">08</option>\n                                    <option className=\"time-options\" value=\"09\">09</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"13\">13</option>\n                                    <option className=\"time-options\" value=\"14\">14</option>\n                                    <option className=\"time-options\" value=\"15\">15</option>\n                                    <option className=\"time-options\" value=\"16\">16</option>\n                                    <option className=\"time-options\" value=\"17\">17</option>\n                                    <option className=\"time-options\" value=\"18\">18</option>\n                                    <option className=\"time-options\" value=\"19\">19</option>\n                                    <option className=\"time-options\" value=\"20\">20</option>\n                                    <option className=\"time-options\" value=\"21\">21</option>\n                                    <option className=\"time-options\" value=\"22\">22</option>\n                                    <option className=\"time-options\" value=\"23\">23</option>\n                                    <option className=\"time-options\" value=\"24\">24</option>\n                                    <option className=\"time-options\" value=\"25\">25</option>\n                                    <option className=\"time-options\" value=\"26\">26</option>\n                                    <option className=\"time-options\" value=\"27\">27</option>\n                                    <option className=\"time-options\" value=\"28\">28</option>\n                                    <option className=\"time-options\" value=\"29\">29</option>\n                                    <option className=\"time-options\" value=\"30\">30</option>\n                                    <option className=\"time-options\" value=\"31\">31</option>\n                                    <option className=\"time-options\" value=\"32\">32</option>\n                                    <option className=\"time-options\" value=\"44\">33</option>\n                                    <option className=\"time-options\" value=\"34\">34</option>\n                                    <option className=\"time-options\" value=\"35\">35</option>\n                                    <option className=\"time-options\" value=\"36\">36</option>\n                                    <option className=\"time-options\" value=\"37\">37</option>\n                                    <option className=\"time-options\" value=\"38\">38</option>\n                                    <option className=\"time-options\" value=\"39\">39</option>\n                                    <option className=\"time-options\" value=\"40\">40</option>\n                                    <option className=\"time-options\" value=\"41\">41</option>\n                                    <option className=\"time-options\" value=\"42\">42</option>\n                                    <option className=\"time-options\" value=\"43\">43</option>\n                                    <option className=\"time-options\" value=\"44\">44</option>\n                                    <option className=\"time-options\" value=\"45\">45</option>\n                                    <option className=\"time-options\" value=\"46\">46</option>\n                                    <option className=\"time-options\" value=\"47\">47</option>\n                                    <option className=\"time-options\" value=\"48\">48</option>\n                                    <option className=\"time-options\" value=\"49\">49</option>\n                                    <option className=\"time-options\" value=\"50\">50</option>\n                                    <option className=\"time-options\" value=\"51\">51</option>\n                                    <option className=\"time-options\" value=\"52\">52</option>\n                                    <option className=\"time-options\" value=\"53\">53</option>\n                                    <option className=\"time-options\" value=\"54\">54</option>\n                                    <option className=\"time-options\" value=\"55\">55</option>\n                                    <option className=\"time-options\" value=\"56\">56</option>\n                                    <option className=\"time-options\" value=\"57\">57</option>\n                                    <option className=\"time-options\" value=\"58\">58</option>\n                                    <option className=\"time-options\" value=\"59\">59</option>\n                                </select>\n                                <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setEndAMPM(e.target.value)}>\n                                    <option className=\"time-options\" value=\"AM\">AM</option>\n                                    <option className=\"time-options\" value=\"PM\">PM</option>\n                                </select>\n                            </label>\n                            <label className=\"label\" id=\"desc-label\" >description:</label>\n                            <textarea \n                                id=\"comment-box\" \n                                placeholder=\"Comments...\" \n                                rows=\"9\" \n                                cols=\"40\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <label className=\"label\" id=\"cap-label\">capacity:\n                                <input \n                                    type=\"number\" \n                                    className=\"input-field\" \n                                    id=\"cap-input\" \n                                    min=\"0\"\n                                    onChange={(e) => setCapacity(e.target.value)}\n                                />\n                            </label>\n                            <div className=\"submitContainer\">\n                                <button type =\"submit\" id=\"submitEvent\">Add Event</button>\n                            </div>\n                            <span className=\"eventError\">{eventMsg}</span>\n                        </form>\n                    </div>\n                </div>\n            </animated.div>\n            \n        </div>\n    );\n};\n\nfunction OngoingEvents() {\n    var testArr = []; // had to implement this because react fucking sucks\n                      // not changing the name, but it's final\n\n    const [contentStatus, displayContent] = React.useState(false);\n    const [resultList, setResultList] = useState([]);\n    const [category, setCategory] = useState('');\n    const [edit, setEdit] = useState(false);\n    const contentProps = useSpring({\n        opacity: contentStatus ? 1 : 0,\n    });\n    const [likeColor, setLikeColor] = useState();\n\n    var currentCat = '';\n\n    var resultArr = [];\n\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    const jwt = require(\"jsonwebtoken\");\n\n    const loadCategories = async event =>\n    {\n        if(currentCat === \"arts & culture\") {\n            currentCat = \"Arts & Culture\";\n        }\n        else {\n            currentCat = currentCat.charAt(0).toUpperCase() + currentCat.slice(1);\n        }\n        var tok = storage.retrieveToken();\n        var obj = {category:currentCat};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/findcat'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n        try {\n            const result = await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                \n                for(var i = 0; i < res.length; i++) {\n                    resultArr.push(res[i]);\n                }\n\n                setResultList(resultArr);\n                //setResultList(res);\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    };\n\n    function handleOpenCategory(preferenceName) {\n        var cat = preferenceName.preference;\n        currentCat = cat;\n        setCategory(currentCat);\n        loadCategories();\n        if(contentStatus == false)\n            displayContent(a => !a);\n    }\n\n    var preferences = [];\n    for(var i = 0; i < ud.preferences.length; i++) {\n        preferences.push(ud.preferences[i]);\n    }\n\n    function getIcon(preferenceName) {\n        preferenceName = preferenceName.preference;\n        if(preferenceName === 'Sports')\n            return faRunning;\n        else if(preferenceName === 'Science')\n            return faFlask;\n        else if(preferenceName === 'Studying')\n            return faUserGraduate;\n        else if(preferenceName === 'Arts & Culture')\n            return faPalette;\n        else if(preferenceName === 'Music')\n            return faGuitar;\n        else if(preferenceName === 'Shopping')\n            return faShoppingBag;\n    }\n\n    const listCategories = preferences.map((preference) =>\n        <li className=\"eventItem\" onClick={ () => handleOpenCategory({preference}) } key={preference}><h1 className=\"catText\">{preference}<FontAwesomeIcon className=\"categoryIcon\" icon={getIcon({preference})} /></h1></li>\n    );\n\n    function handleLike(itemId)\n    {\n        var _userd = localStorage.getItem('user_data');        \n        var userd = JSON.parse(_userd);\n        var likedEvents = userd.likedEvents;\n        if(likedEvents.includes(itemId)) { // remove the item from likes if it is there\n            for(var i = 0; i < likedEvents.length; i++) {\n                if( likedEvents[i] === itemId) {\n                    likedEvents.splice(i, 1);\n                }\n            }\n        }\n        \n        else { // add it if it isnt\n            likedEvents.push(itemId);\n        }\n\n        testArr = likedEvents;\n        addLike();\n    }\n\n    const addLike = async event =>\n    {\n        var obj = {username:ud.username,likedEvents:testArr};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/likes'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    console.log(res.error);\n                }\n                else {\n                    storage.storeToken(res);\n                    \n                    var user = {firstName:ud.firstName,lastName:ud.lastName,preferences:ud.preferences,username:ud.username,likedEvents:testArr};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    _ud = localStorage.getItem('user_data');\n                    ud = JSON.parse(_ud);\n                }\n            }) \n    }\n\n    \n    return (\n        <div id=\"ongoing-Events\">\n            <ul className=\"ongoing-List\">\n                {listCategories}\n                <li className=\"eventItem\"><h1 className=\"catText\">Search</h1><FontAwesomeIcon className=\"categoryIcon\" icon={faSearch} /></li>\n            </ul><br />\n            <animated.div className=\"categoryList\" style={contentProps}>\n                <div id=\"categoryContainer\">\n                    <div id=\"closeFormNearby\" onClick={() => displayContent(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                    <h1 className=\"listHeader\">{category}</h1>\n                    <ul className=\"catEventList\">\n                        {resultList.map((item) => (\n                            <li key={item._id} className=\"catEventItem\">\n                                <div className=\"listInfo\">\n                                    <FontAwesomeIcon className=\"likeIcon\" icon={faHeart} style={likeColor} onClick={handleLike.bind(null, item._id)}/>\n                                    <h1 className=\"itemTitle\">{item.title}</h1>\n                                    <h2 className=\"itemCreator\">Posted by: {item.createdBy}</h2>\n                                    <h3 className=\"itemDesc\">{item.description}</h3>\n                                    <h3 className=\"itemAddress\">{item.address}</h3>\n                                    <h3 className=\"itemTime\">{item.startTime} to {item.endTime}</h3>\n                                    {(item.createdBy===ud.username) &&\n                                        <div>\n                                            <button className=\"customBtns\" id=\"editBtn\">Edit</button>\n                                            <button className=\"customBtns\" id=\"deleteBtn\">Delete</button>\n                                        </div>\n                                    }\n                                    \n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </animated.div>\n        </div>\n    );\n}\n\nfunction HomePage() {\n    return(\n        <div>\n            <TopNav />\n            <Events />\n            <div className=\"nearbyEvents\">\n                <h1 id=\"ongoing\">Events Near U</h1>\n                <OngoingEvents />\n            </div>\n        </div>\n    );\n};\n\nfunction Home()\n{\n    return(\n        <div className=\"HomePage\">\n            <div className=\"homeBg\">\n                <HomePage />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","/home/elr/largeProject/event-u/frontend/src/components/Calendar.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Path.js",[],"/home/elr/largeProject/event-u/frontend/src/tokenStorage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/ConfirmDelete.js",[],"/home/elr/largeProject/event-u/frontend/src/components/TopNav.js",["184","185","186","187","188"],"import { faHome } from \"@fortawesome/free-solid-svg-icons\"\nimport { faCalendar, faMap, faUser } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useState } from \"react\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\n\n\nconst TopNav = () => {\n    var currentUrl = window.location.pathname;\n    console.log(currentUrl);\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n    var username = ud.username;\n    var preferences = ud.preferences;\n\n    function setColorHome() {\n        if(currentUrl === '/home') return 'homeActive';\n    }\n    function setColorCalender() {\n        if(currentUrl === '/calendar') return 'calendarActive';\n    }\n    function setColorMap() {\n        if(currentUrl === '/map') return 'mapActive';\n    }\n    \n\n    const[isDisplayed, setDisplay] = useState(false)\n\n    const openNotif = () => {\n        // alert('Works!')\n        setDisplay(!isDisplayed);\n    }\n\n    const onClickHome = () => {\n        window.location.href=\"/home\";\n    }\n\n    const onClickMap = () => {\n        window.location.href=\"/map\";\n    }\n\n    const onClickCalender = () => {\n        window.location.href = \"/calendar\";\n    }\n\n    const onClickSettings = () => {\n        window.location.href = \"/settings\";\n    }\n\n    function doLogout() {\n        localStorage.clear();\n        window.location.href = \"/\";\n    }\n\n    return(\n        <div className=\"topContainer\">\n            <div className=\"topBar\">\n                <div className=\"linkContainer\">\n                    <a className=\"topBarLink\" id={setColorHome()} onClick={onClickHome}><FontAwesomeIcon icon={faHome} className=\"topBarIcon\"/></a>\n                    <a className=\"topBarLink\" id={setColorCalender()} onClick={onClickCalender}><FontAwesomeIcon icon={faCalendar} className=\"topBarIcon\"/></a>\n                    <a className=\"topBarLink\" id={setColorMap()} onClick={onClickMap}><FontAwesomeIcon icon={faMap} className=\"topBarIcon\"/></a>\n                </div>\n                <FontAwesomeIcon icon={faUser} className=\"topBarLink\" id=\"notifications\" onClick={openNotif}/>\n                \n                <div className={`${isDisplayed ? 'notification-active' : 'notification-box'}`} id=\"notification\">\n                    <div className=\"userBtnContainer\">\n                        <h1 id=\"userBarHead\">Welcome back {firstName} {lastName}!</h1>\n                        <br />\n                        <button className=\"userBtns\" id=\"logoutBtn\" onClick={doLogout}>Logout</button>\n                        <button className=\"userBtns\" id=\"settingsBtn\" onClick={onClickSettings}>Settings</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TopNav;","/home/elr/largeProject/event-u/frontend/src/components/Month.js",["189"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {\n  addDays,\n  format,\n  parseISO,\n  startOfWeek,\n  endOfWeek,\n  startOfMonth,\n  endOfMonth,\n  startOfDay,\n  isBefore,\n  isSameMonth,\n  isSameDay,\n} from \"date-fns\";\n\nimport \"./css/calendar.css\";\nimport Day from \"./Day.js\";\nimport FullDay from \"./FullDay.js\";\n\n\n\nexport default function Month(props) {\n\n    //buildpath\n    const app_name = 'event-u'\n    function buildPath(route)\n    {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n    \n    const [isOpen, setIsOpen] = useState(false);\n    const [fullDay, setFullDay] = useState(new Date());\n    var apiDateFormat = \"yyyy-MM-dd\";\n    var selectedDate;\n\n    if(!props.date){\n        selectedDate = startOfDay(new Date());\n    } else {\n        selectedDate = parseISO(props.date);\n    }\n\n    // build calendar array\n    let month = [];\n    let startDate = startOfWeek(startOfMonth(selectedDate));\n    let endDate = endOfWeek(endOfMonth(selectedDate));\n    let insertDate = startDate;\n\n    while(isBefore(insertDate, endDate)){\n        month.push(insertDate);\n        insertDate = addDays(insertDate, 1);\n    }\n\n    // dateStack\n    addDays(endDate, 1);\n    let [events, setEvents] = useState([]);\n    let dateStack = [];\n\n    useEffect(() => {\n        let getEvents = async () => {\n            try{\n                const res = await axios.post(buildPath('api/events/inrange/'),\n                {\n                    start : startDate,\n                    end : endDate\n                }\n                );\n                console.log(res.data);\n                setEvents(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        getEvents();\n    }, [props.date]);\n  \n    //Push Event Dates to DateStack\n    for( let i = 0; i < events.length; i++){\n        dateStack.push((events[i].startTime));\n    }\n\n    //Only Render Events Day Tiles on Days with Events\n    function renderDayEvents(day){\n        if(isSameDay(day, parseISO(dateStack[0]) )){\n        dateStack.shift();\n        //Get rid of all duplicate dates in dateStack\n        while(isSameDay(day, parseISO(dateStack[0]) )){\n            dateStack.shift();\n        }\n        return(\n            <Day key={day} date={format(day, apiDateFormat)}/>\n        );\n\n        }\n    }\n\n    function dayColor(day) {\n        if (!isSameMonth(day, selectedDate)) return \"dayOutsideMonth\";\n        if (isSameDay(day, new Date())) return \"today\";\n        return \"day\";\n    }\n\n\n    return (\n\n        <div>\n            {isOpen ? <div className=\"fullday\">\n                <span className=\"closeFullDay\" onClick={() => setIsOpen(false)}>\n                    x\n                </span>\n                <FullDay date={format(fullDay, apiDateFormat)} />\n            </div> : null}\n\n            <div className=\"calendargrid\">\n\n                {/* the weekday headers for the calendar */}\n\n                {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((dayName) => (\n                <div className=\"weekDay\" key={dayName}>\n                    <span>{dayName}</span>\n                </div>\n                ))}\n                \n                {/* Days in the Calendar */}\n                {\n                    month.map((day) => (\n                        <div onClick={() => {setIsOpen(!isOpen); setFullDay(day)}}>\n                        <div className={`${dayColor(day)}`} key={format(day, \"yyyy-MM-dd\")}>\n                            \n                            <span>{format(day, \"dd\")}</span>\n                        {/* Event Lists on Day Tiles */}\n                        {renderDayEvents(day)}\n                            \n                        </div>\n                        </div>\n                        \n                    ))\n\n\n                }\n            </div>\n         </div>\n    )\n}","/home/elr/largeProject/event-u/frontend/src/components/Day.js",["190","191"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {\n  addDays,\n  format,\n  parseISO\n} from \"date-fns\";\n\nimport \"./css/calendar.css\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\n\n\nexport default function Day(props) {\n    //buildpath\n    const app_name = 'event-u'\n    function buildPath(route)\n    {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n\n\n    const [events, setEvents] = useState([]);\n    var formatEventDate = \"h:mm aaa\";\n    var apiDateFormat = \"yyyy-MM-dd\";\n    // format(event.startTime, formatEventDate)\n    var startDate;\n    var endDate;\n    if(!props.date){\n        const date = new Date();\n        startDate = format(date, apiDateFormat);\n        endDate = format(addDays(date, 1), apiDateFormat)\n    } else {\n        const propDate = parseISO(props.date);\n        startDate = format(propDate, apiDateFormat);\n        endDate = format(addDays(propDate, 1), apiDateFormat);\n    }\n\n    \n    useEffect(() => {\n        const getEvents = async () => {\n            try{\n                const res = await axios.post(buildPath('api/events/inrange/'),\n                {\n                    start : startDate,\n                    end : endDate\n                }\n                );\n                console.log(res.data);\n                setEvents(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        getEvents();\n    }, []);\n\n\n    function listLength(events){\n        if(events.length > 2){\n            var firstEvents = events.slice(0,3);            \n            return(\n                firstEvents.map(event => \n                    <li className=\"calendarLi\" key={event._id}>{format(parseISO(event.startTime), formatEventDate)} <br/> {event.title}</li>     \n                )     \n            );\n\n        }else{\n            return(\n                events.map(event => \n                    <li className=\"calendarLi\" key={event._id}>{format(parseISO(event.startTime), formatEventDate)} <br/> {event.title}</li>        \n                )\n            );\n        }\n    }\n\n    // className={`${eventHighlight(event._id)}`}\n\n    function moreEvents(events){\n        var moreEvents = events.length - 3;\n        if(events.length > 3 && moreEvents > 1){                               \n            return(\n                <li className=\"calendarLi\">and {moreEvents} more events</li>\n            );\n\n        }else if(events.length > 3 && moreEvents < 2){\n            return(\n                <li className=\"calendarLi\">and {moreEvents} more event</li>\n            );\n        }\n}   \n\n    // function eventHighlight(_id){\n    //     if(ud.attendedEvents.includes(_id)){\n    //         return(\"attendedEvent\");\n    //     }\n    //     else if(ud.likedEvents.includes(_id)){\n    //         return(\"likedEvent\");\n    //     } else {\n    //         return(\"\");\n    //     }\n    // }\n  \n    return (\n        <div>\n            <ul className=\"calendarEventList\">\n                {listLength(events)}\n                {moreEvents(events)}\n            </ul>\n        </div>\n    )   \n};","/home/elr/largeProject/event-u/frontend/src/components/FullDay.js",["192","193"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {\n  addDays,\n  format,\n  parseISO,\n} from \"date-fns\";\n\nimport \"./css/calendar.css\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\n\n\nexport default function FullDay(props) {\n    //buildpath\n    const app_name = 'event-u'\n    function buildPath(route)\n    {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n\n\n    const [events, setEvents] = useState([]);\n    var formatEventDate = \"h:mm aaa\";\n    var apiDateFormat = \"yyyy-MM-dd\";\n    // format(event.startTime, formatEventDate)\n    var startDate;\n    var endDate;\n    if(!props.date){\n        const date = new Date();\n        startDate = format(date, apiDateFormat);\n        endDate = format(addDays(date, 1), apiDateFormat)\n    } else {\n        const propDate = parseISO(props.date);\n        startDate = format(propDate, apiDateFormat);\n        endDate = format(addDays(propDate, 1), apiDateFormat);\n    }\n\n    \n    useEffect(() => {\n        const getEvents = async () => {\n            try{\n                const res = await axios.post(buildPath('api/events/inrange/'),\n                {\n                    start : startDate,\n                    end : endDate\n                }\n                );\n                console.log(res.data);\n                setEvents(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        getEvents();\n    }, []);\n\n    const deleteEvent = (eventid) => {\n\n        console.log(\"clicked on delete\" + eventid);\n        alert(\"delete the event\" + eventid);\n        try{\n            axios.post(buildPath('api/events/delete/'),\n            {\n                _id : eventid\n            }\n            );\n            \n        } catch(err) {\n            console.log(err);\n        }\n        \n\n    }\n\n    function isCreator(username){\n        var storedUsername = ud.username;\n        console.log(\"ud:\" + storedUsername);\n        console.log(\"event creator: \" + username);\n        if(storedUsername === username)return(true);\n        \n    }\n\n    return(\n        <div>\n        <h1>{format(parseISO(props.date), \"MMMM dd\")}</h1><br />\n        <button>add event {ud.username}</button><br/><br/>\n        <ul className=\"fullEventList\">\n        {\n            events.map(event => \n                <li key={event._id} className=\"fullListItem\">\n                    <h2>{event.title} </h2>\n                    <button>like</button> \n                    <button>edit</button>\n                    <button onClick={ () => {deleteEvent(event._id)} }>\n                        delete\n                    </button>                     \n                    <br/>\n                    {format(parseISO(event.startTime), formatEventDate)}&nbsp;-&nbsp; \n                    {format(parseISO(event.endTime), formatEventDate)} <br/> \n                    {event.address}<br />\n                    {event.description}<br />\n                    created by {event.createdBy}<br />\n                    likes {event.likes}<br />\n                    capacity {event.capacity}<br />\n                    \n                    \n                </li>        \n            )\n        }\n        </ul>\n    </div>\n    );\n\n}","/home/elr/largeProject/event-u/frontend/src/pages/SettingsPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Settings.js",["194","195","196","197"],"/home/elr/largeProject/event-u/frontend/src/pages/UpdatePrefPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/UpdatePreferences.js",["198","199","200","201","202","203"],"import React, { useEffect, useState } from 'react';\nimport './css/preferences.css';\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nvar interestArr;\n\n\nfunction ListElements() {\n    const [interestState, setInterestState] = useState([]);\n\n    useEffect(() => {\n        let interestState = [\n            {interest: \"Music\"},\n            {interest: \"Studying\"},\n            {interest: \"Arts & Culture\"},\n            {interest: \"Shopping\"},\n            {interest: \"Science\"},\n            {interest: \"Sports\"},\n        ];\n\n        setInterestState(\n            interestState.map(d=> {\n                return {\n                    select: false,\n                    interest: d.interest\n                };\n            })\n        );\n    }, []);\n    interestArr = interestState;\n\n    return(\n        <div>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <input type=\"checkbox\" onChange={e => {\n                                let checked = e.target.checked;\n                                setInterestState(\n                                    interestState.map(d => {\n                                        d.select = checked;\n                                        return d;\n                                    })\n                                );\n                            }}>\n                            </input>\n                        </th>\n                        <th scope=\"col\" id=\"interestHeader\">Interest</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {interestState.map((d,i) => (\n                        <tr key={d.interest}>\n                            <th scope=\"row\">\n                                <input onChange={event=> {\n                                    let checked = event.target.checked;\n                                    setInterestState(\n                                        interestState.map(data => {\n                                            if(d.interest === data.interest) {\n                                                data.select = checked;\n                                            }\n                                            return data;\n                                        })\n                                    );\n                                }}\n                                type=\"checkbox\"\n                                checked={d.select}\n                                ></input>\n                            </th>\n                            <td>{d.interest}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nfunction Options() {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 45, opacity: 1},        \n    })\n\n    return(\n        <animated.div style={props} className=\"options\">\n            <ul className =\"choiceList\">\n                <ListElements />\n            </ul>\n        </animated.div>\n    );\n};\n\nconst HeaderText = ({}) => {\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 70, opacity: 1}\n    });\n    return <animated.h1 style={props} id=\"welcomeMessage\">Hello {firstName} {lastName}!</animated.h1>\n};\n\nconst SkipOption = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 5, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"skipMessage\">Not interested? <a href='/home'>Skip this step.</a></animated.h2>;\n}\n\nconst HeaderText2 = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 75, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"welcomeParagraph\">Let's get to know you better, select some of the following general interests:</animated.h2>;\n};\n\nconst SubmitButton = ({}) => {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var uname = ud.username;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const [message,setMessage] = useState('');\n\n    const addPreferences = async event =>\n    {\n        const interestPayload = [];\n        for(var i = 0; i < interestArr.length; i++) {\n            if(interestArr[i].select == true) {\n                interestPayload.push(interestArr[i].interest);\n            }\n        }\n\n        event.preventDefault();\n        \n        var obj = {username:uname,preferences:interestPayload};\n        var js = JSON.stringify(obj);\n        console.log(js);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/preferences'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setMessage('Unable to submit, try again');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n                    \n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n                    \n                    var preferences = ud.payload.preferences;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var email = ud.payload.email;\n                    var likedEvents = ud.payload.likedEvents;\n\n                    var user = {firstName:firstName,lastName:lastName,preferences:preferences,username:uname,likedEvents:likedEvents,email:email,attendedEvents:attendedEvents};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    window.location.href = '/settings';\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                console.log(message);\n            });\n    }\n\n    const props = useSpring({\n        from: {y: 700, opacity: 0},\n        to: {y: 0, opacity: 1}\n    });\n\n    return(\n        <div id=\"submitButtonContainer\">\n            <animated.button style={props} onClick={addPreferences} id=\"submitSelections\">Done</animated.button>\n        </div>\n    );\n};\n\nfunction UpdatePreferences() {\n    //const[on, set] = React.useState(true);\n    return(\n        <div className=\"preferencesPage\">\n            <HeaderText />\n            <HeaderText2 />\n            <Options />\n            <SubmitButton />\n            {/* <SkipOption /> */}\n            <span></span>\n        </div>\n    );\n};\n\nexport default UpdatePreferences;",{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":1,"column":27,"nodeType":"210","messageId":"211","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"213","line":14,"column":12,"nodeType":"210","messageId":"211","endLine":14,"endColumn":19},{"ruleId":"208","severity":1,"message":"214","line":14,"column":9,"nodeType":"210","messageId":"211","endLine":14,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":99,"column":21,"nodeType":"217","messageId":"218","endLine":99,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":110,"column":21,"nodeType":"217","messageId":"218","endLine":110,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":118,"column":22,"nodeType":"217","messageId":"218","endLine":118,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":126,"column":23,"nodeType":"217","messageId":"218","endLine":126,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":139,"column":38,"nodeType":"221","messageId":"218","endLine":139,"endColumn":40},{"ruleId":"208","severity":1,"message":"222","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":24},{"ruleId":"208","severity":1,"message":"223","line":5,"column":32,"nodeType":"210","messageId":"211","endLine":5,"endColumn":36},{"ruleId":"208","severity":1,"message":"224","line":17,"column":10,"nodeType":"210","messageId":"211","endLine":17,"endColumn":16},{"ruleId":"208","severity":1,"message":"225","line":17,"column":18,"nodeType":"210","messageId":"211","endLine":17,"endColumn":32},{"ruleId":"208","severity":1,"message":"226","line":17,"column":34,"nodeType":"210","messageId":"211","endLine":17,"endColumn":48},{"ruleId":"208","severity":1,"message":"227","line":17,"column":50,"nodeType":"210","messageId":"211","endLine":17,"endColumn":57},{"ruleId":"208","severity":1,"message":"228","line":28,"column":12,"nodeType":"210","messageId":"211","endLine":28,"endColumn":18},{"ruleId":"208","severity":1,"message":"229","line":28,"column":20,"nodeType":"210","messageId":"211","endLine":28,"endColumn":29},{"ruleId":"208","severity":1,"message":"230","line":32,"column":23,"nodeType":"210","messageId":"211","endLine":32,"endColumn":35},{"ruleId":"208","severity":1,"message":"231","line":38,"column":12,"nodeType":"210","messageId":"211","endLine":38,"endColumn":21},{"ruleId":"208","severity":1,"message":"232","line":42,"column":12,"nodeType":"210","messageId":"211","endLine":42,"endColumn":19},{"ruleId":"208","severity":1,"message":"233","line":45,"column":12,"nodeType":"210","messageId":"211","endLine":45,"endColumn":16},{"ruleId":"208","severity":1,"message":"234","line":47,"column":12,"nodeType":"210","messageId":"211","endLine":47,"endColumn":25},{"ruleId":"208","severity":1,"message":"235","line":47,"column":27,"nodeType":"210","messageId":"211","endLine":47,"endColumn":41},{"ruleId":"208","severity":1,"message":"236","line":50,"column":12,"nodeType":"210","messageId":"211","endLine":50,"endColumn":18},{"ruleId":"208","severity":1,"message":"237","line":50,"column":20,"nodeType":"210","messageId":"211","endLine":50,"endColumn":29},{"ruleId":"208","severity":1,"message":"238","line":51,"column":12,"nodeType":"210","messageId":"211","endLine":51,"endColumn":15},{"ruleId":"208","severity":1,"message":"239","line":51,"column":17,"nodeType":"210","messageId":"211","endLine":51,"endColumn":23},{"ruleId":"208","severity":1,"message":"240","line":69,"column":9,"nodeType":"210","messageId":"211","endLine":69,"endColumn":14},{"ruleId":"208","severity":1,"message":"241","line":176,"column":19,"nodeType":"210","messageId":"211","endLine":176,"endColumn":22},{"ruleId":"208","severity":1,"message":"242","line":188,"column":11,"nodeType":"210","messageId":"211","endLine":188,"endColumn":17},{"ruleId":"208","severity":1,"message":"241","line":199,"column":19,"nodeType":"210","messageId":"211","endLine":199,"endColumn":22},{"ruleId":"208","severity":1,"message":"241","line":218,"column":19,"nodeType":"210","messageId":"211","endLine":218,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":366,"column":33,"nodeType":"221","messageId":"218","endLine":366,"endColumn":35},{"ruleId":"243","severity":1,"message":"244","line":77,"column":54,"nodeType":"245","endLine":77,"endColumn":72},{"ruleId":"208","severity":1,"message":"246","line":17,"column":7,"nodeType":"210","messageId":"211","endLine":17,"endColumn":18},{"ruleId":"208","severity":1,"message":"247","line":34,"column":18,"nodeType":"210","messageId":"211","endLine":34,"endColumn":25},{"ruleId":"208","severity":1,"message":"228","line":54,"column":12,"nodeType":"210","messageId":"211","endLine":54,"endColumn":18},{"ruleId":"208","severity":1,"message":"229","line":54,"column":20,"nodeType":"210","messageId":"211","endLine":54,"endColumn":29},{"ruleId":"208","severity":1,"message":"248","line":56,"column":12,"nodeType":"210","messageId":"211","endLine":56,"endColumn":26},{"ruleId":"208","severity":1,"message":"249","line":56,"column":28,"nodeType":"210","messageId":"211","endLine":56,"endColumn":45},{"ruleId":"208","severity":1,"message":"250","line":57,"column":12,"nodeType":"210","messageId":"211","endLine":57,"endColumn":20},{"ruleId":"208","severity":1,"message":"251","line":72,"column":12,"nodeType":"210","messageId":"211","endLine":72,"endColumn":17},{"ruleId":"208","severity":1,"message":"252","line":72,"column":19,"nodeType":"210","messageId":"211","endLine":72,"endColumn":27},{"ruleId":"208","severity":1,"message":"253","line":100,"column":19,"nodeType":"210","messageId":"211","endLine":100,"endColumn":25},{"ruleId":"208","severity":1,"message":"240","line":295,"column":9,"nodeType":"210","messageId":"211","endLine":295,"endColumn":14},{"ruleId":"208","severity":1,"message":"254","line":950,"column":12,"nodeType":"210","messageId":"211","endLine":950,"endColumn":16},{"ruleId":"208","severity":1,"message":"255","line":950,"column":18,"nodeType":"210","messageId":"211","endLine":950,"endColumn":25},{"ruleId":"208","severity":1,"message":"256","line":954,"column":23,"nodeType":"210","messageId":"211","endLine":954,"endColumn":35},{"ruleId":"208","severity":1,"message":"257","line":962,"column":11,"nodeType":"210","messageId":"211","endLine":962,"endColumn":14},{"ruleId":"208","severity":1,"message":"258","line":972,"column":13,"nodeType":"210","messageId":"211","endLine":972,"endColumn":16},{"ruleId":"208","severity":1,"message":"253","line":986,"column":19,"nodeType":"210","messageId":"211","endLine":986,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":1012,"column":26,"nodeType":"221","messageId":"218","endLine":1012,"endColumn":28},{"ruleId":"208","severity":1,"message":"259","line":16,"column":9,"nodeType":"210","messageId":"211","endLine":16,"endColumn":17},{"ruleId":"208","severity":1,"message":"260","line":17,"column":9,"nodeType":"210","messageId":"211","endLine":17,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":62,"column":21,"nodeType":"245","endLine":62,"endColumn":89},{"ruleId":"243","severity":1,"message":"244","line":63,"column":21,"nodeType":"245","endLine":63,"endColumn":97},{"ruleId":"243","severity":1,"message":"244","line":64,"column":21,"nodeType":"245","endLine":64,"endColumn":87},{"ruleId":"261","severity":1,"message":"262","line":83,"column":8,"nodeType":"263","endLine":83,"endColumn":20,"suggestions":"264"},{"ruleId":"208","severity":1,"message":"265","line":13,"column":5,"nodeType":"210","messageId":"211","endLine":13,"endColumn":7},{"ruleId":"261","severity":1,"message":"262","line":66,"column":8,"nodeType":"263","endLine":66,"endColumn":10,"suggestions":"266"},{"ruleId":"261","severity":1,"message":"262","line":66,"column":8,"nodeType":"263","endLine":66,"endColumn":10,"suggestions":"267"},{"ruleId":"208","severity":1,"message":"268","line":86,"column":14,"nodeType":"210","messageId":"211","endLine":86,"endColumn":23},{"ruleId":"208","severity":1,"message":"269","line":2,"column":20,"nodeType":"210","messageId":"211","endLine":2,"endColumn":29},{"ruleId":"208","severity":1,"message":"213","line":19,"column":12,"nodeType":"210","messageId":"211","endLine":19,"endColumn":19},{"ruleId":"270","severity":1,"message":"271","line":69,"column":25,"nodeType":"210","messageId":"272","endLine":69,"endColumn":28},{"ruleId":"270","severity":1,"message":"273","line":71,"column":25,"nodeType":"210","messageId":"272","endLine":71,"endColumn":27},{"ruleId":"215","severity":1,"message":"216","line":99,"column":21,"nodeType":"217","messageId":"218","endLine":99,"endColumn":23},{"ruleId":"208","severity":1,"message":"274","line":110,"column":7,"nodeType":"210","messageId":"211","endLine":110,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":110,"column":21,"nodeType":"217","messageId":"218","endLine":110,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":118,"column":22,"nodeType":"217","messageId":"218","endLine":118,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":126,"column":23,"nodeType":"217","messageId":"218","endLine":126,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":139,"column":38,"nodeType":"221","messageId":"218","endLine":139,"endColumn":40},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'message' is assigned a value but never used.","'user' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'AirportShuttle' is defined but never used.","'Star' is defined but never used.","'format' is defined but never used.","'formatDistance' is defined but never used.","'formatRelative' is defined but never used.","'subDays' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'setCreatedBy' is assigned a value but never used.","'startAMPM' is assigned a value but never used.","'endAMPM' is assigned a value but never used.","'like' is assigned a value but never used.","'contentStatus' is assigned a value but never used.","'displayContent' is assigned a value but never used.","'notify' is assigned a value but never used.","'setNotify' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'ready' is assigned a value but never used.","'res' is assigned a value but never used.","'onLike' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'initialList' is assigned a value but never used.","'setName' is assigned a value but never used.","'currentPlaceId' is assigned a value but never used.","'setCurrentPlaceId' is assigned a value but never used.","'newPlace' is assigned a value but never used.","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.","'result' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'setLikeColor' is assigned a value but never used.","'jwt' is assigned a value but never used.","'tok' is assigned a value but never used.","'username' is assigned a value but never used.","'preferences' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.","ArrayExpression",["277"],"'ud' is assigned a value but never used.",["278"],["279"],"'isCreator' is defined but never used.","'useEffect' is defined but never used.","no-redeclare","'jwt' is already defined.","redeclared","'ud' is already defined.","'SkipOption' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},"Update the dependencies array to be: [endDate, props.date, startDate]",{"range":"285","text":"286"},"Update the dependencies array to be: [endDate, startDate]",{"range":"287","text":"288"},{"range":"289","text":"288"},[1947,1959],"[endDate, props.date, startDate]",[1660,1662],"[endDate, startDate]",[1665,1667]]