[{"/home/elr/largeProject/event-u/frontend/src/index.js":"1","/home/elr/largeProject/event-u/frontend/src/reportWebVitals.js":"2","/home/elr/largeProject/event-u/frontend/src/App.js":"3","/home/elr/largeProject/event-u/frontend/src/pages/IntroPage.js":"4","/home/elr/largeProject/event-u/frontend/src/pages/LoginPage.js":"5","/home/elr/largeProject/event-u/frontend/src/pages/CreatePage.js":"6","/home/elr/largeProject/event-u/frontend/src/pages/HomePage.js":"7","/home/elr/largeProject/event-u/frontend/src/pages/PreferencePage.js":"8","/home/elr/largeProject/event-u/frontend/src/pages/MapPage.js":"9","/home/elr/largeProject/event-u/frontend/src/pages/CalendarPage.js":"10","/home/elr/largeProject/event-u/frontend/src/components/Intro.js":"11","/home/elr/largeProject/event-u/frontend/src/components/Create.js":"12","/home/elr/largeProject/event-u/frontend/src/components/LoggedInName.js":"13","/home/elr/largeProject/event-u/frontend/src/components/Preferences.js":"14","/home/elr/largeProject/event-u/frontend/src/components/Map.js":"15","/home/elr/largeProject/event-u/frontend/src/components/Login.js":"16","/home/elr/largeProject/event-u/frontend/src/components/Home.js":"17","/home/elr/largeProject/event-u/frontend/src/components/Calendar.js":"18","/home/elr/largeProject/event-u/frontend/src/components/Path.js":"19","/home/elr/largeProject/event-u/frontend/src/tokenStorage.js":"20","/home/elr/largeProject/event-u/frontend/src/components/ConfirmDelete.js":"21","/home/elr/largeProject/event-u/frontend/src/components/TopNav.js":"22","/home/elr/largeProject/event-u/frontend/src/components/Month.js":"23","/home/elr/largeProject/event-u/frontend/src/components/Day.js":"24","/home/elr/largeProject/event-u/frontend/src/components/FullDay.js":"25","/home/elr/largeProject/event-u/frontend/src/pages/SettingsPage.js":"26","/home/elr/largeProject/event-u/frontend/src/components/Settings.js":"27","/home/elr/largeProject/event-u/frontend/src/pages/UpdatePrefPage.js":"28","/home/elr/largeProject/event-u/frontend/src/components/UpdatePreferences.js":"29","/home/elr/largeProject/event-u/frontend/src/pages/VerifyPage.js":"30","/home/elr/largeProject/event-u/frontend/src/components/Verify.js":"31","/home/elr/largeProject/event-u/frontend/src/components/AddForm.js":"32"},{"size":500,"mtime":1626407357567,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1626407357567,"results":"35","hashOfConfig":"34"},{"size":1512,"mtime":1627314606261,"results":"36","hashOfConfig":"34"},{"size":190,"mtime":1626407357567,"results":"37","hashOfConfig":"34"},{"size":189,"mtime":1626407357567,"results":"38","hashOfConfig":"34"},{"size":193,"mtime":1626407357567,"results":"39","hashOfConfig":"34"},{"size":264,"mtime":1626407357567,"results":"40","hashOfConfig":"34"},{"size":216,"mtime":1626407357567,"results":"41","hashOfConfig":"34"},{"size":180,"mtime":1626407357567,"results":"42","hashOfConfig":"34"},{"size":203,"mtime":1626407357567,"results":"43","hashOfConfig":"34"},{"size":1184,"mtime":1626407357503,"results":"44","hashOfConfig":"34"},{"size":4287,"mtime":1627313843604,"results":"45","hashOfConfig":"34"},{"size":750,"mtime":1626407357503,"results":"46","hashOfConfig":"34"},{"size":6835,"mtime":1627346684479,"results":"47","hashOfConfig":"34"},{"size":75348,"mtime":1627432405875,"results":"48","hashOfConfig":"34"},{"size":4396,"mtime":1627313843604,"results":"49","hashOfConfig":"34"},{"size":90606,"mtime":1627409890257,"results":"50","hashOfConfig":"34"},{"size":1396,"mtime":1626987446740,"results":"51","hashOfConfig":"34"},{"size":284,"mtime":1626407357503,"results":"52","hashOfConfig":"34"},{"size":372,"mtime":1627313843604,"results":"53","hashOfConfig":"34"},{"size":1679,"mtime":1626895575894,"results":"54","hashOfConfig":"34"},{"size":2746,"mtime":1627314956375,"results":"55","hashOfConfig":"34"},{"size":4039,"mtime":1626987446740,"results":"56","hashOfConfig":"34"},{"size":3302,"mtime":1626987446740,"results":"57","hashOfConfig":"34"},{"size":5287,"mtime":1627313843604,"results":"58","hashOfConfig":"34"},{"size":203,"mtime":1627314981379,"results":"59","hashOfConfig":"34"},{"size":5955,"mtime":1627327244825,"results":"60","hashOfConfig":"34"},{"size":240,"mtime":1627314989591,"results":"61","hashOfConfig":"34"},{"size":6852,"mtime":1627346684519,"results":"62","hashOfConfig":"34"},{"size":193,"mtime":1627313843604,"results":"63","hashOfConfig":"34"},{"size":4332,"mtime":1627313843604,"results":"64","hashOfConfig":"34"},{"size":37027,"mtime":1627317139229,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"lwhxap",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"68"},"/home/elr/largeProject/event-u/frontend/src/index.js",[],["145","146"],"/home/elr/largeProject/event-u/frontend/src/reportWebVitals.js",[],"/home/elr/largeProject/event-u/frontend/src/App.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/IntroPage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/LoginPage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/CreatePage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/HomePage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/PreferencePage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/MapPage.js",[],"/home/elr/largeProject/event-u/frontend/src/pages/CalendarPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Intro.js",["147"],"import React, { useState } from 'react';\n\nfunction signUpRedirect() {\n    window.location.href = '/signup';\n};\n  \nfunction loginRedirect() {\n    window.location.href = '/login';\n};\n  \nfunction Header() {\n    return (\n      <header className=\"indexHeader\">\n        <h1>EventU</h1>\n        <section>\n          <ul className=\"Links\">\n            <li><button className=\"headerBtn\" onClick={signUpRedirect}>New User? Sign Up!</button></li>\n            <li><button className=\"loginBtn\" onClick={loginRedirect}>Log In</button></li>\n          </ul>\n        </section>\n      </header>\n    );\n}\n  \nfunction Main() {\n    return(\n      <div className=\"Main\">\n        <h1>Keeping U up to date with events near campus!</h1>\n        <button className=\"middleBtn\" onClick={signUpRedirect}>Get started for free!</button>\n      </div>\n    );\n}\n  \nfunction Footer() {\n    return(\n      <footer>\n        <p>Project Created by Group 23</p>\n      </footer>\n    );\n}\n\nfunction Intro() {\n    return(\n        <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n                <Main />\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Intro;\n","/home/elr/largeProject/event-u/frontend/src/components/Create.js",["148","149","150"],"import React, { useState, Component } from 'react';\nimport './css/login.css';\nimport axios from 'axios';\n\nfunction Inputs() {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n\n    var createName;\n    var createPassword;\n    var lname;\n    var fname;\n    var email;\n\n    const [message,setMessage] = useState('');\n\n    const sendVerification = async event =>\n    {\n        var _ud = localStorage.getItem('user_data');\n        var ud = JSON.parse(_ud);\n\n        console.log(ud);\n\n        var obj = {username:ud.username,firstName:ud.firstName,lastName:ud.lastName,email:ud.email,activationCode:ud.activationCode};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/sendWelcomeEmail'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        try {\n            const result = await axios(config)\n                .then(function (response) {\n                    var res = response.data;\n                    if(res.error)\n                    {\n                        setMessage('Username or email is invalid');\n                    }\n                    else\n                    {\n                        window.location.href = '/verify';\n                    }\n                })\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    }\n\n    const doSignUp = async event =>\n    {\n        event.preventDefault();\n\n\n        var obj = {username:createName.value,firstName:fname.value,lastName:lname.value,password:createPassword.value,email:email.value};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/register'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n        await axios(config)\n        .then(function(response) {\n            var res = response.data;\n        \n            console.log(res);\n            storage.storeToken(res);\n            var jwt = require('jsonwebtoken');\n            var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n            console.log(ud);\n            var firstName = ud.payload.firstName;\n            var lastName = ud.payload.lastName;\n            var username = ud.payload.username;\n            var preferences = ud.payload.preferences;\n            var likedEvents = ud.payload.likedEvents;\n            var email = ud.payload.email;\n            var attendedEvents = ud.payload.attendedEvents;\n            var userId = ud.payload._id;\n            var active = ud.payload.active;\n            var activationCode = ud.payload.activationCode;\n\n            var user = {firstName:firstName,lastName:lastName,username:username,preferences:preferences,_id:userId,attendedEvents:attendedEvents,email:email,likedEvents:likedEvents,active:active, activationCode:activationCode};\n            console.log(user);\n            localStorage.setItem('user_data', JSON.stringify(user));\n\n            setMessage('');\n\n            sendVerification();\n        }).catch(function(error) {\n            console.log(error)\n        });\n    };\n\n    return(\n        <div className=\"createDiv\">\n            <h1 id=\"title\">Welcome to EventU!</h1>\n            <input type=\"text\" id=\"fname\" placeholder=\"First Name\" ref={(c) => fname = c}></input> <br />\n            <input type=\"text\" id=\"lname\" placeholder=\"Last Name\" ref={(c) => lname = c}></input> <br />\n            <input type=\"text\" id=\"email\" placeholder=\"Email\" ref={(c) => email = c}></input> <br />\n            <input type=\"text\" id=\"createName\" placeholder=\"Username\" ref={(c) => createName = c}></input> <br />\n            <input type=\"password\" id=\"createPassword\" placeholder=\"Password\" ref={(c) => createPassword = c}></input><br />\n            <input type=\"submit\" id=\"loginButton\" value=\"Sign Up\" onClick={doSignUp}></input>\n            <h3 id=\"redirectText\">Already have an account?<a href=\"/login\" id=\"redirectButton\"> Sign In!</a></h3>\n        </div>\n    );\n}\n\nfunction Create()\n{\n    return(\n        <div className=\"LoginPage\">\n            <Inputs />\n        </div>\n    );\n};\n\nexport default Create;\n","/home/elr/largeProject/event-u/frontend/src/components/LoggedInName.js",["151"],"import React from 'react';\n\nfunction LoggedInName()\n{\n    /*var _ud = localStorage.getItem('user_data');\n    var ud = JSON.parse(_ud);\n    //var userId = ud._id;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;*/\n\n    var firstName = \"user\";\n    var lastName = \"name\";\n\n    var user = {}\n\n    const doLogout = event =>\n    {\n        event.preventDefault();\n\n        localStorage.removeItem(\"user_data\");\n        window.location.href = '/';\n    };\n\n    return(\n        <div id=\"loggedInDiv\">\n            <span id=\"userName\">Logged In As {firstName} {lastName}</span><br/>\n            <button type=\"button\" id=\"logoutButton\" className=\"buttons\" onClick={doLogout}>Log Out</button>\n        </div>\n    );\n};\n\nexport default LoggedInName;","/home/elr/largeProject/event-u/frontend/src/components/Preferences.js",["152","153","154","155","156"],"import React, { useEffect, useState } from 'react';\nimport './css/preferences.css';\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nvar interestArr;\n\n\nfunction ListElements() {\n    const [interestState, setInterestState] = useState([]);\n\n    useEffect(() => {\n        let interestState = [\n            {interest: \"Music\"},\n            {interest: \"Studying\"},\n            {interest: \"Arts & Culture\"},\n            {interest: \"Shopping\"},\n            {interest: \"Science\"},\n            {interest: \"Sports\"},\n            {interest: \"Social\"},\n        ];\n\n        setInterestState(\n            interestState.map(d=> {\n                return {\n                    select: false,\n                    interest: d.interest\n                };\n            })\n        );\n    }, []);\n    interestArr = interestState;\n\n    return(\n        <div>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <input type=\"checkbox\" onChange={e => {\n                                let checked = e.target.checked;\n                                setInterestState(\n                                    interestState.map(d => {\n                                        d.select = checked;\n                                        return d;\n                                    })\n                                );\n                            }}>\n                            </input>\n                        </th>\n                        <th scope=\"col\" id=\"interestHeader\">Interest</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {interestState.map((d,i) => (\n                        <tr key={d.interest}>\n                            <th scope=\"row\">\n                                <input onChange={event=> {\n                                    let checked = event.target.checked;\n                                    setInterestState(\n                                        interestState.map(data => {\n                                            if(d.interest === data.interest) {\n                                                data.select = checked;\n                                            }\n                                            return data;\n                                        })\n                                    );\n                                }}\n                                type=\"checkbox\"\n                                checked={d.select}\n                                ></input>\n                            </th>\n                            <td>{d.interest}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nfunction Options() {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 45, opacity: 1},        \n    })\n\n    return(\n        <animated.div style={props} className=\"options\">\n            <ul className =\"choiceList\">\n                <ListElements />\n            </ul>\n        </animated.div>\n    );\n};\n\nconst HeaderText = ({}) => {\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 70, opacity: 1}\n    });\n    return <animated.h1 style={props} id=\"welcomeMessage\">Hello {firstName} {lastName}!</animated.h1>\n};\n\nconst SkipOption = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 5, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"skipMessage\">Not interested? <a href='/home'>Skip this step.</a></animated.h2>;\n}\n\nconst HeaderText2 = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 75, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"welcomeParagraph\">Let's get to know you better, select some of the following general interests:</animated.h2>;\n};\n\nconst SubmitButton = ({}) => {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var uname = ud.username;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const [message,setMessage] = useState('');\n\n    const addPreferences = async event =>\n    {\n        const interestPayload = [];\n        for(var i = 0; i < interestArr.length; i++) {\n            if(interestArr[i].select == true) {\n                interestPayload.push(interestArr[i].interest);\n            }\n        }\n\n        event.preventDefault();\n        \n        var obj = {username:uname,preferences:interestPayload};\n        var js = JSON.stringify(obj);\n        console.log(js);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/preferences'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setMessage('Unable to submit, try again');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n                    \n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n                    \n                    var preferences = ud.payload.preferences;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var email = ud.payload.email;\n                    var likedEvents = ud.payload.likedEvents;\n\n                    var user = {firstName:firstName,lastName:lastName,preferences:preferences,username:uname,likedEvents:likedEvents,email:email,attendedEvents:attendedEvents};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    window.location.href = '/home';\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                console.log(message);\n            });\n    }\n\n    const props = useSpring({\n        from: {y: 700, opacity: 0},\n        to: {y: 0, opacity: 1}\n    });\n\n    return(\n        <div id=\"submitButtonContainer\">\n            <animated.button style={props} onClick={addPreferences} id=\"submitSelections\">Submit</animated.button>\n        </div>\n    );\n};\n\nfunction Preferences() {\n    //const[on, set] = React.useState(true);\n    return(\n        <div className=\"preferencesPage\">\n            <HeaderText />\n            <HeaderText2 />\n            <Options />\n            <SubmitButton />\n            <SkipOption />\n            <span></span>\n        </div>\n    );\n};\n\nexport default Preferences;","/home/elr/largeProject/event-u/frontend/src/components/Map.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"/home/elr/largeProject/event-u/frontend/src/components/Login.js",["176","177","178"],"import React, { useState } from 'react';\nimport './css/login.css';\nimport axios from 'axios';\n\nfunction Login()\n{\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n\n    var loginName;\n    var loginPassword;\n\n    const [message,setMessage] = useState('');\n\n    const doForgot = async event => {\n        event.preventDefault();\n\n        var obj = {username:loginName.value};\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/sendPasswordResetEmail'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                setMessage('Password reset, check email associated with your account');\n            })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    }\n\n    const doLogin = async event =>\n    {\n        event.preventDefault();\n\n\n        var obj = {username:loginName.value,password:loginPassword.value};\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/login'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        try {\n            axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setMessage('User/Password combination incorrect');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n                    \n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n                    \n                    var firstName = ud.payload.firstName;\n                    var lastName = ud.payload.lastName;\n                    var username = ud.payload.username;\n                    var preferences = ud.payload.preferences;\n                    var likedEvents = ud.payload.likedEvents;\n                    var email = ud.payload.email;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var userId = ud.payload._id;\n                    var active = ud.payload.active;\n                    var activationCode = ud.payload.activationCode;\n\n                    if(ud.payload.active === false)\n                    {\n                        var user = {firstName:firstName,lastName:lastName,username:username,preferences:preferences,_id:userId,attendedEvents:attendedEvents,email:email,likedEvents:likedEvents,active:active,activationCode:activationCode};\n                        localStorage.setItem('user_data', JSON.stringify(user));\n                        window.location.href = '/verify';\n                    }\n                    else\n                    {\n                        var user = {firstName:firstName,lastName:lastName,username:username,preferences:preferences,_id:userId,attendedEvents:attendedEvents,email:email,likedEvents:likedEvents,active:active};\n                        localStorage.setItem('user_data', JSON.stringify(user));\n                        window.location.href = '/home';\n                    }\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        }\n        catch(e) {\n            console.log(e);\n        };\n    };\n\n    return(\n        <div className=\"LoginPage\">\n            <div className=\"loginDiv\">\n                <h1 id=\"title\">Welcome Back!</h1>\n                <input type=\"text\" id=\"loginName\" placeholder=\"Username\" ref={(c) => loginName = c} /> <br />\n                <input type=\"password\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c}/><br />\n                <input type=\"submit\" id=\"loginButton\" value=\"Sign In\" onClick={doLogin} />\n                <h3 id=\"forgotPass\">Forgot Password? <a onClick={doForgot} id=\"forgotBtn\">Click here</a></h3>\n                <span id=\"loginResult\">{message}</span>\n                <h3 id=\"redirectText\">Don't have an account?<a href=\"/signup\" id=\"redirectButton\"> Sign Up!</a></h3>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","/home/elr/largeProject/event-u/frontend/src/components/Home.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import './css/home.css';\nimport { faPlus, faTimesCircle, faRunning, faFlask, faUserGraduate, faPalette, faGuitar, faShoppingBag, faSearch, faHeart, faSync, faHandHoldingHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from 'react';\nimport TopNav from '../components/TopNav';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n    format,\n    parseISO,\n    isDate,\n    isExists\n  } from \"date-fns\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nconst initialList = [];\n\nvar Month = format(new Date(), \"MM\");\nvar Day = \"01\";\nvar Year= format(new Date(), \"yyyy\");\nvar StartHour = \"12\";\nvar StartMin = \"00\";\nvar EndHour = \"12\";\nvar EndMin = \"00\";\nvar startTime;\nvar endTime;\n\n\nfunction Events() {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var testArr = [];\n\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        const getEventsOnLoad = async () => {\n            var bp = require('./Path.js');\n            var storage = require('../tokenStorage.js');\n            var jwt = require('jsonwebtoken');\n\n            var userd = jwt.decode(storage.retrieveToken(),{complete:true});\n            var userLiked = userd.payload.likedEvents;\n            \n            var obj = {likedEvents:userLiked};\n            var js = JSON.stringify(obj);\n            var config =\n            {\n                method: 'post',\n                url: bp.buildPath('api/events/userevents'),\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                },\n                data: js\n            }\n\n            try {\n                const result = await axios(config)\n                    .then(function (response) {\n                        var res = response.data;\n                        setUserEvents(res);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    });\n            }\n            catch(e)\n            {\n                console.log(e);\n            }\n        }\n        getEventsOnLoad();\n    })\n\n    const [contentStatus, displayContent] = React.useState(false);\n\n    const contentProps = useSpring({\n        opacity: contentStatus ? 1 : 0,\n        marginTop: contentStatus ? -50 : -1000\n    })\n\n    const [editStatus, displayEdit] = React.useState(false);\n    const editProps = useSpring ({\n        opacity: editStatus ? 1 : 0,\n        marginTop: editStatus ? -500 : -1000\n    })\n\n    const [userEvents, setUserEvents] = useState([]);\n    //var userLiked = ud.likedEvents;\n\n    var createdBy = ud.username;\n    const [eventToDelete, setEventToDelete] = useState('');\n    const [events, setEvents] = useState([]);\n    const [newPlace, setNewPlace] = useState(null);\n    const [title, setTitle] = useState(null);\n    const [lat, setLat] = useState(null);\n    const [long, setLong] = useState(null);\n    const [category, setCategory] = useState(null);\n    const [address, setAddress] = useState(null);\n    const [description, setDescription] = useState(null);\n    const [capacity, setCapacity] = useState(0);\n    const [eventMsg, setEventMsg] = useState(\"\");\n    const [currentId, setCurrentId] = useState();\n\n    const fetchEvents = async event => {\n        event.preventDefault();\n        var bp = require('./Path.js');\n        var storage = require('../tokenStorage.js');\n        var jwt = require('jsonwebtoken');\n\n        var userd = jwt.decode(storage.retrieveToken(),{complete:true});\n        var userLiked = userd.payload.likedEvents;\n        \n        var obj = {likedEvents:userLiked};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/userevents'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        try {\n            const result = await axios(config)\n                .then(function (response) {\n                    var res = response.data;\n                    console.log(res);\n                    setUserEvents(res);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                });\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    }\n    \n    \n\n    const deleteEvent = async event =>\n    {\n        var obj = {_id:eventToDelete};\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/delete'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n        .then(function (response) {\n            var res = response.data;\n            if(res.error) {\n                console.log(res.error);\n            }\n            else {\n                console.log(res);\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    function handleDelete(deleteId) {\n        setEventToDelete(deleteId);\n        deleteEvent();\n    }\n\n    const handleEventUpdate = async (e) => {\n        const startTimeString = Year + \"-\" + Month + \"-\" + Day + \"T\" + StartHour + \":\" + StartMin;\n        const endTimeString = Year + \"-\" + Month + \"-\" + Day + \"T\" + EndHour + \":\" + EndMin;\n      \n\n        startTime = startTimeString;\n        endTime = endTimeString;\n       \n        \n        e.preventDefault();\n        if(title === null) {\n            setEventMsg(\"Invalid title\");\n            return;\n        }\n        else if(category === null) {\n            setEventMsg(\"No category selected\");\n            return;\n        }\n        else if(address === null) {\n            setEventMsg(\"Invalid address\");\n            return;\n        }\n        else if(startTime === null || !isDate(parseISO(startTime))) {\n            setEventMsg(\"Invalid start time\");\n            return;\n        }\n        else if(endTime === null || !isExists(parseInt(Year),parseInt(Month),parseInt(Day)) ) {\n            setEventMsg(\"Invalid end time\");\n            return;\n        }\n        else if(description === null) {\n            setEventMsg(\"Invalid description\");\n            return;\n        }\n        else if(capacity === null) {\n            setEventMsg(\"Insert a capacity\");\n            return;\n        }\n        \n        const event = currentId;\n        const editPayload = {\n            title,\n            category,\n            address,\n            lat,\n            long,\n            startTime,\n            endTime,\n            createdBy,\n            description,\n            // likes,\n            capacity,\n        }\n        var obj = {event:event,editPayload};\n        console.log(obj);\n        var js = JSON.stringify(obj);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/editevent'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setEventMsg('Unable to submit, try again');\n                }\n                else {\n                    setEventMsg('');\n                    displayEdit(a => !a);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const handleSubmit = async (e) => {\n        const startTimeString = Year + \"-\" + Month + \"-\" + Day + \"T\" + StartHour + \":\" + StartMin;\n        const endTimeString = Year + \"-\" + Month + \"-\" + Day + \"T\" + EndHour + \":\" + EndMin;\n      \n\n        startTime = startTimeString;\n        endTime = endTimeString;\n       \n        \n        e.preventDefault();\n        if(title === null) {\n            setEventMsg(\"Invalid title\");\n            return;\n        }\n        else if(category === null) {\n            setEventMsg(\"No category selected\");\n            return;\n        }\n        else if(address === null) {\n            setEventMsg(\"Invalid address\");\n            return;\n        }\n        else if(startTime === null || !isDate(parseISO(startTime))) {\n            setEventMsg(\"Invalid start time\");\n            return;\n        }\n        else if(endTime === null || !isExists(parseInt(Year),parseInt(Month),parseInt(Day)) ) {\n            setEventMsg(\"Invalid end time\");\n            return;\n        }\n        else if(description === null) {\n            setEventMsg(\"Invalid description\");\n            return;\n        }\n        else if(capacity === null) {\n            setEventMsg(\"Insert a capacity\");\n            return;\n        }\n        \n        \n        const newEvent = {\n            title,\n            category,\n            address,\n            lat,\n            long,\n            startTime,\n            endTime,\n            createdBy,\n            description,\n            // likes,\n            capacity,\n        }\n        try {\n            const url = bp.buildPath(\"api/events/newevent\");\n\n            const res = await axios.post(url, newEvent);\n            setEvents([...events, res.data]);\n            const addToLike = res.data;\n            handleLike(addToLike._id);\n            setNewPlace(null);\n            setEventMsg('');\n            displayContent(a => !a);\n        } catch(err) {\n            console.log(err)\n        }\n    };\n\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n      \n    const ref = useOnclickOutside(() => {\n        // When user clicks outside of the component, we can dismiss\n        // the searched suggestions by calling this method\n        clearSuggestions();\n    });\n    \n    const handleAddressInput = (e) => {\n        // Update the keyword of the input element\n        setValue(e.target.value);\n    };\n    \n    const handleSelect =\n        ({ description }) =>\n        () => {\n            console.log(description);\n          // When user selects a place, we can replace the keyword without request data from API\n          // by setting the second parameter to \"false\"\n          setValue(description, false);\n          setAddress(description);\n          clearSuggestions();\n\n          // Get latitude and longitude via utility functions\n          getGeocode({ address: description })\n            .then((results) => getLatLng(results[0]))\n            .then(({ lat, lng }) => {\n                setLat(lat);\n                setLong(lng);\n            })\n            .catch((error) => {\n              console.log(\"Error: \", error);\n            });\n        };\n    \n    const renderSuggestions = () =>\n        data.map((suggestion) => {\n          const {\n            place_id,\n            structured_formatting: { main_text, secondary_text },\n          } = suggestion;\n    \n        return (\n            <li className=\"addressResults\" key={place_id} onClick={handleSelect(suggestion)}>\n              <strong>{main_text}</strong> <small>{secondary_text}</small>\n            </li>\n        );\n    });\n\n    function handleLike(itemId)\n    {\n        var _userd = localStorage.getItem('user_data');        \n        var userd = JSON.parse(_userd);\n        var likedEvents = userd.likedEvents;\n        if(likedEvents.includes(itemId)) { // remove the item from likes if it is there\n            for(var i = 0; i < likedEvents.length; i++) {\n                if( likedEvents[i] === itemId) {\n                    likedEvents.splice(i, 1);\n                }\n            }\n        }\n        else { // add it if it isnt\n            likedEvents.push(itemId);\n        }\n\n        testArr = likedEvents;\n        addLike();\n    }\n\n    const addLike = async event =>\n    {\n        var obj = {username:ud.username,likedEvents:testArr};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/likes'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    console.log(res.error);\n                }\n                else {\n                    storage.storeToken(res);\n                    \n                    var user = {firstName:ud.firstName,lastName:ud.lastName,preferences:ud.preferences,username:ud.username,likedEvents:testArr};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    _ud = localStorage.getItem('user_data');\n                    ud = JSON.parse(_ud);\n                }\n            }) \n    }\n    \n    \n\n\n    function getIcon(preferenceName)\n    {\n        if(preferenceName === 'Sports')\n            return faRunning;\n        else if(preferenceName === 'Science')\n            return faFlask;\n        else if(preferenceName === 'Studying')\n            return faUserGraduate;\n        else if(preferenceName === 'Arts & Culture')\n            return faPalette;\n        else if(preferenceName === 'Music')\n            return faGuitar;\n        else if(preferenceName === 'Shopping')\n            return faShoppingBag;\n        else if(preferenceName === 'Social')\n            return faHandHoldingHeart;\n    }\n\n    function compareIds(x)\n    {\n        if(x === currentId)\n            return true;\n        return false;\n    }\n    \n    function handleOpenEdit(itemId, itemAddress, itemTitle, itemCategory, itemCapacity, itemDesc)\n    {\n        displayEdit(a => !a);\n        setCurrentId(itemId);\n        setAddress(itemAddress);\n        setTitle(itemTitle);\n        setCategory(itemCategory);\n        setCapacity(itemCapacity);\n        setDescription(itemDesc)\n    }\n\n    return(\n        <div className=\"myEvents\">\n            <h1 id=\"eventsHeader\">My Events</h1>\n            <div className=\"topEventsContainer\">\n            <div id=\"postContainer\" onClick={() => displayContent(a => !a)} value={name}>\n                <button id=\"postButton\"><FontAwesomeIcon icon={faPlus}/></button>\n            </div>\n            <div className=\"vl\"></div>\n            </div>\n            <div className=\"eventHolder\">\n                <ul className=\"eventList\">\n                    {/*<button className=\"refreshButton\" onClick={fetchEvents}><FontAwesomeIcon icon={faSync} /></button>*/}\n                    {userEvents.map((item) => (\n                        <li key={item._id} className=\"catEventItem\">\n                            <FontAwesomeIcon className=\"likeIconMyEvents\" icon={faHeart} onClick={handleLike.bind(null, item._id)}/>\n                            <h1 className=\"itemTitle\"><FontAwesomeIcon className=\"myEventsIcon\" icon={getIcon(item.category)} />{item.title}</h1>\n                            <h2 className=\"itemCreator\">Posted by: {item.createdBy}</h2>\n                            <h3 className=\"itemDesc\">{item.description}</h3>\n                            <h3 className=\"itemAddress\">{item.address}</h3>\n                            <h3 className=\"itemDate\">{item.date}</h3>\n                            <h3 className=\"itemTime\">{item.startTime} to {item.endTime}</h3>\n                            {(item.createdBy===ud.username) &&\n                                <div>\n                                    <button className=\"customBtns\" id=\"editBtn\" onClick={handleOpenEdit.bind(null, item._id, item.address, item.title, item.category, item.capacity, item.description)}>Edit</button>\n                                    <button className=\"customBtns\" id=\"deleteBtn\" onClick={handleDelete.bind(null, item._id)}>Delete</button>\n                                \n                                    {compareIds(item._id) && <animated.div className=\"addEvent\" style={editProps}>\n                                        <div className=\"eventPostContainer\">\n                                            <div>\n                                                <div id=\"closeForm\" onClick={() => displayEdit(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                                                <form className=\"eventForm\" id='editForm' onSubmit={handleEventUpdate} autoComplete=\"off\">\n                                                    <h4 className=\"form-header\">Edit an Event!</h4>\n                                                    <label className=\"label\" id=\"name-label\">title:\n                                                        <input\n                                                            type=\"text\"\n                                                            className=\"input-field\"\n                                                            id=\"name-input\"\n                                                            placeholder=\"Enter title...\"\n                                                            onChange={(e) => setTitle(e.target.value)}\n                                                        />\n                                                    </label>\n                                                    <label className=\"label\" id=\"cat-label\">category:\n                                                        <select id=\"options-list\" onChange={(e) => setCategory(e.target.value)}>\n                                                            <option id=\"cat-options\" value={null}></option>\n                                                            <option id=\"cat-options\" value=\"Arts & Culture\">Arts & Culture</option>\n                                                            <option id=\"cat-options\" value=\"Sports\">Sports</option>\n                                                            <option id=\"cat-options\" value=\"Science\">Science</option>\n                                                            <option id=\"cat-options\" value=\"Music\">Music</option>\n                                                            <option id=\"cat-options\" value=\"Shopping\">Shopping</option>\n                                                            <option id=\"cat-options\" value=\"Studying\">Studying</option>\n                                                            <option id=\"cat-options\" value=\"Social\">Social</option>\n                                                        </select>\n                                                    </label>\n                                                    <label className=\"label\" id=\"add-label\">address:\n                                                        <div ref={ref}>\n                                                            <input \n                                                            value={value}\n                                                            type=\"text\" \n                                                            className=\"input-field\" \n                                                            id=\"add-input\" \n                                                            placeholder=\"Enter address...\"\n                                                            onChange={handleAddressInput}\n                                                            />\n                                                            {status === \"OK\" && <ul className=\"addressUl\">{renderSuggestions()}</ul>}\n                                                        </div>\n                                                    </label>\n\n                                                    <label className=\"label\" id=\"desc-label\">Date:\n                                                        <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"MM\")} onChange={(e) => Month = e.target.value}>\n                                                            <option className=\"date-options\" value=\"01\">January</option>\n                                                            <option className=\"date-options\" value=\"02\">February</option>\n                                                            <option className=\"date-options\" value=\"03\">March</option>\n                                                            <option className=\"date-options\" value=\"04\">April</option>\n                                                            <option className=\"date-options\" value=\"05\">May</option>\n                                                            <option className=\"date-options\" value=\"06\">June</option>\n                                                            <option className=\"date-options\" value=\"07\">July</option>\n                                                            <option className=\"date-options\" value=\"08\">August</option>\n                                                            <option className=\"date-options\" value=\"09\">September</option>\n                                                            <option className=\"date-options\" value=\"10\">October</option>\n                                                            <option className=\"date-options\" value=\"11\">November</option>\n                                                            <option className=\"date-options\" value=\"12\">December</option>\n                                                        </select>\n                                                        <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"dd\")} onChange={(e) => Day = e.target.value}>\n                                                            <option className=\"date-options\" value=\"01\">01</option>\n                                                            <option className=\"date-options\" value=\"02\">02</option>\n                                                            <option className=\"date-options\" value=\"03\">03</option>\n                                                            <option className=\"date-options\" value=\"04\">04</option>\n                                                            <option className=\"date-options\" value=\"05\">05</option>\n                                                            <option className=\"date-options\" value=\"06\">06</option>\n                                                            <option className=\"date-options\" value=\"07\">07</option>\n                                                            <option className=\"date-options\" value=\"08\">08</option>\n                                                            <option className=\"date-options\" value=\"09\">09</option>\n                                                            <option className=\"date-options\" value=\"10\">10</option>\n                                                            <option className=\"date-options\" value=\"11\">11</option>\n                                                            <option className=\"date-options\" value=\"12\">12</option>\n                                                            <option className=\"date-options\" value=\"13\">13</option>\n                                                            <option className=\"date-options\" value=\"14\">14</option>\n                                                            <option className=\"date-options\" value=\"15\">15</option>\n                                                            <option className=\"date-options\" value=\"16\">16</option>\n                                                            <option className=\"date-options\" value=\"17\">17</option>\n                                                            <option className=\"date-options\" value=\"18\">18</option>\n                                                            <option className=\"date-options\" value=\"19\">19</option>\n                                                            <option className=\"date-options\" value=\"20\">20</option>\n                                                            <option className=\"date-options\" value=\"21\">21</option>\n                                                            <option className=\"date-options\" value=\"22\">22</option>\n                                                            <option className=\"date-options\" value=\"23\">23</option>\n                                                            <option className=\"date-options\" value=\"24\">24</option>\n                                                            <option className=\"date-options\" value=\"25\">25</option>\n                                                            <option className=\"date-options\" value=\"26\">26</option>\n                                                            <option className=\"date-options\" value=\"27\">27</option>\n                                                            <option className=\"date-options\" value=\"28\">28</option>\n                                                            <option className=\"date-options\" value=\"29\">29</option>\n                                                            <option className=\"date-options\" value=\"30\">30</option>\n                                                            <option className=\"date-options\" value=\"31\">31</option>\n                                                        </select>\n                                                        <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"yyyy\")} onChange={(e) => Year = e.target.value}>\n                                                            <option className=\"date-options\" value=\"2021\">2021</option>\n                                                            <option className=\"date-options\" value=\"2022\">2022</option>\n                                                            <option className=\"date-options\" value=\"2023\">2023</option>\n                                                            <option className=\"date-options\" value=\"2024\">2024</option>\n                                                            <option className=\"date-options\" value=\"2025\">2025</option>\n                                                            <option className=\"date-options\" value=\"2026\">2026</option>   \n                                                            <option className=\"date-options\" value=\"2027\">2027</option>   \n                                                            <option className=\"date-options\" value=\"2028\">2028</option>   \n                                                            <option className=\"date-options\" value=\"2029\">2029</option>   \n                                                            <option className=\"date-options\" value=\"2030\">2030</option>                         \n                                                        </select>\n                                                    </label>\n\n                                                    \n                                                    \n                                                    <label className=\"label\" id=\"startTime-label\">start time:\n                                                        <select className=\"time\" defaultValue=\"12\" id=\"time-hour-select\" onChange={(e) => StartHour = e.target.value}>\n                                                            <option className=\"time-options\" value=\"00\">12 AM</option>\n                                                            <option className=\"time-options\" value=\"01\">1 AM</option>\n                                                            <option className=\"time-options\" value=\"02\">2 AM</option>\n                                                            <option className=\"time-options\" value=\"03\">3 AM</option>\n                                                            <option className=\"time-options\" value=\"04\">4 AM</option>\n                                                            <option className=\"time-options\" value=\"05\">5 AM</option>\n                                                            <option className=\"time-options\" value=\"06\">6 AM</option>\n                                                            <option className=\"time-options\" value=\"07\">7 AM</option>\n                                                            <option className=\"time-options\" value=\"08\">8 AM</option>\n                                                            <option className=\"time-options\" value=\"09\">9 AM</option>\n                                                            <option className=\"time-options\" value=\"10\">10 AM</option>\n                                                            <option className=\"time-options\" value=\"11\">11 AM</option>\n                                                            <option className=\"time-options\" value=\"12\">12 PM</option>\n                                                            <option className=\"time-options\" value=\"13\">1 PM</option>\n                                                            <option className=\"time-options\" value=\"14\">2 PM</option>\n                                                            <option className=\"time-options\" value=\"15\">3 PM</option>\n                                                            <option className=\"time-options\" value=\"16\">4 PM</option>\n                                                            <option className=\"time-options\" value=\"17\">5 PM</option>\n                                                            <option className=\"time-options\" value=\"18\">6 PM</option>\n                                                            <option className=\"time-options\" value=\"19\">7 PM</option>\n                                                            <option className=\"time-options\" value=\"20\">8 PM</option>\n                                                            <option className=\"time-options\" value=\"21\">9 PM</option>\n                                                            <option className=\"time-options\" value=\"22\">10 PM</option>\n                                                            <option className=\"time-options\" value=\"23\">11 PM</option>                                  \n                                                            \n                                                        </select>\n                                                        <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => StartMin = e.target.value}>\n                                                            <option className=\"time-options\" value=\"00\">00</option>\n                                                            <option className=\"time-options\" value=\"01\">01</option>\n                                                            <option className=\"time-options\" value=\"02\">02</option>\n                                                            <option className=\"time-options\" value=\"03\">03</option>\n                                                            <option className=\"time-options\" value=\"04\">04</option>\n                                                            <option className=\"time-options\" value=\"05\">05</option>\n                                                            <option className=\"time-options\" value=\"06\">06</option>\n                                                            <option className=\"time-options\" value=\"07\">07</option>\n                                                            <option className=\"time-options\" value=\"08\">08</option>\n                                                            <option className=\"time-options\" value=\"09\">09</option>\n                                                            <option className=\"time-options\" value=\"10\">10</option>\n                                                            <option className=\"time-options\" value=\"11\">11</option>\n                                                            <option className=\"time-options\" value=\"12\">12</option>\n                                                            <option className=\"time-options\" value=\"13\">13</option>\n                                                            <option className=\"time-options\" value=\"14\">14</option>\n                                                            <option className=\"time-options\" value=\"15\">15</option>                                    \n                                                            <option className=\"time-options\" value=\"16\">16</option>\n                                                            <option className=\"time-options\" value=\"17\">17</option>\n                                                            <option className=\"time-options\" value=\"18\">18</option>\n                                                            <option className=\"time-options\" value=\"19\">19</option>\n                                                            <option className=\"time-options\" value=\"20\">20</option>\n                                                            <option className=\"time-options\" value=\"21\">21</option>\n                                                            <option className=\"time-options\" value=\"22\">22</option>\n                                                            <option className=\"time-options\" value=\"23\">23</option>\n                                                            <option className=\"time-options\" value=\"24\">24</option>\n                                                            <option className=\"time-options\" value=\"25\">25</option>                                    \n                                                            <option className=\"time-options\" value=\"26\">26</option>\n                                                            <option className=\"time-options\" value=\"27\">27</option>\n                                                            <option className=\"time-options\" value=\"28\">28</option>\n                                                            <option className=\"time-options\" value=\"29\">29</option>\n                                                            <option className=\"time-options\" value=\"30\">30</option>\n                                                            <option className=\"time-options\" value=\"31\">31</option>\n                                                            <option className=\"time-options\" value=\"32\">32</option>\n                                                            <option className=\"time-options\" value=\"33\">33</option>\n                                                            <option className=\"time-options\" value=\"34\">34</option>\n                                                            <option className=\"time-options\" value=\"35\">35</option>                                    \n                                                            <option className=\"time-options\" value=\"36\">36</option>\n                                                            <option className=\"time-options\" value=\"37\">37</option>\n                                                            <option className=\"time-options\" value=\"38\">38</option>\n                                                            <option className=\"time-options\" value=\"39\">39</option>\n                                                            <option className=\"time-options\" value=\"40\">40</option>\n                                                            <option className=\"time-options\" value=\"41\">41</option>\n                                                            <option className=\"time-options\" value=\"42\">42</option>\n                                                            <option className=\"time-options\" value=\"43\">43</option>\n                                                            <option className=\"time-options\" value=\"44\">44</option>\n                                                            <option className=\"time-options\" value=\"45\">45</option>                                 \n                                                            <option className=\"time-options\" value=\"46\">46</option>\n                                                            <option className=\"time-options\" value=\"47\">47</option>\n                                                            <option className=\"time-options\" value=\"48\">48</option>\n                                                            <option className=\"time-options\" value=\"49\">49</option>\n                                                            <option className=\"time-options\" value=\"50\">50</option>\n                                                            <option className=\"time-options\" value=\"51\">51</option>\n                                                            <option className=\"time-options\" value=\"52\">52</option>\n                                                            <option className=\"time-options\" value=\"53\">53</option>\n                                                            <option className=\"time-options\" value=\"54\">54</option>\n                                                            <option className=\"time-options\" value=\"55\">55</option>                                    \n                                                            <option className=\"time-options\" value=\"56\">56</option>\n                                                            <option className=\"time-options\" value=\"57\">57</option>\n                                                            <option className=\"time-options\" value=\"58\">58</option>\n                                                            <option className=\"time-options\" value=\"59\">59</option>\n                                                        </select>\n                                                        {/* <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setStartAMPM(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"AM\">AM</option>\n                                                            <option className=\"time-options\" value=\"PM\">PM</option>\n                                                        </select> */}\n                                                    </label>\n                                                    <label className=\"label\" id=\"endTime-label\">end time:\n                                                        <select className=\"time\" id=\"time-hour-select\" defaultValue=\"12\" onChange={(e) => EndHour = e.target.value}>\n                                                        <option className=\"time-options\" value=\"00\">12 AM</option>\n                                                            <option className=\"time-options\" value=\"01\">1 AM</option>\n                                                            <option className=\"time-options\" value=\"02\">2 AM</option>\n                                                            <option className=\"time-options\" value=\"03\">3 AM</option>\n                                                            <option className=\"time-options\" value=\"04\">4 AM</option>\n                                                            <option className=\"time-options\" value=\"05\">5 AM</option>\n                                                            <option className=\"time-options\" value=\"06\">6 AM</option>\n                                                            <option className=\"time-options\" value=\"07\">7 AM</option>\n                                                            <option className=\"time-options\" value=\"08\">8 AM</option>\n                                                            <option className=\"time-options\" value=\"09\">9 AM</option>\n                                                            <option className=\"time-options\" value=\"10\">10 AM</option>\n                                                            <option className=\"time-options\" value=\"11\">11 AM</option>\n                                                            <option className=\"time-options\" value=\"12\">12 PM</option>\n                                                            <option className=\"time-options\" value=\"13\">1 PM</option>\n                                                            <option className=\"time-options\" value=\"14\">2 PM</option>\n                                                            <option className=\"time-options\" value=\"15\">3 PM</option>\n                                                            <option className=\"time-options\" value=\"16\">4 PM</option>\n                                                            <option className=\"time-options\" value=\"17\">5 PM</option>\n                                                            <option className=\"time-options\" value=\"18\">6 PM</option>\n                                                            <option className=\"time-options\" value=\"19\">7 PM</option>\n                                                            <option className=\"time-options\" value=\"20\">8 PM</option>\n                                                            <option className=\"time-options\" value=\"21\">9 PM</option>\n                                                            <option className=\"time-options\" value=\"22\">10 PM</option>\n                                                            <option className=\"time-options\" value=\"23\">11 PM</option>  \n                                                        </select>\n                                                        <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => EndMin = e.target.value}>\n                                                        <option className=\"time-options\" value=\"00\">00</option>\n                                                            <option className=\"time-options\" value=\"01\">01</option>\n                                                            <option className=\"time-options\" value=\"02\">02</option>\n                                                            <option className=\"time-options\" value=\"03\">03</option>\n                                                            <option className=\"time-options\" value=\"04\">04</option>\n                                                            <option className=\"time-options\" value=\"05\">05</option>\n                                                            <option className=\"time-options\" value=\"06\">06</option>\n                                                            <option className=\"time-options\" value=\"07\">07</option>\n                                                            <option className=\"time-options\" value=\"08\">08</option>\n                                                            <option className=\"time-options\" value=\"09\">09</option>\n                                                            <option className=\"time-options\" value=\"10\">10</option>\n                                                            <option className=\"time-options\" value=\"11\">11</option>\n                                                            <option className=\"time-options\" value=\"12\">12</option>\n                                                            <option className=\"time-options\" value=\"13\">13</option>\n                                                            <option className=\"time-options\" value=\"14\">14</option>\n                                                            <option className=\"time-options\" value=\"15\">15</option>                                    \n                                                            <option className=\"time-options\" value=\"16\">16</option>\n                                                            <option className=\"time-options\" value=\"17\">17</option>\n                                                            <option className=\"time-options\" value=\"18\">18</option>\n                                                            <option className=\"time-options\" value=\"19\">19</option>\n                                                            <option className=\"time-options\" value=\"20\">20</option>\n                                                            <option className=\"time-options\" value=\"21\">21</option>\n                                                            <option className=\"time-options\" value=\"22\">22</option>\n                                                            <option className=\"time-options\" value=\"23\">23</option>\n                                                            <option className=\"time-options\" value=\"24\">24</option>\n                                                            <option className=\"time-options\" value=\"25\">25</option>                                    \n                                                            <option className=\"time-options\" value=\"26\">26</option>\n                                                            <option className=\"time-options\" value=\"27\">27</option>\n                                                            <option className=\"time-options\" value=\"28\">28</option>\n                                                            <option className=\"time-options\" value=\"29\">29</option>\n                                                            <option className=\"time-options\" value=\"30\">30</option>\n                                                            <option className=\"time-options\" value=\"31\">31</option>\n                                                            <option className=\"time-options\" value=\"32\">32</option>\n                                                            <option className=\"time-options\" value=\"33\">33</option>\n                                                            <option className=\"time-options\" value=\"34\">34</option>\n                                                            <option className=\"time-options\" value=\"35\">35</option>                                    \n                                                            <option className=\"time-options\" value=\"36\">36</option>\n                                                            <option className=\"time-options\" value=\"37\">37</option>\n                                                            <option className=\"time-options\" value=\"38\">38</option>\n                                                            <option className=\"time-options\" value=\"39\">39</option>\n                                                            <option className=\"time-options\" value=\"40\">40</option>\n                                                            <option className=\"time-options\" value=\"41\">41</option>\n                                                            <option className=\"time-options\" value=\"42\">42</option>\n                                                            <option className=\"time-options\" value=\"43\">43</option>\n                                                            <option className=\"time-options\" value=\"44\">44</option>\n                                                            <option className=\"time-options\" value=\"45\">45</option>                                 \n                                                            <option className=\"time-options\" value=\"46\">46</option>\n                                                            <option className=\"time-options\" value=\"47\">47</option>\n                                                            <option className=\"time-options\" value=\"48\">48</option>\n                                                            <option className=\"time-options\" value=\"49\">49</option>\n                                                            <option className=\"time-options\" value=\"50\">50</option>\n                                                            <option className=\"time-options\" value=\"51\">51</option>\n                                                            <option className=\"time-options\" value=\"52\">52</option>\n                                                            <option className=\"time-options\" value=\"53\">53</option>\n                                                            <option className=\"time-options\" value=\"54\">54</option>\n                                                            <option className=\"time-options\" value=\"55\">55</option>                                    \n                                                            <option className=\"time-options\" value=\"56\">56</option>\n                                                            <option className=\"time-options\" value=\"57\">57</option>\n                                                            <option className=\"time-options\" value=\"58\">58</option>\n                                                            <option className=\"time-options\" value=\"59\">59</option>\n                                                        </select>\n                                                        {/* <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setEndAMPM(e.target.value)}>\n                                                            <option className=\"time-options\" value=\"AM\">AM</option>\n                                                            <option className=\"time-options\" value=\"PM\">PM</option>\n                                                        </select> */}\n                                                    </label>                          \n\n                                                    <label className=\"label\" id=\"desc-label\" >description:\n                                                        <textarea\n                                                            rows=\"3\"\n                                                            cols=\"40\"\n                                                            id=\"comment-box\"\n                                                            placeholder=\"Comments...\"\n                                                            onChange={(e) => setDescription(e.target.value)}\n                                                        />\n                                                    </label>\n                                                   \n                                                    <br />\n                                                    <label className=\"label\" id=\"cap-label\">Capacity:\n                                                        <input\n                                                            type=\"number\"\n                                                            className=\"input-field\"\n                                                            id=\"cap-input\"\n                                                            min=\"0\"\n                                                            onChange={(e) => setCapacity(e.target.value)}\n                                                        />\n                                                    </label>\n                                                    <div className=\"submitContainer\">\n                                                        <button type =\"submit\" id=\"submitEvent\">Save Event</button>\n                                                    </div>\n                                                    <span className=\"eventError\">{eventMsg}</span>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </animated.div>}\n                                </div>\n                            }\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            \n            \n            <animated.div className=\"addEvent\" style={contentProps}>\n                <div className=\"eventPostContainer\">\n                    <div>\n                        <div id=\"closeForm\" onClick={() => displayContent(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                        <form className=\"eventForm\" onSubmit={handleSubmit} autoComplete=\"off\">\n                            <h4 className=\"form-header\">Add an Event!</h4>\n                            <label className=\"label\" id=\"name-label\">title:\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    id=\"name-input\"\n                                    placeholder=\"Enter title...\"\n                                    onChange={(e) => setTitle(e.target.value)}\n                                />\n                            </label>\n                            <label className=\"label\" id=\"cat-label\">category:\n                                <select id=\"options-list\" onChange={(e) => setCategory(e.target.value)}>\n                                    <option id=\"cat-options\" value={null}></option>\n                                    <option id=\"cat-options\" value=\"Arts & Culture\">Arts & Culture</option>\n                                    <option id=\"cat-options\" value=\"Sports\">Sports</option>\n                                    <option id=\"cat-options\" value=\"Science\">Science</option>\n                                    <option id=\"cat-options\" value=\"Music\">Music</option>\n                                    <option id=\"cat-options\" value=\"Shopping\">Shopping</option>\n                                    <option id=\"cat-options\" value=\"Studying\">Studying</option>\n                                    <option id=\"cat-options\" value=\"Social\">Social</option>\n                                </select>\n                            </label>\n                            <label className=\"label\" id=\"add-label\">address:\n                                    <div ref={ref}>\n                                        <input\n                                        value={value}\n                                        type=\"text\" \n                                        className=\"input-field\" \n                                        id=\"add-input\" \n                                        placeholder=\"Enter address...\"\n                                        onChange={handleAddressInput}\n                                        />\n                                        {status === \"OK\" && <ul className=\"addressUl\">{renderSuggestions()}</ul>}\n                                    </div>\n                                </label>\n\n                            <label className=\"label\" id=\"desc-label\">Date:\n                                <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"MM\")} onChange={(e) => Month = e.target.value}>\n                                    <option className=\"date-options\" value=\"01\">January</option>\n                                    <option className=\"date-options\" value=\"02\">February</option>\n                                    <option className=\"date-options\" value=\"03\">March</option>\n                                    <option className=\"date-options\" value=\"04\">April</option>\n                                    <option className=\"date-options\" value=\"05\">May</option>\n                                    <option className=\"date-options\" value=\"06\">June</option>\n                                    <option className=\"date-options\" value=\"07\">July</option>\n                                    <option className=\"date-options\" value=\"08\">August</option>\n                                    <option className=\"date-options\" value=\"09\">September</option>\n                                    <option className=\"date-options\" value=\"10\">October</option>\n                                    <option className=\"date-options\" value=\"11\">November</option>\n                                    <option className=\"date-options\" value=\"12\">December</option>\n                                </select>\n                                <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"dd\")} onChange={(e) => Day = e.target.value}>\n                                    <option className=\"date-options\" value=\"01\">01</option>\n                                    <option className=\"date-options\" value=\"02\">02</option>\n                                    <option className=\"date-options\" value=\"03\">03</option>\n                                    <option className=\"date-options\" value=\"04\">04</option>\n                                    <option className=\"date-options\" value=\"05\">05</option>\n                                    <option className=\"date-options\" value=\"06\">06</option>\n                                    <option className=\"date-options\" value=\"07\">07</option>\n                                    <option className=\"date-options\" value=\"08\">08</option>\n                                    <option className=\"date-options\" value=\"09\">09</option>\n                                    <option className=\"date-options\" value=\"10\">10</option>\n                                    <option className=\"date-options\" value=\"11\">11</option>\n                                    <option className=\"date-options\" value=\"12\">12</option>\n                                    <option className=\"date-options\" value=\"13\">13</option>\n                                    <option className=\"date-options\" value=\"14\">14</option>\n                                    <option className=\"date-options\" value=\"15\">15</option>\n                                    <option className=\"date-options\" value=\"16\">16</option>\n                                    <option className=\"date-options\" value=\"17\">17</option>\n                                    <option className=\"date-options\" value=\"18\">18</option>\n                                    <option className=\"date-options\" value=\"19\">19</option>\n                                    <option className=\"date-options\" value=\"20\">20</option>\n                                    <option className=\"date-options\" value=\"21\">21</option>\n                                    <option className=\"date-options\" value=\"22\">22</option>\n                                    <option className=\"date-options\" value=\"23\">23</option>\n                                    <option className=\"date-options\" value=\"24\">24</option>\n                                    <option className=\"date-options\" value=\"25\">25</option>\n                                    <option className=\"date-options\" value=\"26\">26</option>\n                                    <option className=\"date-options\" value=\"27\">27</option>\n                                    <option className=\"date-options\" value=\"28\">28</option>\n                                    <option className=\"date-options\" value=\"29\">29</option>\n                                    <option className=\"date-options\" value=\"30\">30</option>\n                                    <option className=\"date-options\" value=\"31\">31</option>\n                                </select>\n                                <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"yyyy\")} onChange={(e) => Year = e.target.value}>\n                                    <option className=\"date-options\" value=\"2021\">2021</option>\n                                    <option className=\"date-options\" value=\"2022\">2022</option>\n                                    <option className=\"date-options\" value=\"2023\">2023</option>\n                                    <option className=\"date-options\" value=\"2024\">2024</option>\n                                    <option className=\"date-options\" value=\"2025\">2025</option>\n                                    <option className=\"date-options\" value=\"2026\">2026</option>   \n                                    <option className=\"date-options\" value=\"2027\">2027</option>   \n                                    <option className=\"date-options\" value=\"2028\">2028</option>   \n                                    <option className=\"date-options\" value=\"2029\">2029</option>   \n                                    <option className=\"date-options\" value=\"2030\">2030</option>                         \n                                </select>\n                            </label>\n\n                            \n                            \n                            <label className=\"label\" id=\"startTime-label\">start time:\n                                <select className=\"time\" defaultValue=\"12\" id=\"time-hour-select\" onChange={(e) => StartHour = e.target.value}>\n                                    <option className=\"time-options\" value=\"00\">12 AM</option>\n                                    <option className=\"time-options\" value=\"01\">1 AM</option>\n                                    <option className=\"time-options\" value=\"02\">2 AM</option>\n                                    <option className=\"time-options\" value=\"03\">3 AM</option>\n                                    <option className=\"time-options\" value=\"04\">4 AM</option>\n                                    <option className=\"time-options\" value=\"05\">5 AM</option>\n                                    <option className=\"time-options\" value=\"06\">6 AM</option>\n                                    <option className=\"time-options\" value=\"07\">7 AM</option>\n                                    <option className=\"time-options\" value=\"08\">8 AM</option>\n                                    <option className=\"time-options\" value=\"09\">9 AM</option>\n                                    <option className=\"time-options\" value=\"10\">10 AM</option>\n                                    <option className=\"time-options\" value=\"11\">11 AM</option>\n                                    <option className=\"time-options\" value=\"12\">12 PM</option>\n                                    <option className=\"time-options\" value=\"13\">1 PM</option>\n                                    <option className=\"time-options\" value=\"14\">2 PM</option>\n                                    <option className=\"time-options\" value=\"15\">3 PM</option>\n                                    <option className=\"time-options\" value=\"16\">4 PM</option>\n                                    <option className=\"time-options\" value=\"17\">5 PM</option>\n                                    <option className=\"time-options\" value=\"18\">6 PM</option>\n                                    <option className=\"time-options\" value=\"19\">7 PM</option>\n                                    <option className=\"time-options\" value=\"20\">8 PM</option>\n                                    <option className=\"time-options\" value=\"21\">9 PM</option>\n                                    <option className=\"time-options\" value=\"22\">10 PM</option>\n                                    <option className=\"time-options\" value=\"23\">11 PM</option>                                  \n                                    \n                                </select>\n                                <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => StartMin = e.target.value}>\n                                    <option className=\"time-options\" value=\"00\">00</option>\n                                    <option className=\"time-options\" value=\"01\">01</option>\n                                    <option className=\"time-options\" value=\"02\">02</option>\n                                    <option className=\"time-options\" value=\"03\">03</option>\n                                    <option className=\"time-options\" value=\"04\">04</option>\n                                    <option className=\"time-options\" value=\"05\">05</option>\n                                    <option className=\"time-options\" value=\"06\">06</option>\n                                    <option className=\"time-options\" value=\"07\">07</option>\n                                    <option className=\"time-options\" value=\"08\">08</option>\n                                    <option className=\"time-options\" value=\"09\">09</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"13\">13</option>\n                                    <option className=\"time-options\" value=\"14\">14</option>\n                                    <option className=\"time-options\" value=\"15\">15</option>\n                                    <option className=\"time-options\" value=\"16\">16</option>\n                                    <option className=\"time-options\" value=\"17\">17</option>\n                                    <option className=\"time-options\" value=\"18\">18</option>\n                                    <option className=\"time-options\" value=\"19\">19</option>\n                                    <option className=\"time-options\" value=\"20\">20</option>\n                                    <option className=\"time-options\" value=\"21\">21</option>\n                                    <option className=\"time-options\" value=\"22\">22</option>\n                                    <option className=\"time-options\" value=\"23\">23</option>\n                                    <option className=\"time-options\" value=\"24\">24</option>\n                                    <option className=\"time-options\" value=\"25\">25</option>\n                                    <option className=\"time-options\" value=\"26\">26</option>\n                                    <option className=\"time-options\" value=\"27\">27</option>\n                                    <option className=\"time-options\" value=\"28\">28</option>\n                                    <option className=\"time-options\" value=\"29\">29</option>\n                                    <option className=\"time-options\" value=\"30\">30</option>\n                                    <option className=\"time-options\" value=\"31\">31</option>\n                                    <option className=\"time-options\" value=\"32\">32</option>\n                                    <option className=\"time-options\" value=\"44\">33</option>\n                                    <option className=\"time-options\" value=\"34\">34</option>\n                                    <option className=\"time-options\" value=\"35\">35</option>\n                                    <option className=\"time-options\" value=\"36\">36</option>\n                                    <option className=\"time-options\" value=\"37\">37</option>\n                                    <option className=\"time-options\" value=\"38\">38</option>\n                                    <option className=\"time-options\" value=\"39\">39</option>\n                                    <option className=\"time-options\" value=\"40\">40</option>\n                                    <option className=\"time-options\" value=\"41\">41</option>\n                                    <option className=\"time-options\" value=\"42\">42</option>\n                                    <option className=\"time-options\" value=\"43\">43</option>\n                                    <option className=\"time-options\" value=\"44\">44</option>\n                                    <option className=\"time-options\" value=\"45\">45</option>\n                                    <option className=\"time-options\" value=\"46\">46</option>\n                                    <option className=\"time-options\" value=\"47\">47</option>\n                                    <option className=\"time-options\" value=\"48\">48</option>\n                                    <option className=\"time-options\" value=\"49\">49</option>\n                                    <option className=\"time-options\" value=\"50\">50</option>\n                                    <option className=\"time-options\" value=\"51\">51</option>\n                                    <option className=\"time-options\" value=\"52\">52</option>\n                                    <option className=\"time-options\" value=\"53\">53</option>\n                                    <option className=\"time-options\" value=\"54\">54</option>\n                                    <option className=\"time-options\" value=\"55\">55</option>\n                                    <option className=\"time-options\" value=\"56\">56</option>\n                                    <option className=\"time-options\" value=\"57\">57</option>\n                                    <option className=\"time-options\" value=\"58\">58</option>\n                                    <option className=\"time-options\" value=\"59\">59</option>\n                                </select>\n                                {/* <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setStartAMPM(e.target.value)}>\n                                    <option className=\"time-options\" value=\"AM\">AM</option>\n                                    <option className=\"time-options\" value=\"PM\">PM</option>\n                                </select> */}\n                            </label>\n                            <label className=\"label\" id=\"endTime-label\">end time:\n                                <select className=\"time\" id=\"time-hour-select\" defaultValue=\"12\" onChange={(e) => EndHour = e.target.value}>\n                                <option className=\"time-options\" value=\"00\">12 AM</option>\n                                    <option className=\"time-options\" value=\"01\">1 AM</option>\n                                    <option className=\"time-options\" value=\"02\">2 AM</option>\n                                    <option className=\"time-options\" value=\"03\">3 AM</option>\n                                    <option className=\"time-options\" value=\"04\">4 AM</option>\n                                    <option className=\"time-options\" value=\"05\">5 AM</option>\n                                    <option className=\"time-options\" value=\"06\">6 AM</option>\n                                    <option className=\"time-options\" value=\"07\">7 AM</option>\n                                    <option className=\"time-options\" value=\"08\">8 AM</option>\n                                    <option className=\"time-options\" value=\"09\">9 AM</option>\n                                    <option className=\"time-options\" value=\"10\">10 AM</option>\n                                    <option className=\"time-options\" value=\"11\">11 AM</option>\n                                    <option className=\"time-options\" value=\"12\">12 PM</option>\n                                    <option className=\"time-options\" value=\"13\">1 PM</option>\n                                    <option className=\"time-options\" value=\"14\">2 PM</option>\n                                    <option className=\"time-options\" value=\"15\">3 PM</option>\n                                    <option className=\"time-options\" value=\"16\">4 PM</option>\n                                    <option className=\"time-options\" value=\"17\">5 PM</option>\n                                    <option className=\"time-options\" value=\"18\">6 PM</option>\n                                    <option className=\"time-options\" value=\"19\">7 PM</option>\n                                    <option className=\"time-options\" value=\"20\">8 PM</option>\n                                    <option className=\"time-options\" value=\"21\">9 PM</option>\n                                    <option className=\"time-options\" value=\"22\">10 PM</option>\n                                    <option className=\"time-options\" value=\"23\">11 PM</option>  \n                                </select>\n                                <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => EndMin = e.target.value}>\n                                <option className=\"time-options\" value=\"00\">00</option>\n                                    <option className=\"time-options\" value=\"01\">01</option>\n                                    <option className=\"time-options\" value=\"02\">02</option>\n                                    <option className=\"time-options\" value=\"03\">03</option>\n                                    <option className=\"time-options\" value=\"04\">04</option>\n                                    <option className=\"time-options\" value=\"05\">05</option>\n                                    <option className=\"time-options\" value=\"06\">06</option>\n                                    <option className=\"time-options\" value=\"07\">07</option>\n                                    <option className=\"time-options\" value=\"08\">08</option>\n                                    <option className=\"time-options\" value=\"09\">09</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"13\">13</option>\n                                    <option className=\"time-options\" value=\"14\">14</option>\n                                    <option className=\"time-options\" value=\"15\">15</option>\n                                    <option className=\"time-options\" value=\"16\">16</option>\n                                    <option className=\"time-options\" value=\"17\">17</option>\n                                    <option className=\"time-options\" value=\"18\">18</option>\n                                    <option className=\"time-options\" value=\"19\">19</option>\n                                    <option className=\"time-options\" value=\"20\">20</option>\n                                    <option className=\"time-options\" value=\"21\">21</option>\n                                    <option className=\"time-options\" value=\"22\">22</option>\n                                    <option className=\"time-options\" value=\"23\">23</option>\n                                    <option className=\"time-options\" value=\"24\">24</option>\n                                    <option className=\"time-options\" value=\"25\">25</option>\n                                    <option className=\"time-options\" value=\"26\">26</option>\n                                    <option className=\"time-options\" value=\"27\">27</option>\n                                    <option className=\"time-options\" value=\"28\">28</option>\n                                    <option className=\"time-options\" value=\"29\">29</option>\n                                    <option className=\"time-options\" value=\"30\">30</option>\n                                    <option className=\"time-options\" value=\"31\">31</option>\n                                    <option className=\"time-options\" value=\"32\">32</option>\n                                    <option className=\"time-options\" value=\"44\">33</option>\n                                    <option className=\"time-options\" value=\"34\">34</option>\n                                    <option className=\"time-options\" value=\"35\">35</option>\n                                    <option className=\"time-options\" value=\"36\">36</option>\n                                    <option className=\"time-options\" value=\"37\">37</option>\n                                    <option className=\"time-options\" value=\"38\">38</option>\n                                    <option className=\"time-options\" value=\"39\">39</option>\n                                    <option className=\"time-options\" value=\"40\">40</option>\n                                    <option className=\"time-options\" value=\"41\">41</option>\n                                    <option className=\"time-options\" value=\"42\">42</option>\n                                    <option className=\"time-options\" value=\"43\">43</option>\n                                    <option className=\"time-options\" value=\"44\">44</option>\n                                    <option className=\"time-options\" value=\"45\">45</option>\n                                    <option className=\"time-options\" value=\"46\">46</option>\n                                    <option className=\"time-options\" value=\"47\">47</option>\n                                    <option className=\"time-options\" value=\"48\">48</option>\n                                    <option className=\"time-options\" value=\"49\">49</option>\n                                    <option className=\"time-options\" value=\"50\">50</option>\n                                    <option className=\"time-options\" value=\"51\">51</option>\n                                    <option className=\"time-options\" value=\"52\">52</option>\n                                    <option className=\"time-options\" value=\"53\">53</option>\n                                    <option className=\"time-options\" value=\"54\">54</option>\n                                    <option className=\"time-options\" value=\"55\">55</option>\n                                    <option className=\"time-options\" value=\"56\">56</option>\n                                    <option className=\"time-options\" value=\"57\">57</option>\n                                    <option className=\"time-options\" value=\"58\">58</option>\n                                    <option className=\"time-options\" value=\"59\">59</option>\n                                </select>\n                                {/* <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setEndAMPM(e.target.value)}>\n                                    <option className=\"time-options\" value=\"AM\">AM</option>\n                                    <option className=\"time-options\" value=\"PM\">PM</option>\n                                </select> */}\n                            </label>                          \n\n                            <label className=\"label\" id=\"desc-label\" >description:\n                            <textarea\n                                id=\"comment-box\"\n                                placeholder=\"Comments...\"\n                                rows=\"3\"\n                                cols=\"40\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            /></label>\n                            \n                            <label className=\"label\" id=\"cap-label\">capacity:\n                                <input\n                                    type=\"number\"\n                                    className=\"input-field\"\n                                    id=\"cap-input\"\n                                    min=\"0\"\n                                    onChange={(e) => setCapacity(e.target.value)}\n                                />\n                            </label>\n                            <div className=\"submitContainer\">\n                                <button type =\"submit\" id=\"submitEvent\">Add Event</button>\n                            </div>\n                            <span className=\"eventError\">{eventMsg}</span>\n                        </form>\n                    </div>\n                </div>\n            </animated.div>\n\n        </div>\n    );\n};\n\nfunction OngoingEvents() {\n    var testArr = []; // had to implement this because react fucking sucks\n                      // not changing the name, but it's final\n    const [contentStatus, displayContent] = React.useState(false);\n    const [searchStatus, displaySearch] = React.useState(false);\n    const [resultList, setResultList] = useState([]);\n    const [category, setCategory] = useState('');\n    const [searchVal, setSearchVal] = useState('');\n\n    const [edit, setEdit] = useState(false);\n    const contentProps = useSpring({\n        opacity: contentStatus ? 1 : 0,\n    });\n    const searchProps = useSpring({\n\n        opacity: searchStatus ? 1 : 0,\n    });\n    const [likeColor, setLikeColor] = useState();\n\n    var currentCat = '';\n\n    var resultArr = [];\n\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    const jwt = require(\"jsonwebtoken\");\n\n    const loadCategories = async event =>\n    {\n        if(currentCat === \"arts & culture\") {\n            currentCat = \"Arts & Culture\";\n        }\n        else {\n            currentCat = currentCat.charAt(0).toUpperCase() + currentCat.slice(1);\n        }\n        var tok = storage.retrieveToken();\n        var obj = {category:currentCat};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/findcat'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n        try {\n            const result = await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                \n                for(var i = 0; i < res.length; i++) {\n                    resultArr.push(res[i]);\n                }\n\n                setResultList(resultArr);\n                //setResultList(res);\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    };\n\n    const loadSearchResults = async event => \n    {\n        console.log(searchVal);\n        var obj = {title:searchVal};\n        console.log(obj);\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/events/search'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n        try {\n            const result = await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                \n                for(var i = 0; i < res.length; i++) {\n                    resultArr.push(res[i]);\n                }\n                console.log(resultArr);\n                setResultList(resultArr);\n                //setResultList(res);\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    }\n\n    function handleOpenCategory(preferenceName) {\n        setResultList([]);\n        var cat = preferenceName.preference;\n        currentCat = cat;\n        setCategory(currentCat);\n        loadCategories();\n        if(contentStatus == false) {\n            if(searchStatus != false)\n                displaySearch(a => !a);\n            displayContent(a => !a);\n        }\n    }\n\n    function handleSearch() {\n        loadSearchResults();\n    }\n\n    function handleOpenSearch() {\n        //setSearchVal(searchInput)\n        //loadSearchResults();\n        setResultList([]);\n        if(searchStatus == false) {\n            if(contentStatus != false)\n                displayContent(a => !a);\n            displaySearch(a => !a);\n        }\n    }\n\n    var preferences = [];\n    for(var i = 0; i < ud.preferences.length; i++) {\n        preferences.push(ud.preferences[i]);\n    }\n\n    function getIcon(preferenceName) {\n        if(preferenceName.preference != null)\n            preferenceName = preferenceName.preference;\n        if(preferenceName === 'Sports')\n            return faRunning;\n        else if(preferenceName === 'Science')\n            return faFlask;\n        else if(preferenceName === 'Studying')\n            return faUserGraduate;\n        else if(preferenceName === 'Arts & Culture')\n            return faPalette;\n        else if(preferenceName === 'Music')\n            return faGuitar;\n        else if(preferenceName === 'Shopping')\n            return faShoppingBag;\n        else if(preferenceName === 'Social')\n            return faHandHoldingHeart;\n    }\n\n    \n\n    const listCategories = preferences.map((preference) =>\n        <li className=\"eventItem\" onClick={ () => handleOpenCategory({preference}) } key={preference}><h1 className=\"catText\">{preference}</h1><FontAwesomeIcon className=\"categoryIcon\" id={preference.preference} icon={getIcon({preference})} /></li>\n    );\n\n    function handleLike(itemId)\n    {\n        var _userd = localStorage.getItem('user_data');        \n        var userd = JSON.parse(_userd);\n        var likedEvents = userd.likedEvents;\n        if(likedEvents.includes(itemId)) { // remove the item from likes if it is there\n            for(var i = 0; i < likedEvents.length; i++) {\n                if( likedEvents[i] === itemId) {\n                    likedEvents.splice(i, 1);\n                }\n            }\n        }\n        \n        else { // add it if it isnt\n            likedEvents.push(itemId);\n        }\n\n        testArr = likedEvents;\n        addLike();\n    }\n\n    const addLike = async event =>\n    {\n        var obj = {username:ud.username,likedEvents:testArr};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/likes'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        \n        await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    console.log(res.error);\n                }\n                else {\n                    storage.storeToken(res);\n                    \n                    var user = {firstName:ud.firstName,lastName:ud.lastName,preferences:ud.preferences,username:ud.username,likedEvents:testArr};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    _ud = localStorage.getItem('user_data');\n                    ud = JSON.parse(_ud);\n                }\n            }) \n    }\n\n    function checkDisplay(div) {\n        if(div == 'search') {\n            if(searchStatus == false) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else if(div == 'cat') {\n            if(contentStatus == false) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    \n    return (\n        <div id=\"ongoing-Events\">\n            <ul className=\"ongoing-List\">\n                {listCategories}\n                <li className=\"eventItem\" onClick={handleOpenSearch}><h1 className=\"catText\">Search</h1><FontAwesomeIcon className=\"categoryIcon\" icon={faSearch} /></li>\n            </ul><br />\n            <animated.div className=\"categoryList\" style={contentProps}>\n                {checkDisplay('cat') && <div id=\"categoryContainer\">\n                    <div id=\"closeFormNearby\" onClick={() => displayContent(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                    <h1 className=\"listHeader\">{category}</h1>\n                    <ul className=\"catEventList\">\n                        {resultList.map((item) => (\n                            <li key={item._id} className=\"catEventItem\">\n                                <div className=\"listInfo\">\n                                    <FontAwesomeIcon className=\"likeIcon\" icon={faHeart} style={likeColor} onClick={handleLike.bind(null, item._id)}/>\n                                    <h1 className=\"itemTitle\">{item.title}</h1>\n                                    <h2 className=\"itemCreator\">Posted by: {item.createdBy}</h2>\n                                    <h3 className=\"itemDesc\">{item.description}</h3>\n                                    <h3 className=\"itemAddress\">{item.address}</h3>\n                                    <h3 className=\"itemTime\">{item.startTime} to {item.endTime}</h3>\n                                    {/*(item.createdBy===ud.username) &&\n                                        <div>\n                                            <button className=\"customBtns\" id=\"editBtn\">Edit</button>\n                                            <button className=\"customBtns\" id=\"deleteBtn\">Delete</button>\n                                        </div>\n                                    */}\n                                    \n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>}\n            </animated.div>\n            <animated.div className=\"categoryList\" style={searchProps}>\n                {checkDisplay('search') && <div id=\"categoryContainer\">\n                    {checkDisplay('search') && <div id=\"closeFormNearby\" onClick={() => displaySearch(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>}\n                    <input \n                        type=\"text\" \n                        placeholder=\"Search for an event!\"\n                        onChange={(e) => setSearchVal(e.target.value)}\n                    />\n                    <button id=\"submitEvent\" onClick={loadSearchResults}>Search</button>\n                    <br />\n                    <ul className=\"catEventList\">\n                        {resultList.map((item) => (\n                            <li key={item._id} className=\"catEventItem\">\n                                <div className=\"listInfo\">\n                                    <FontAwesomeIcon className=\"likeIcon\" icon={faHeart} style={likeColor} onClick={handleLike.bind(null, item._id)}/>\n                                    <h1 className=\"itemTitle\"><FontAwesomeIcon className=\"myEventsIcon\" icon={getIcon(item.category)} />{item.title}</h1>\n                                    <h2 className=\"itemCreator\">Posted by: {item.createdBy}</h2>\n                                    <h3 className=\"itemDesc\">{item.description}</h3>\n                                    <h3 className=\"itemAddress\">{item.address}</h3>\n                                    <h3 className=\"itemTime\">{item.startTime} to {item.endTime}</h3>\n                                    {/*(item.createdBy===ud.username) &&\n                                        <div>\n                                            <button className=\"customBtns\" id=\"editBtn\">Edit</button>\n                                            <button className=\"customBtns\" id=\"deleteBtn\">Delete</button>\n                                        </div>\n                                    */}\n                                    \n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>}\n            </animated.div>\n        </div>\n    );\n}\n\nfunction HomePage() {\n    return(\n        <div>\n            <TopNav />\n            <Events />\n            <div className=\"nearbyEvents\">\n                <h1 id=\"ongoing\">Events Near U</h1>\n                <OngoingEvents />\n            </div>\n        </div>\n    );\n};\n\nfunction Home()\n{\n    return(\n        <div className=\"HomePage\">\n            <div className=\"homeBg\">\n                <HomePage />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","/home/elr/largeProject/event-u/frontend/src/components/Calendar.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Path.js",[],"/home/elr/largeProject/event-u/frontend/src/tokenStorage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/ConfirmDelete.js",[],"/home/elr/largeProject/event-u/frontend/src/components/TopNav.js",["203","204","205","206","207"],"import { faHome } from \"@fortawesome/free-solid-svg-icons\"\nimport { faCalendar, faMap, faUser } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useState } from \"react\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\n\n\nconst TopNav = () => {\n    var currentUrl = window.location.pathname;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n    var username = ud.username;\n    var preferences = ud.preferences;\n\n    function setColorHome() {\n        if(currentUrl === '/home') return 'homeActive';\n    }\n    function setColorCalender() {\n        if(currentUrl === '/calendar') return 'calendarActive';\n    }\n    function setColorMap() {\n        if(currentUrl === '/map') return 'mapActive';\n    }\n    \n\n    const[isDisplayed, setDisplay] = useState(false)\n\n    const openNotif = () => {\n        // alert('Works!')\n        setDisplay(!isDisplayed);\n    }\n\n    const onClickHome = () => {\n        window.location.href=\"/home\";\n    }\n\n    const onClickMap = () => {\n        window.location.href=\"/map\";\n    }\n\n    const onClickCalender = () => {\n        window.location.href = \"/calendar\";\n    }\n\n    const onClickSettings = () => {\n        window.location.href = \"/settings\";\n    }\n\n    function doLogout() {\n        localStorage.clear();\n        window.location.href = \"/\";\n    }\n\n    return(\n        <div className=\"topContainer\">\n            <div className=\"topBar\">\n                <div className=\"linkContainer\">\n                    <a className=\"topBarLink\" id={setColorHome()} onClick={onClickHome}><FontAwesomeIcon icon={faHome} className=\"topBarIcon\"/></a>\n                    <a className=\"topBarLink\" id={setColorCalender()} onClick={onClickCalender}><FontAwesomeIcon icon={faCalendar} className=\"topBarIcon\"/></a>\n                    <a className=\"topBarLink\" id={setColorMap()} onClick={onClickMap}><FontAwesomeIcon icon={faMap} className=\"topBarIcon\"/></a>\n                </div>\n                <FontAwesomeIcon icon={faUser} className=\"topBarLink\" id=\"notifications\" onClick={openNotif}/>\n                \n                <div className={`${isDisplayed ? 'notification-active' : 'notification-box'}`} id=\"notification\">\n                    <div className=\"userBtnContainer\">\n                        <h1 id=\"userBarHead\">Welcome back {firstName} {lastName}!</h1>\n                        <br />\n                        <button className=\"userBtns\" id=\"logoutBtn\" onClick={doLogout}>Logout</button>\n                        <button className=\"userBtns\" id=\"settingsBtn\" onClick={onClickSettings}>Settings</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TopNav;","/home/elr/largeProject/event-u/frontend/src/components/Month.js",["208"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {\n  addDays,\n  format,\n  parseISO,\n  startOfWeek,\n  endOfWeek,\n  startOfMonth,\n  endOfMonth,\n  startOfDay,\n  isBefore,\n  isSameMonth,\n  isSameDay,\n} from \"date-fns\";\n\nimport \"./css/calendar.css\";\nimport Day from \"./Day.js\";\nimport FullDay from \"./FullDay.js\";\n\n\n\nexport default function Month(props) {\n\n    //buildpath\n    const app_name = 'event-u'\n    function buildPath(route)\n    {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n    \n    const [isOpen, setIsOpen] = useState(false);\n    const [fullDay, setFullDay] = useState(new Date());\n    var apiDateFormat = \"yyyy-MM-dd\";\n    var selectedDate;\n\n    if(!props.date){\n        selectedDate = startOfDay(new Date());\n    } else {\n        selectedDate = parseISO(props.date);\n    }\n\n    // build calendar array\n    let month = [];\n    let startDate = startOfWeek(startOfMonth(selectedDate));\n    let endDate = endOfWeek(endOfMonth(selectedDate));\n    let insertDate = startDate;\n\n    while(isBefore(insertDate, endDate)){\n        month.push(insertDate);\n        insertDate = addDays(insertDate, 1);\n    }\n\n    // dateStack\n    addDays(endDate, 1);\n    let [events, setEvents] = useState([]);\n    let dateStack = [];\n\n    useEffect(() => {\n        let getEvents = async () => {\n            try{\n                const res = await axios.post(buildPath('api/events/inrange/'),\n                {\n                    start : startDate,\n                    end : endDate\n                }\n                );\n                console.log(res.data);\n                setEvents(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        getEvents();\n    }, [props.date]);\n  \n    //Push Event Dates to DateStack\n    for( let i = 0; i < events.length; i++){\n        dateStack.push((events[i].startTime));\n    }\n\n    //Only Render Events Day Tiles on Days with Events\n    function renderDayEvents(day){\n        if(isSameDay(day, parseISO(dateStack[0]) )){\n        dateStack.shift();\n        //Get rid of all duplicate dates in dateStack\n        while(isSameDay(day, parseISO(dateStack[0]) )){\n            dateStack.shift();\n        }\n        return(\n            <Day key={day} date={format(day, apiDateFormat)}/>\n        );\n\n        }\n    }\n\n    function dayColor(day) {\n        if (!isSameMonth(day, selectedDate)) return \"dayOutsideMonth\";\n        if (isSameDay(day, new Date())) return \"today\";\n        return \"day\";\n    }\n\n\n    return (\n\n        <div>\n            {isOpen ? <div className=\"fullday\">\n                <span className=\"closeFullDay\" onClick={() => setIsOpen(false)}>\n                    x\n                </span>\n                <FullDay date={format(fullDay, apiDateFormat)} />\n            </div> : null}\n\n            <div className=\"calendargrid\">\n\n                {/* the weekday headers for the calendar */}\n\n                {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((dayName) => (\n                <div className=\"weekDay\" key={dayName}>\n                    <span>{dayName}</span>\n                </div>\n                ))}\n                \n                {/* Days in the Calendar */}\n                {\n                    month.map((day) => (\n                        <div onClick={() => {setIsOpen(!isOpen); setFullDay(day)}}>\n                        <div className={`${dayColor(day)}`} key={format(day, \"yyyy-MM-dd\")}>\n                            \n                            <span>{format(day, \"dd\")}</span>\n                        {/* Event Lists on Day Tiles */}\n                        {renderDayEvents(day)}\n                            \n                        </div>\n                        </div>\n                        \n                    ))\n\n\n                }\n            </div>\n         </div>\n    )\n}","/home/elr/largeProject/event-u/frontend/src/components/Day.js",["209","210"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {\n  addDays,\n  format,\n  parseISO\n} from \"date-fns\";\n\nimport \"./css/calendar.css\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\n\n\nexport default function Day(props) {\n    //buildpath\n    const app_name = 'event-u'\n    function buildPath(route)\n    {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n\n\n    const [events, setEvents] = useState([]);\n    var formatEventDate = \"h:mm aaa\";\n    var apiDateFormat = \"yyyy-MM-dd\";\n    // format(event.startTime, formatEventDate)\n    var startDate;\n    var endDate;\n    if(!props.date){\n        const date = new Date();\n        startDate = format(date, apiDateFormat);\n        endDate = format(addDays(date, 1), apiDateFormat)\n    } else {\n        const propDate = parseISO(props.date);\n        startDate = format(propDate, apiDateFormat);\n        endDate = format(addDays(propDate, 1), apiDateFormat);\n    }\n\n    \n    useEffect(() => {\n        const getEvents = async () => {\n            try{\n                const res = await axios.post(buildPath('api/events/inrange/'),\n                {\n                    start : startDate,\n                    end : endDate\n                }\n                );\n                console.log(res.data);\n                setEvents(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        getEvents();\n    }, []);\n\n\n    function listLength(events){\n        if(events.length > 2){\n            var firstEvents = events.slice(0,3);            \n            return(\n                firstEvents.map(event => \n                    <li className=\"calendarLi\" key={event._id}>{format(parseISO(event.startTime), formatEventDate)} <br/> {event.title}</li>     \n                )     \n            );\n\n        }else{\n            return(\n                events.map(event => \n                    <li className=\"calendarLi\" key={event._id}>{format(parseISO(event.startTime), formatEventDate)} <br/> {event.title}</li>        \n                )\n            );\n        }\n    }\n\n    // className={`${eventHighlight(event._id)}`}\n\n    function moreEvents(events){\n        var moreEvents = events.length - 3;\n        if(events.length > 3 && moreEvents > 1){                               \n            return(\n                <li className=\"calendarLi\">and {moreEvents} more events</li>\n            );\n\n        }else if(events.length > 3 && moreEvents < 2){\n            return(\n                <li className=\"calendarLi\">and {moreEvents} more event</li>\n            );\n        }\n}   \n\n    // function eventHighlight(_id){\n    //     if(ud.attendedEvents.includes(_id)){\n    //         return(\"attendedEvent\");\n    //     }\n    //     else if(ud.likedEvents.includes(_id)){\n    //         return(\"likedEvent\");\n    //     } else {\n    //         return(\"\");\n    //     }\n    // }\n  \n    return (\n        <div>\n            <ul className=\"calendarEventList\">\n                {listLength(events)}\n                {moreEvents(events)}\n            </ul>\n        </div>\n    )   \n};","/home/elr/largeProject/event-u/frontend/src/components/FullDay.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { faPlus, faTimesCircle, faRunning, faFlask, faUserGraduate, faPalette, faGuitar, faShoppingBag, faSearch, faHeart, faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  addDays,\n  format,\n  parseISO,\n} from \"date-fns\";\n\nimport \"./css/calendar.css\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport ConfirmDelete from './ConfirmDelete.js';\nimport AddForm from './AddForm.js'\n\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\n\n\nexport default function FullDay(props) {\n    var storage = require('../tokenStorage.js');\n    var testArr = [];\n    var bp = require('./Path.js');\n    //buildpath\n    const app_name = 'event-u'\n    const currentUser = ud.username;\n\n    function buildPath(route)\n    {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n\n    var createdBy = ud.username;\n    const [calEvents, setCalEvents] = useState([]);\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false, \n        title: '', \n        subTitle: ''\n    })\n    const [isAddOpen, setIsAddOpen] = useState(false);\n    \n    \n\n\n    var formatEventDate = \"h:mm aaa\";\n    var apiDateFormat = \"yyyy-MM-dd\";\n    // format(event.startTime, formatEventDate)\n    var startDate;\n    var endDate;\n    if(!props.date){\n        const date = new Date();\n        startDate = format(date, apiDateFormat);\n        endDate = format(addDays(date, 1), apiDateFormat)\n    } else {\n        const propDate = parseISO(props.date);\n        startDate = format(propDate, apiDateFormat);\n        endDate = format(addDays(propDate, 1), apiDateFormat);\n    }\n\n    //get events for the full day panel\n    useEffect(() => {\n        const getCalEvents = async () => {\n            try{\n                const res = await axios.post(buildPath('api/events/inrange/'),\n                {\n                    start : startDate,\n                    end : endDate\n                }\n                );\n                console.log(res.data);\n                setCalEvents(res.data);\n            } catch(err) {\n                console.log(err);\n            }\n        };\n        getCalEvents();\n    }, []);\n\n    \n\n    // Deletes an event \n    const handleDelete = async (id) => {\n        // console.log(\"id: \" + id);\n        const eventDelete = {\n            _id: id,\n        }\n\n        try {\n            const url = buildPath(\"api/events/delete\");\n            const res = await axios.post(url, eventDelete);\n            console.log(\"Item successfully deleted\");\n            setConfirmDialog({\n                ...confirmDialog,\n                isOpen: false\n            })\n        }\n        catch(err) {\n            console.log(err);\n        }\n    }\n\n\n    \n    \n\n   \n\n    return(\n        <div>\n            {/* delete dialog */}\n            <ConfirmDelete \n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n            <h1>{format(parseISO(props.date), \"MMMM dd\")}</h1><br />\n            <button onClick={ () => setIsAddOpen(!isAddOpen)}>add event</button><br/><br/>\n            <ul className=\"fullEventList\">\n            {\n                calEvents.map(event => \n                    <li key={event._id} className=\"fullListItem\">\n                        <h2>{event.title} </h2>\n                        <button>like</button> \n                        <button>edit</button>\n                        \n\n                        {/* delete button displays if creator */}\n                        {currentUser === event.createdBy && \n                            <button  \n                                onClick={() => \n                                    setConfirmDialog({\n                                        isOpen: true,\n                                        title: 'Are you sure you want to delete this event?',\n                                        subtitle: \"This event will be deleted\",\n                                        onConfirm: () => { handleDelete(event._id) }\n                                    })\n                                }\n                            >\n                                delete\n                            </button>\n                        }\n\n\n                        <br/>\n                        {format(parseISO(event.startTime), formatEventDate)}&nbsp;-&nbsp; \n                        {format(parseISO(event.endTime), formatEventDate)} <br/> \n                        {event.address}<br />\n                        {event.description}<br />\n                        created by {event.createdBy}<br />\n                        likes {event.likes}<br />\n                        capacity {event.capacity}<br />\n                        \n                        \n                    </li>        \n                )\n            }\n            </ul>\n\n            {/* Add Event Form */}\n            {isAddOpen ? \n            <div>\n                <AddForm/>\n            </div>\n            : null}   \n        </div>\n    );\n\n}","/home/elr/largeProject/event-u/frontend/src/pages/SettingsPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Settings.js",["230","231","232","233","234","235","236"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './css/settings.css';\nimport { useSpring, animated } from 'react-spring';\n\nvar bp = require('./Path.js');\n\nfunction Settings() {\n\n    var _ud = localStorage.getItem('user_data');\n    var ud = JSON.parse(_ud);\n    var storage = require('../tokenStorage.js');\n    const [passOption, setPassOption] = useState(false);\n    const [firstName, setFirstName] = useState(ud.firstName);\n    const [lastName, setLastName] = useState(ud.lastName);\n    const [username, setUserName] = useState(ud.username);\n    const [password, setPassword] = useState();\n    const [email, setEmail] = useState(ud.email);\n    const [displayed, setDisplayed] = useState(false);\n    const [message, setMessage] = useState('');\n    const changePassword = (e, bool) => {\n        e.preventDefault();\n        setPassOption(bool);\n        setDisplayed(bool);\n    }\n    \n    const onClickUpdatePref = (e) => {\n        e.preventDefault();\n        window.location.href=\"/updatePreferences\";\n        \n    }\n\n    const onClickCancel = (e) => {\n        e.preventDefault();\n        window.location.href=\"/home\";\n    }\n\n    const changeSettings = async (e) => {\n        e.preventDefault();\n        \n        const id = ud._id;\n        console.log(\"id: \" + id);\n        const updatedUser = {\n            firstName,\n            lastName,\n            email,\n            username,\n            password,\n        }\n        console.log(updatedUser);\n\n        const update = {\n            _id: id,\n            profile: updatedUser,\n        }\n        console.log(update);\n\n        try {\n            const url = bp.buildPath(\"api/users/editUser\");\n            await axios.post(url, update).then(function(response) {\n                var res = response.data;\n                storage.storeToken(res);\n                var jwt = require('jsonwebtoken');\n                var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n\n                if(res.error) {\n                    setMessage('User/Password combination incorrect');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n\n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n\n                    var firstName = ud.payload.firstName;\n                    var lastName = ud.payload.lastName;\n                    var username = ud.payload.username;\n                    var preferences = ud.payload.preferences;\n                    var likedEvents = ud.payload.likedEvents;\n                    var email = ud.payload.email;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var userId = ud.payload._id;\n                    var active = ud.payload.active;\n                    console.log(likedEvents);\n                    var user = {firstName:firstName,lastName:lastName,username:username,preferences:preferences,_id:userId,attendedEvents:attendedEvents,email:email,likedEvents:likedEvents,active:active};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                }\n            });\n            console.log(\"User successfully updated\");\n            // window.location.href=\"/home\";\n        }\n        catch(err) {\n            console.log(err);\n        }\n    }\n\n    const props = useSpring({\n        from: {y: 700, opacity: 0},\n        to: {y: 0, opacity: 1}\n    });\n\n    const divProps = useSpring({\n        from: {y: 700, opacity: 0},\n        to: {y: 45, opacity: 1}\n    });\n\n    return (\n        <div className=\"settings\">\n            <animated.div style={divProps} className=\"settings-form\">\n                <h2 id=\"title\">Edit Form</h2>\n                <form>\n                    <label className=\"input-label\">First Name</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Change first name\"\n                        className=\"input-field\"\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                    <label className=\"input-label\">Last Name</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Change last name\"\n                        className=\"input-field\"\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                    <label className=\"input-label\">Email</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Change email\"\n                        className=\"input-field\"\n                        id=\"email-text\"\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label className=\"input-label\">Username</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Change username\"\n                        className=\"input-field\"\n                        onChange={(e) => setUserName(e.target.value)}\n                    />\n                    <label className=\"input-label\">Password</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Change password\"\n                        className=\"input-field\"\n                        id=\"pass-text\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <button style={props} className=\"settings-btn\" id=\"set-preferences\" onClick={onClickUpdatePref}>preferences</button>\n                    <button className=\"settings-btn\" id=\"set-cancel\" onClick={onClickCancel}>Cancel</button>\n                    <animated.button className=\"settings-btn\" id=\"set-save\" onClick={(e) => changeSettings(e)}>Save</animated.button>\n                </form>\n            </animated.div>\n        </div>\n    )\n}\n\nexport default Settings;\n","/home/elr/largeProject/event-u/frontend/src/pages/UpdatePrefPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/UpdatePreferences.js",["237","238","239","240","241","242"],"import React, { useEffect, useState } from 'react';\nimport './css/preferences.css';\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nvar interestArr;\n\n\nfunction ListElements() {\n    const [interestState, setInterestState] = useState([]);\n\n    useEffect(() => {\n        let interestState = [\n            {interest: \"Music\"},\n            {interest: \"Studying\"},\n            {interest: \"Arts & Culture\"},\n            {interest: \"Shopping\"},\n            {interest: \"Science\"},\n            {interest: \"Sports\"},\n            {interest: \"Social\"},\n        ];\n\n        setInterestState(\n            interestState.map(d=> {\n                return {\n                    select: false,\n                    interest: d.interest\n                };\n            })\n        );\n    }, []);\n    interestArr = interestState;\n\n    return(\n        <div>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <input type=\"checkbox\" onChange={e => {\n                                let checked = e.target.checked;\n                                setInterestState(\n                                    interestState.map(d => {\n                                        d.select = checked;\n                                        return d;\n                                    })\n                                );\n                            }}>\n                            </input>\n                        </th>\n                        <th scope=\"col\" id=\"interestHeader\">Interest</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {interestState.map((d,i) => (\n                        <tr key={d.interest}>\n                            <th scope=\"row\">\n                                <input onChange={event=> {\n                                    let checked = event.target.checked;\n                                    setInterestState(\n                                        interestState.map(data => {\n                                            if(d.interest === data.interest) {\n                                                data.select = checked;\n                                            }\n                                            return data;\n                                        })\n                                    );\n                                }}\n                                type=\"checkbox\"\n                                checked={d.select}\n                                ></input>\n                            </th>\n                            <td>{d.interest}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nfunction Options() {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 45, opacity: 1},        \n    })\n\n    return(\n        <animated.div style={props} className=\"options\">\n            <ul className =\"choiceList\">\n                <ListElements />\n            </ul>\n        </animated.div>\n    );\n};\n\nconst HeaderText = ({}) => {\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 70, opacity: 1}\n    });\n    return <animated.h1 style={props} id=\"welcomeMessage\">Hello {firstName} {lastName}!</animated.h1>\n};\n\nconst SkipOption = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 5, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"skipMessage\">Not interested? <a href='/home'>Skip this step.</a></animated.h2>;\n}\n\nconst HeaderText2 = ({}) => {\n    const props = useSpring({\n        from: { y: 700, opacity: 0 },\n        to: {y: 75, opacity: 1}\n    });\n    return<animated.h2 style={props} id=\"welcomeParagraph\">Want to update your preferences? Select some of the following general interests:</animated.h2>;\n};\n\nconst SubmitButton = ({}) => {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var uname = ud.username;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n\n    const [message,setMessage] = useState('');\n\n    const addPreferences = async event =>\n    {\n        const interestPayload = [];\n        for(var i = 0; i < interestArr.length; i++) {\n            if(interestArr[i].select == true) {\n                interestPayload.push(interestArr[i].interest);\n            }\n        }\n\n        event.preventDefault();\n        \n        var obj = {username:uname,preferences:interestPayload};\n        var js = JSON.stringify(obj);\n        console.log(js);\n\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/preferences'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    setMessage('Unable to submit, try again');\n                }\n                else {\n                    storage.storeToken(res);\n                    var jwt = require('jsonwebtoken');\n                    \n                    var ud = jwt.decode(storage.retrieveToken(),{complete:true});\n                    \n                    var preferences = ud.payload.preferences;\n                    var attendedEvents = ud.payload.attendedEvents;\n                    var email = ud.payload.email;\n                    var likedEvents = ud.payload.likedEvents;\n\n                    var user = {firstName:firstName,lastName:lastName,preferences:preferences,username:uname,likedEvents:likedEvents,email:email,attendedEvents:attendedEvents};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                console.log(message);\n            });\n            window.location.href = '/settings';\n    }\n\n    const props = useSpring({\n        from: {y: 700, opacity: 0},\n        to: {y: 0, opacity: 1}\n    });\n\n    return(\n        <div id=\"submitButtonContainer\">\n            <animated.button style={props} onClick={addPreferences} id=\"submitSelections\">Done</animated.button>\n        </div>\n    );\n};\n\nfunction UpdatePreferences() {\n    //const[on, set] = React.useState(true);\n    return(\n        <div className=\"preferencesPage\">\n            <HeaderText />\n            <HeaderText2 />\n            <Options />\n            <SubmitButton />\n            {/* <SkipOption /> */}\n            <span></span>\n        </div>\n    );\n};\n\nexport default UpdatePreferences;","/home/elr/largeProject/event-u/frontend/src/pages/VerifyPage.js",[],"/home/elr/largeProject/event-u/frontend/src/components/Verify.js",["243","244","245"],"import React, { useState } from 'react';\nimport './css/login.css';\nimport './css/verify.css'\nimport axios from 'axios';\n\nfunction Verify()\n{   \n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage');\n    \n    const [message, setMessage] = useState('');\n    const [verifyCode, setVerifyCode] = useState('');\n    \n    var _ud = localStorage.getItem('user_data');\n    var ud = JSON.parse(_ud);\n    var fname = ud.firstName;\n    var lname = ud.lastName;\n\n    const sendVerification = async event =>\n    {\n        var obj = {username:ud.username,firstName:ud.firstName,lastName:ud.lastName,email:ud.email,activationCode:ud.activationCode};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/sendWelcomeEmail'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        try {\n            const result = await axios(config)\n                .then(function (response) {\n                    var res = response.data;\n                    setMessage('Email resent!');\n                })\n        }\n        catch(e)\n        {\n            console.log(e);\n        }\n    }\n    \n    const doVerify = async event => {\n        event.preventDefault();\n        var trueCode = ud.activationCode;\n        var x = parseInt(verifyCode);\n        if(x === trueCode) {\n            var obj = {username:ud.username, active:true};\n            var js = JSON.stringify(obj);\n\n            var config =\n            {\n                method: 'post',\n                url: bp.buildPath('api/users/activate'),\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                },\n                data: js\n            };\n\n            axios(config)\n                .then(function(response) {\n                    var res=response.data;\n                    if(res.error) {\n                        setMessage('Verification Code Incorrect');\n                    }\n                    else\n                    {\n                        storage.storeToken(res);\n                        var jwt = require('jsonwebtoken');\n\n                        var ud = jwt.decode(storage.retrieveToken(), {complete:true});\n                        var firstName = ud.payload.firstName;\n                        var lastName = ud.payload.lastName;\n                        var username = ud.payload.username;\n                        var preferences = ud.payload.preferences;\n                        var likedEvents = ud.payload.likedEvents;\n                        var email = ud.payload.email;\n                        var attendedEvents = ud.payload.attendedEvents;\n                        var userId = ud.payload._id;\n                        var active = ud.payload.active;\n\n                        var user = {firstName:firstName,lastName:lastName,username:username,preferences:preferences,_id:userId,attendedEvents:attendedEvents,email:email,likedEvents:likedEvents,active:active};\n                        localStorage.setItem('user_data', JSON.stringify(user));\n                        window.location.href = '/preferences';\n                    }\n                })\n        }\n        else {\n            setMessage('Verification Code Incorrect');\n        }\n    };\n\n    return(\n        <div className=\"verifyDiv\">\n            <div className=\"verifyContainer\">\n                <div className=\"verifyForm\">\n                    <h1 id=\"verifyHeader\">Hello, {fname} {lname}!</h1>\n                    <h2 id=\"verifySubheader\">Enter your verification code found in your email below:</h2>\n                    <form className=\"submitVerification\" onSubmit={doVerify}>\n                        <input className=\"verifyInput\" type=\"text\" value={verifyCode} onChange={e => setVerifyCode(e.target.value)} placeholder=\"Verification Code\" /><br />\n                        <button type=\"submit\" id=\"submitVerify\">Verify</button>\n                    </form>\n                    <br />\n                    <span id=\"errMsg\">{message}</span>\n                    <h3 id=\"lostMsg\">Can't find your code? <a id=\"codeClick\" onClick={sendVerification}>Click here to resend it!</a></h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Verify;\n","/home/elr/largeProject/event-u/frontend/src/components/AddForm.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import './css/home.css';\nimport { faPlus, faTimesCircle, faRunning, faFlask, faUserGraduate, faPalette, faGuitar, faShoppingBag, faSearch, faHeart, faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState, useEffect } from 'react';\nimport TopNav from '../components/TopNav';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSpring, animated } from 'react-spring';\nimport axios from 'axios';\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n    format,\n    parseISO,\n    isDate,\n    isExists\n  } from \"date-fns\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n\nvar _ud = localStorage.getItem('user_data');\nvar ud = JSON.parse(_ud);\n\nconst initialList = [];\n\n\n// function AddEvent() {\n//     // this will redirect you to the page for adding events\n//     // window.location.href=\"http://localhost:3000\";\n// }\n\n//globals\nvar Month = format(new Date(), \"MM\");\nvar Day = \"01\";\nvar Year= format(new Date(), \"yyyy\");\nvar StartHour = \"12\";\nvar StartMin = \"00\";\nvar EndHour = \"12\";\nvar EndMin = \"00\";\nvar startTime;\nvar endTime;\n\n\n\n\nfunction Events() {\n    var bp = require('./Path.js');\n    var storage = require('../tokenStorage.js');\n    var testArr = [];\n\n    const [name, setName] = useState('');\n\n    const [contentStatus, displayContent] = React.useState(true);\n\n    const contentProps = useSpring({\n        opacity: contentStatus ? 1 : 0,\n        marginTop: contentStatus ? 295 : -1000\n    })\n\n    const [editStatus, displayEdit] = React.useState(false);\n    const editProps = useSpring ({\n        opacity: editStatus ? 1 : 0,\n        marginTop: editStatus ? -250 : -1000\n    })\n\n    const [userEvents, setUserEvents] = useState([]);\n    //var userLiked = ud.likedEvents;\n\n    var createdBy = ud.username;\n    const [eventToDelete, setEventToDelete] = useState('');\n    const [values, setValues] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [currentPlaceId, setCurrentPlaceId] = useState(null);\n    const [newPlace, setNewPlace] = useState(null);\n    const [title, setTitle] = useState(null);\n    const [lat, setLat] = useState(null);\n    const [long, setLong] = useState(null);\n    const [category, setCategory] = useState(null);\n    const [address, setAddress] = useState(null);    \n    const [description, setDescription] = useState(null);\n    const [likes, setLikes] = useState(0);\n    const [capacity, setCapacity] = useState(0);\n    const [eventMsg, setEventMsg] = useState(\"\");\n    const [currentId, setCurrentId] = useState();\n\n\n    \n    const handleSubmit = async (e) => {\n        // var newStartHour, newEndHour;\n        // if(startAMPM === \"PM\"){\n        //     console.log(\"we in the if startAMPM\");\n        //     newStartHour = (parseInt(startHour) + 12);\n        //     setStartHour(newStartHour.toString());\n        // }\n        // if(endAMPM === \"PM\"){\n        //     console.log(\"we in the if endAMPM\");\n        //     newEndHour = (parseInt(endHour) + 12);\n        //     setEndHour(newEndHour.toString());\n        // }\n        // var startTimeString = year + \"-\" + month + \"-\" + day + \"T\" + startHour + \":\" + startMin;\n        // var endTimeString = year + \"-\" + month + \"-\" + day + \"T\" + endHour + \":\" + endMin;\n\n        const startTimeString = Year + \"-\" + Month + \"-\" + Day + \"T\" + StartHour + \":\" + StartMin;\n        const endTimeString = Year + \"-\" + Month + \"-\" + Day + \"T\" + EndHour + \":\" + EndMin;\n      \n\n        startTime = startTimeString;\n        endTime = endTimeString;\n       \n        \n        e.preventDefault();\n        if(title === null) {\n            setEventMsg(\"Invalid title\");\n            return;\n        }\n        else if(category === null) {\n            setEventMsg(\"No category selected\");\n            return;\n        }\n        else if(address === null) {\n            setEventMsg(\"Invalid address\");\n            return;\n        }\n        else if(startTime === null || !isDate(parseISO(startTime))) {\n            setEventMsg(\"Invalid start time\");\n            return;\n        }\n        else if(endTime === null || !isExists(parseInt(Year),parseInt(Month),parseInt(Day)) ) {\n            setEventMsg(\"Invalid end time\");\n            return;\n        }\n        else if(description === null) {\n            setEventMsg(\"Invalid description\");\n            return;\n        }\n        else if(capacity === null) {\n            setEventMsg(\"Insert a capacity\");\n            return;\n        }\n\n\n        const newEvent = {\n            title,\n            category,\n            address,\n            lat,\n            long,\n            startTime,\n            endTime,\n            createdBy,\n            description,\n            // likes,\n            capacity,\n        }\n\n        console.log(newEvent);\n        try {\n            const url = bp.buildPath(\"api/events/newevent\");\n\n            const res = await axios.post(url, newEvent);\n            setEvents([...events, res.data]);\n            const addToLike = res.data;\n            handleLike(addToLike._id);\n            setNewPlace(null);\n            setEventMsg('');\n            displayContent(a => !a);\n        } catch(err) {\n            console.log(err)\n        }\n    };\n    \n\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n\n    const ref = useOnclickOutside(() => {\n        // When user clicks outside of the component, we can dismiss\n        // the searched suggestions by calling this method\n        clearSuggestions();\n    });\n\n    const handleAddressInput = (e) => {\n        // Update the keyword of the input element\n        setValue(e.target.value);\n    };\n\n    const handleSelect =\n        ({ description }) =>\n        () => {\n          // When user selects a place, we can replace the keyword without request data from API\n          // by setting the second parameter to \"false\"\n          setValue(description, false);\n          setAddress(description);\n          clearSuggestions();\n\n          // Get latitude and longitude via utility functions\n          getGeocode({ address: description })\n            .then((results) => getLatLng(results[0]))\n            .then(({ lat, lng }) => {\n                setLat(lat);\n                setLong(lng);\n            })\n            .catch((error) => {\n              console.log(\"Error: \", error);\n            });\n        };\n\n    const renderSuggestions = () =>\n        data.map((suggestion) => {\n          const {\n            place_id,\n            structured_formatting: { main_text, secondary_text },\n          } = suggestion;\n\n        return (\n            <li className=\"addressResults\" key={place_id} onClick={handleSelect(suggestion)}>\n              <strong>{main_text}</strong> <small>{secondary_text}</small>\n            </li>\n        );\n    });\n\n    function handleLike(itemId)\n    {\n        var _userd = localStorage.getItem('user_data');\n        var userd = JSON.parse(_userd);\n        var likedEvents = userd.likedEvents;\n        if(likedEvents.includes(itemId)) { // remove the item from likes if it is there\n            for(var i = 0; i < likedEvents.length; i++) {\n                if( likedEvents[i] === itemId) {\n                    likedEvents.splice(i, 1);\n                }\n            }\n        }\n        else { // add it if it isnt\n            likedEvents.push(itemId);\n        }\n\n        testArr = likedEvents;\n        addLike();\n    }\n\n    const addLike = async event =>\n    {\n        var obj = {username:ud.username,likedEvents:testArr};\n        var js = JSON.stringify(obj);\n        var config =\n        {\n            method: 'post',\n            url: bp.buildPath('api/users/likes'),\n            headers:\n            {\n                'Content-Type': 'application/json',\n            },\n            data: js\n        }\n\n        await axios(config)\n            .then(function (response) {\n                var res = response.data;\n                if(res.error) {\n                    console.log(res.error);\n                }\n                else {\n                    storage.storeToken(res);\n\n                    var user = {firstName:ud.firstName,lastName:ud.lastName,preferences:ud.preferences,username:ud.username,likedEvents:testArr};\n                    localStorage.setItem('user_data', JSON.stringify(user));\n                    _ud = localStorage.getItem('user_data');\n                    ud = JSON.parse(_ud);\n                }\n            })\n    }\n\n\n\n\n    function getIcon(preferenceName)\n    {\n        if(preferenceName === 'Sports')\n            return faRunning;\n        else if(preferenceName === 'Science')\n            return faFlask;\n        else if(preferenceName === 'Studying')\n            return faUserGraduate;\n        else if(preferenceName === 'Arts & Culture')\n            return faPalette;\n        else if(preferenceName === 'Music')\n            return faGuitar;\n        else if(preferenceName === 'Shopping')\n            return faShoppingBag;\n    }\n\n    function compareIds(x)\n    {\n        if(x === currentId)\n            return true;\n        return false;\n    }\n\n    function handleOpenEdit(itemId, itemAddress, itemTitle, itemCategory, itemCapacity, itemDesc)\n    {\n        displayEdit(a => !a);\n        setCurrentId(itemId);\n        setAddress(itemAddress);\n        setTitle(itemTitle);\n        setCategory(itemCategory);\n        setCapacity(itemCapacity);\n        setDescription(itemDesc)\n    }\n\n    return(\n        <div >\n            \n            \n\n\n            <animated.div className=\"addEvent\" style={contentProps}>\n                <div className=\"eventPostContainer\">\n                    <div>\n                        <div id=\"closeForm\" onClick={() => displayContent(a => !a)}><FontAwesomeIcon icon={faTimesCircle} /></div>\n                        <form className=\"eventForm\" onSubmit={handleSubmit} autoComplete=\"off\">\n                            <h4 className=\"form-header\">Add an Event!</h4>\n                            <label className=\"label\" id=\"name-label\">title:\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    id=\"name-input\"\n                                    placeholder=\"Enter title...\"\n                                    onChange={(e) => setTitle(e.target.value)}\n                                />\n                            </label>\n                            <label className=\"label\" id=\"cat-label\">category:\n                                <select id=\"options-list\" onChange={(e) => setCategory(e.target.value)}>\n                                    <option id=\"cat-options\" value={null}></option>\n                                    <option id=\"cat-options\" value=\"Arts & Culture\">Arts & Culture</option>\n                                    <option id=\"cat-options\" value=\"Sports\">Sports</option>\n                                    <option id=\"cat-options\" value=\"Science\">Science</option>\n                                    <option id=\"cat-options\" value=\"Music\">Music</option>\n                                    <option id=\"cat-options\" value=\"Shopping\">Shopping</option>\n                                    <option id=\"cat-options\" value=\"Studying\">Studying</option>\n                                    <option id=\"cat-options\" value=\"Social\">Social</option>\n                                </select>\n                            </label>\n                            <label className=\"label\" id=\"add-label\">address:\n                                <div ref={ref}>\n                                    <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    id=\"add-input\"\n                                    placeholder=\"Enter address...\"\n                                    onChange={handleAddressInput}\n                                    />\n                                    {status === \"OK\" && <ul className=\"addressUl\">{renderSuggestions()}</ul>}\n                                </div>\n                            </label>\n\n                            <label className=\"label\" id=\"desc-label\">Date:\n                                <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"MM\")} onChange={(e) => Month = e.target.value}>\n                                    <option className=\"date-options\" value=\"01\">January</option>\n                                    <option className=\"date-options\" value=\"02\">February</option>\n                                    <option className=\"date-options\" value=\"03\">March</option>\n                                    <option className=\"date-options\" value=\"04\">April</option>\n                                    <option className=\"date-options\" value=\"05\">May</option>\n                                    <option className=\"date-options\" value=\"06\">June</option>\n                                    <option className=\"date-options\" value=\"07\">July</option>\n                                    <option className=\"date-options\" value=\"08\">August</option>\n                                    <option className=\"date-options\" value=\"09\">September</option>\n                                    <option className=\"date-options\" value=\"10\">October</option>\n                                    <option className=\"date-options\" value=\"11\">November</option>\n                                    <option className=\"date-options\" value=\"12\">December</option>\n                                </select>\n                                <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"dd\")} onChange={(e) => Day = e.target.value}>\n                                    <option className=\"date-options\" value=\"01\">01</option>\n                                    <option className=\"date-options\" value=\"02\">02</option>\n                                    <option className=\"date-options\" value=\"03\">03</option>\n                                    <option className=\"date-options\" value=\"04\">04</option>\n                                    <option className=\"date-options\" value=\"05\">05</option>\n                                    <option className=\"date-options\" value=\"06\">06</option>\n                                    <option className=\"date-options\" value=\"07\">07</option>\n                                    <option className=\"date-options\" value=\"08\">08</option>\n                                    <option className=\"date-options\" value=\"09\">09</option>\n                                    <option className=\"date-options\" value=\"10\">10</option>\n                                    <option className=\"date-options\" value=\"11\">11</option>\n                                    <option className=\"date-options\" value=\"12\">12</option>\n                                    <option className=\"date-options\" value=\"13\">13</option>\n                                    <option className=\"date-options\" value=\"14\">14</option>\n                                    <option className=\"date-options\" value=\"15\">15</option>\n                                    <option className=\"date-options\" value=\"16\">16</option>\n                                    <option className=\"date-options\" value=\"17\">17</option>\n                                    <option className=\"date-options\" value=\"18\">18</option>\n                                    <option className=\"date-options\" value=\"19\">19</option>\n                                    <option className=\"date-options\" value=\"20\">20</option>\n                                    <option className=\"date-options\" value=\"21\">21</option>\n                                    <option className=\"date-options\" value=\"22\">22</option>\n                                    <option className=\"date-options\" value=\"23\">23</option>\n                                    <option className=\"date-options\" value=\"24\">24</option>\n                                    <option className=\"date-options\" value=\"25\">25</option>\n                                    <option className=\"date-options\" value=\"26\">26</option>\n                                    <option className=\"date-options\" value=\"27\">27</option>\n                                    <option className=\"date-options\" value=\"28\">28</option>\n                                    <option className=\"date-options\" value=\"29\">29</option>\n                                    <option className=\"date-options\" value=\"30\">30</option>\n                                    <option className=\"date-options\" value=\"31\">31</option>\n                                </select>\n                                <select className=\"time\" id=\"date-month-select\" defaultValue={format(new Date(), \"yyyy\")} onChange={(e) => Year = e.target.value}>\n                                    <option className=\"date-options\" value=\"2021\">2021</option>\n                                    <option className=\"date-options\" value=\"2022\">2022</option>\n                                    <option className=\"date-options\" value=\"2023\">2023</option>\n                                    <option className=\"date-options\" value=\"2024\">2024</option>\n                                    <option className=\"date-options\" value=\"2025\">2025</option>\n                                    <option className=\"date-options\" value=\"2026\">2026</option>   \n                                    <option className=\"date-options\" value=\"2027\">2027</option>   \n                                    <option className=\"date-options\" value=\"2028\">2028</option>   \n                                    <option className=\"date-options\" value=\"2029\">2029</option>   \n                                    <option className=\"date-options\" value=\"2030\">2030</option>                         \n                                </select>\n                            </label>\n\n                            \n                            \n                            <label className=\"label\" id=\"startTime-label\">start time:\n                                <select className=\"time\" defaultValue=\"12\" id=\"time-hour-select\" onChange={(e) => StartHour = e.target.value}>\n                                    <option className=\"time-options\" value=\"00\">12 AM</option>\n                                    <option className=\"time-options\" value=\"01\">1 AM</option>\n                                    <option className=\"time-options\" value=\"02\">2 AM</option>\n                                    <option className=\"time-options\" value=\"03\">3 AM</option>\n                                    <option className=\"time-options\" value=\"04\">4 AM</option>\n                                    <option className=\"time-options\" value=\"05\">5 AM</option>\n                                    <option className=\"time-options\" value=\"06\">6 AM</option>\n                                    <option className=\"time-options\" value=\"07\">7 AM</option>\n                                    <option className=\"time-options\" value=\"08\">8 AM</option>\n                                    <option className=\"time-options\" value=\"09\">9 AM</option>\n                                    <option className=\"time-options\" value=\"10\">10 AM</option>\n                                    <option className=\"time-options\" value=\"11\">11 AM</option>\n                                    <option className=\"time-options\" value=\"12\">12 PM</option>\n                                    <option className=\"time-options\" value=\"13\">1 PM</option>\n                                    <option className=\"time-options\" value=\"14\">2 PM</option>\n                                    <option className=\"time-options\" value=\"15\">3 PM</option>\n                                    <option className=\"time-options\" value=\"16\">4 PM</option>\n                                    <option className=\"time-options\" value=\"17\">5 PM</option>\n                                    <option className=\"time-options\" value=\"18\">6 PM</option>\n                                    <option className=\"time-options\" value=\"19\">7 PM</option>\n                                    <option className=\"time-options\" value=\"20\">8 PM</option>\n                                    <option className=\"time-options\" value=\"21\">9 PM</option>\n                                    <option className=\"time-options\" value=\"22\">10 PM</option>\n                                    <option className=\"time-options\" value=\"23\">11 PM</option>                                  \n                                    \n                                </select>\n                                <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => StartMin = e.target.value}>\n                                    <option className=\"time-options\" value=\"00\">00</option>\n                                    <option className=\"time-options\" value=\"01\">01</option>\n                                    <option className=\"time-options\" value=\"02\">02</option>\n                                    <option className=\"time-options\" value=\"03\">03</option>\n                                    <option className=\"time-options\" value=\"04\">04</option>\n                                    <option className=\"time-options\" value=\"05\">05</option>\n                                    <option className=\"time-options\" value=\"06\">06</option>\n                                    <option className=\"time-options\" value=\"07\">07</option>\n                                    <option className=\"time-options\" value=\"08\">08</option>\n                                    <option className=\"time-options\" value=\"09\">09</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"13\">13</option>\n                                    <option className=\"time-options\" value=\"14\">14</option>\n                                    <option className=\"time-options\" value=\"15\">15</option>                                    \n                                    <option className=\"time-options\" value=\"16\">16</option>\n                                    <option className=\"time-options\" value=\"17\">17</option>\n                                    <option className=\"time-options\" value=\"18\">18</option>\n                                    <option className=\"time-options\" value=\"19\">19</option>\n                                    <option className=\"time-options\" value=\"20\">20</option>\n                                    <option className=\"time-options\" value=\"21\">21</option>\n                                    <option className=\"time-options\" value=\"22\">22</option>\n                                    <option className=\"time-options\" value=\"23\">23</option>\n                                    <option className=\"time-options\" value=\"24\">24</option>\n                                    <option className=\"time-options\" value=\"25\">25</option>                                    \n                                    <option className=\"time-options\" value=\"26\">26</option>\n                                    <option className=\"time-options\" value=\"27\">27</option>\n                                    <option className=\"time-options\" value=\"28\">28</option>\n                                    <option className=\"time-options\" value=\"29\">29</option>\n                                    <option className=\"time-options\" value=\"30\">30</option>\n                                    <option className=\"time-options\" value=\"31\">31</option>\n                                    <option className=\"time-options\" value=\"32\">32</option>\n                                    <option className=\"time-options\" value=\"33\">33</option>\n                                    <option className=\"time-options\" value=\"34\">34</option>\n                                    <option className=\"time-options\" value=\"35\">35</option>                                    \n                                    <option className=\"time-options\" value=\"36\">36</option>\n                                    <option className=\"time-options\" value=\"37\">37</option>\n                                    <option className=\"time-options\" value=\"38\">38</option>\n                                    <option className=\"time-options\" value=\"39\">39</option>\n                                    <option className=\"time-options\" value=\"40\">40</option>\n                                    <option className=\"time-options\" value=\"41\">41</option>\n                                    <option className=\"time-options\" value=\"42\">42</option>\n                                    <option className=\"time-options\" value=\"43\">43</option>\n                                    <option className=\"time-options\" value=\"44\">44</option>\n                                    <option className=\"time-options\" value=\"45\">45</option>                                 \n                                    <option className=\"time-options\" value=\"46\">46</option>\n                                    <option className=\"time-options\" value=\"47\">47</option>\n                                    <option className=\"time-options\" value=\"48\">48</option>\n                                    <option className=\"time-options\" value=\"49\">49</option>\n                                    <option className=\"time-options\" value=\"50\">50</option>\n                                    <option className=\"time-options\" value=\"51\">51</option>\n                                    <option className=\"time-options\" value=\"52\">52</option>\n                                    <option className=\"time-options\" value=\"53\">53</option>\n                                    <option className=\"time-options\" value=\"54\">54</option>\n                                    <option className=\"time-options\" value=\"55\">55</option>                                    \n                                    <option className=\"time-options\" value=\"56\">56</option>\n                                    <option className=\"time-options\" value=\"57\">57</option>\n                                    <option className=\"time-options\" value=\"58\">58</option>\n                                    <option className=\"time-options\" value=\"59\">59</option>\n                                </select>\n                                {/* <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setStartAMPM(e.target.value)}>\n                                    <option className=\"time-options\" value=\"AM\">AM</option>\n                                    <option className=\"time-options\" value=\"PM\">PM</option>\n                                </select> */}\n                            </label>\n                            <label className=\"label\" id=\"endTime-label\">end time:\n                                <select className=\"time\" id=\"time-hour-select\" defaultValue=\"12\" onChange={(e) => EndHour = e.target.value}>\n                                <option className=\"time-options\" value=\"00\">12 AM</option>\n                                    <option className=\"time-options\" value=\"01\">1 AM</option>\n                                    <option className=\"time-options\" value=\"02\">2 AM</option>\n                                    <option className=\"time-options\" value=\"03\">3 AM</option>\n                                    <option className=\"time-options\" value=\"04\">4 AM</option>\n                                    <option className=\"time-options\" value=\"05\">5 AM</option>\n                                    <option className=\"time-options\" value=\"06\">6 AM</option>\n                                    <option className=\"time-options\" value=\"07\">7 AM</option>\n                                    <option className=\"time-options\" value=\"08\">8 AM</option>\n                                    <option className=\"time-options\" value=\"09\">9 AM</option>\n                                    <option className=\"time-options\" value=\"10\">10 AM</option>\n                                    <option className=\"time-options\" value=\"11\">11 AM</option>\n                                    <option className=\"time-options\" value=\"12\">12 PM</option>\n                                    <option className=\"time-options\" value=\"13\">1 PM</option>\n                                    <option className=\"time-options\" value=\"14\">2 PM</option>\n                                    <option className=\"time-options\" value=\"15\">3 PM</option>\n                                    <option className=\"time-options\" value=\"16\">4 PM</option>\n                                    <option className=\"time-options\" value=\"17\">5 PM</option>\n                                    <option className=\"time-options\" value=\"18\">6 PM</option>\n                                    <option className=\"time-options\" value=\"19\">7 PM</option>\n                                    <option className=\"time-options\" value=\"20\">8 PM</option>\n                                    <option className=\"time-options\" value=\"21\">9 PM</option>\n                                    <option className=\"time-options\" value=\"22\">10 PM</option>\n                                    <option className=\"time-options\" value=\"23\">11 PM</option>  \n                                </select>\n                                <select className=\"time\" id=\"time-min-select\" defaultValue=\"00\" onChange={(e) => EndMin = e.target.value}>\n                                <option className=\"time-options\" value=\"00\">00</option>\n                                    <option className=\"time-options\" value=\"01\">01</option>\n                                    <option className=\"time-options\" value=\"02\">02</option>\n                                    <option className=\"time-options\" value=\"03\">03</option>\n                                    <option className=\"time-options\" value=\"04\">04</option>\n                                    <option className=\"time-options\" value=\"05\">05</option>\n                                    <option className=\"time-options\" value=\"06\">06</option>\n                                    <option className=\"time-options\" value=\"07\">07</option>\n                                    <option className=\"time-options\" value=\"08\">08</option>\n                                    <option className=\"time-options\" value=\"09\">09</option>\n                                    <option className=\"time-options\" value=\"10\">10</option>\n                                    <option className=\"time-options\" value=\"11\">11</option>\n                                    <option className=\"time-options\" value=\"12\">12</option>\n                                    <option className=\"time-options\" value=\"13\">13</option>\n                                    <option className=\"time-options\" value=\"14\">14</option>\n                                    <option className=\"time-options\" value=\"15\">15</option>                                    \n                                    <option className=\"time-options\" value=\"16\">16</option>\n                                    <option className=\"time-options\" value=\"17\">17</option>\n                                    <option className=\"time-options\" value=\"18\">18</option>\n                                    <option className=\"time-options\" value=\"19\">19</option>\n                                    <option className=\"time-options\" value=\"20\">20</option>\n                                    <option className=\"time-options\" value=\"21\">21</option>\n                                    <option className=\"time-options\" value=\"22\">22</option>\n                                    <option className=\"time-options\" value=\"23\">23</option>\n                                    <option className=\"time-options\" value=\"24\">24</option>\n                                    <option className=\"time-options\" value=\"25\">25</option>                                    \n                                    <option className=\"time-options\" value=\"26\">26</option>\n                                    <option className=\"time-options\" value=\"27\">27</option>\n                                    <option className=\"time-options\" value=\"28\">28</option>\n                                    <option className=\"time-options\" value=\"29\">29</option>\n                                    <option className=\"time-options\" value=\"30\">30</option>\n                                    <option className=\"time-options\" value=\"31\">31</option>\n                                    <option className=\"time-options\" value=\"32\">32</option>\n                                    <option className=\"time-options\" value=\"33\">33</option>\n                                    <option className=\"time-options\" value=\"34\">34</option>\n                                    <option className=\"time-options\" value=\"35\">35</option>                                    \n                                    <option className=\"time-options\" value=\"36\">36</option>\n                                    <option className=\"time-options\" value=\"37\">37</option>\n                                    <option className=\"time-options\" value=\"38\">38</option>\n                                    <option className=\"time-options\" value=\"39\">39</option>\n                                    <option className=\"time-options\" value=\"40\">40</option>\n                                    <option className=\"time-options\" value=\"41\">41</option>\n                                    <option className=\"time-options\" value=\"42\">42</option>\n                                    <option className=\"time-options\" value=\"43\">43</option>\n                                    <option className=\"time-options\" value=\"44\">44</option>\n                                    <option className=\"time-options\" value=\"45\">45</option>                                 \n                                    <option className=\"time-options\" value=\"46\">46</option>\n                                    <option className=\"time-options\" value=\"47\">47</option>\n                                    <option className=\"time-options\" value=\"48\">48</option>\n                                    <option className=\"time-options\" value=\"49\">49</option>\n                                    <option className=\"time-options\" value=\"50\">50</option>\n                                    <option className=\"time-options\" value=\"51\">51</option>\n                                    <option className=\"time-options\" value=\"52\">52</option>\n                                    <option className=\"time-options\" value=\"53\">53</option>\n                                    <option className=\"time-options\" value=\"54\">54</option>\n                                    <option className=\"time-options\" value=\"55\">55</option>                                    \n                                    <option className=\"time-options\" value=\"56\">56</option>\n                                    <option className=\"time-options\" value=\"57\">57</option>\n                                    <option className=\"time-options\" value=\"58\">58</option>\n                                    <option className=\"time-options\" value=\"59\">59</option>\n                                </select>\n                                {/* <select className=\"time\" id=\"am/pm\" defaultValue=\"AM\" onChange={(e) => setEndAMPM(e.target.value)}>\n                                    <option className=\"time-options\" value=\"AM\">AM</option>\n                                    <option className=\"time-options\" value=\"PM\">PM</option>\n                                </select> */}\n                            </label>                          \n\n                            <label className=\"label\" id=\"desc-label\" >description:</label>\n                            <textarea\n                                id=\"comment-box\"\n                                placeholder=\"Comments...\"\n                                rows=\"9\"\n                                cols=\"40\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <label className=\"label\" id=\"cap-label\">capacity:\n                                <input\n                                    type=\"number\"\n                                    className=\"input-field\"\n                                    id=\"cap-input\"\n                                    min=\"0\"\n                                    onChange={(e) => setCapacity(e.target.value)}\n                                />\n                            </label>\n                            <div className=\"submitContainer\">\n                                <button type =\"submit\" id=\"submitEvent\">Add Event</button>\n                            </div>\n                            <span className=\"eventError\">{eventMsg}</span>\n                        </form>\n                    </div>\n                </div>\n            </animated.div>\n\n        </div>\n    );\n};\n\n\n\n\nfunction AddForm()\n{\n    return(\n        <Events />\n    );\n};\n\nexport default AddForm;\n",{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"280","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"281","line":15,"column":12,"nodeType":"278","messageId":"279","endLine":15,"endColumn":19},{"ruleId":"276","severity":1,"message":"282","line":38,"column":19,"nodeType":"278","messageId":"279","endLine":38,"endColumn":25},{"ruleId":"276","severity":1,"message":"283","line":14,"column":9,"nodeType":"278","messageId":"279","endLine":14,"endColumn":13},{"ruleId":"284","severity":1,"message":"285","line":100,"column":21,"nodeType":"286","messageId":"287","endLine":100,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":111,"column":21,"nodeType":"286","messageId":"287","endLine":111,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":119,"column":22,"nodeType":"286","messageId":"287","endLine":119,"endColumn":24},{"ruleId":"284","severity":1,"message":"285","line":127,"column":23,"nodeType":"286","messageId":"287","endLine":127,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":140,"column":38,"nodeType":"290","messageId":"287","endLine":140,"endColumn":40},{"ruleId":"276","severity":1,"message":"291","line":5,"column":10,"nodeType":"278","messageId":"279","endLine":5,"endColumn":24},{"ruleId":"276","severity":1,"message":"292","line":5,"column":32,"nodeType":"278","messageId":"279","endLine":5,"endColumn":36},{"ruleId":"276","severity":1,"message":"293","line":38,"column":12,"nodeType":"278","messageId":"279","endLine":38,"endColumn":18},{"ruleId":"276","severity":1,"message":"294","line":38,"column":20,"nodeType":"278","messageId":"279","endLine":38,"endColumn":29},{"ruleId":"276","severity":1,"message":"295","line":42,"column":23,"nodeType":"278","messageId":"279","endLine":42,"endColumn":35},{"ruleId":"276","severity":1,"message":"296","line":47,"column":12,"nodeType":"278","messageId":"279","endLine":47,"endColumn":16},{"ruleId":"276","severity":1,"message":"297","line":49,"column":12,"nodeType":"278","messageId":"279","endLine":49,"endColumn":25},{"ruleId":"276","severity":1,"message":"298","line":49,"column":27,"nodeType":"278","messageId":"279","endLine":49,"endColumn":41},{"ruleId":"276","severity":1,"message":"299","line":52,"column":12,"nodeType":"278","messageId":"279","endLine":52,"endColumn":18},{"ruleId":"276","severity":1,"message":"300","line":52,"column":20,"nodeType":"278","messageId":"279","endLine":52,"endColumn":29},{"ruleId":"276","severity":1,"message":"301","line":53,"column":12,"nodeType":"278","messageId":"279","endLine":53,"endColumn":15},{"ruleId":"276","severity":1,"message":"302","line":53,"column":17,"nodeType":"278","messageId":"279","endLine":53,"endColumn":23},{"ruleId":"276","severity":1,"message":"303","line":73,"column":9,"nodeType":"278","messageId":"279","endLine":73,"endColumn":14},{"ruleId":"276","severity":1,"message":"304","line":257,"column":19,"nodeType":"278","messageId":"279","endLine":257,"endColumn":22},{"ruleId":"276","severity":1,"message":"305","line":268,"column":11,"nodeType":"278","messageId":"279","endLine":268,"endColumn":17},{"ruleId":"276","severity":1,"message":"304","line":279,"column":19,"nodeType":"278","messageId":"279","endLine":279,"endColumn":22},{"ruleId":"276","severity":1,"message":"304","line":298,"column":19,"nodeType":"278","messageId":"279","endLine":298,"endColumn":22},{"ruleId":"288","severity":1,"message":"289","line":303,"column":23,"nodeType":"290","messageId":"287","endLine":303,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":459,"column":33,"nodeType":"290","messageId":"287","endLine":459,"endColumn":35},{"ruleId":"276","severity":1,"message":"304","line":33,"column":21,"nodeType":"278","messageId":"279","endLine":33,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":93,"column":29,"nodeType":"278","messageId":"308","endLine":93,"endColumn":33},{"ruleId":"309","severity":1,"message":"310","line":115,"column":54,"nodeType":"311","endLine":115,"endColumn":91},{"ruleId":"276","severity":1,"message":"312","line":2,"column":124,"nodeType":"278","messageId":"279","endLine":2,"endColumn":130},{"ruleId":"276","severity":1,"message":"313","line":23,"column":7,"nodeType":"278","messageId":"279","endLine":23,"endColumn":18},{"ruleId":"276","severity":1,"message":"314","line":41,"column":18,"nodeType":"278","messageId":"279","endLine":41,"endColumn":25},{"ruleId":"276","severity":1,"message":"282","line":66,"column":23,"nodeType":"278","messageId":"279","endLine":66,"endColumn":29},{"ruleId":"276","severity":1,"message":"315","line":102,"column":12,"nodeType":"278","messageId":"279","endLine":102,"endColumn":20},{"ruleId":"276","severity":1,"message":"316","line":113,"column":11,"nodeType":"278","messageId":"279","endLine":113,"endColumn":22},{"ruleId":"276","severity":1,"message":"282","line":136,"column":19,"nodeType":"278","messageId":"279","endLine":136,"endColumn":25},{"ruleId":"276","severity":1,"message":"303","line":343,"column":9,"nodeType":"278","messageId":"279","endLine":343,"endColumn":14},{"ruleId":"276","severity":1,"message":"317","line":1180,"column":12,"nodeType":"278","messageId":"279","endLine":1180,"endColumn":16},{"ruleId":"276","severity":1,"message":"318","line":1180,"column":18,"nodeType":"278","messageId":"279","endLine":1180,"endColumn":25},{"ruleId":"276","severity":1,"message":"319","line":1188,"column":23,"nodeType":"278","messageId":"279","endLine":1188,"endColumn":35},{"ruleId":"276","severity":1,"message":"320","line":1196,"column":11,"nodeType":"278","messageId":"279","endLine":1196,"endColumn":14},{"ruleId":"276","severity":1,"message":"321","line":1206,"column":13,"nodeType":"278","messageId":"279","endLine":1206,"endColumn":16},{"ruleId":"276","severity":1,"message":"282","line":1220,"column":19,"nodeType":"278","messageId":"279","endLine":1220,"endColumn":25},{"ruleId":"276","severity":1,"message":"282","line":1258,"column":19,"nodeType":"278","messageId":"279","endLine":1258,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":1285,"column":26,"nodeType":"290","messageId":"287","endLine":1285,"endColumn":28},{"ruleId":"288","severity":1,"message":"322","line":1286,"column":29,"nodeType":"290","messageId":"287","endLine":1286,"endColumn":31},{"ruleId":"276","severity":1,"message":"323","line":1292,"column":14,"nodeType":"278","messageId":"279","endLine":1292,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":1300,"column":25,"nodeType":"290","messageId":"287","endLine":1300,"endColumn":27},{"ruleId":"288","severity":1,"message":"322","line":1301,"column":30,"nodeType":"290","messageId":"287","endLine":1301,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":1392,"column":16,"nodeType":"290","messageId":"287","endLine":1392,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":1393,"column":29,"nodeType":"290","messageId":"287","endLine":1393,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":1400,"column":21,"nodeType":"290","messageId":"287","endLine":1400,"endColumn":23},{"ruleId":"288","severity":1,"message":"289","line":1401,"column":30,"nodeType":"290","messageId":"287","endLine":1401,"endColumn":32},{"ruleId":"276","severity":1,"message":"324","line":15,"column":9,"nodeType":"278","messageId":"279","endLine":15,"endColumn":17},{"ruleId":"276","severity":1,"message":"325","line":16,"column":9,"nodeType":"278","messageId":"279","endLine":16,"endColumn":20},{"ruleId":"309","severity":1,"message":"310","line":61,"column":21,"nodeType":"311","endLine":61,"endColumn":89},{"ruleId":"309","severity":1,"message":"310","line":62,"column":21,"nodeType":"311","endLine":62,"endColumn":97},{"ruleId":"309","severity":1,"message":"310","line":63,"column":21,"nodeType":"311","endLine":63,"endColumn":87},{"ruleId":"326","severity":1,"message":"327","line":83,"column":8,"nodeType":"328","endLine":83,"endColumn":20,"suggestions":"329"},{"ruleId":"276","severity":1,"message":"330","line":13,"column":5,"nodeType":"278","messageId":"279","endLine":13,"endColumn":7},{"ruleId":"326","severity":1,"message":"327","line":66,"column":8,"nodeType":"328","endLine":66,"endColumn":10,"suggestions":"331"},{"ruleId":"276","severity":1,"message":"332","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":16},{"ruleId":"276","severity":1,"message":"333","line":4,"column":18,"nodeType":"278","messageId":"279","endLine":4,"endColumn":31},{"ruleId":"276","severity":1,"message":"334","line":4,"column":33,"nodeType":"278","messageId":"279","endLine":4,"endColumn":42},{"ruleId":"276","severity":1,"message":"335","line":4,"column":44,"nodeType":"278","messageId":"279","endLine":4,"endColumn":51},{"ruleId":"276","severity":1,"message":"336","line":4,"column":53,"nodeType":"278","messageId":"279","endLine":4,"endColumn":67},{"ruleId":"276","severity":1,"message":"337","line":4,"column":69,"nodeType":"278","messageId":"279","endLine":4,"endColumn":78},{"ruleId":"276","severity":1,"message":"338","line":4,"column":80,"nodeType":"278","messageId":"279","endLine":4,"endColumn":88},{"ruleId":"276","severity":1,"message":"339","line":4,"column":90,"nodeType":"278","messageId":"279","endLine":4,"endColumn":103},{"ruleId":"276","severity":1,"message":"340","line":4,"column":105,"nodeType":"278","messageId":"279","endLine":4,"endColumn":113},{"ruleId":"276","severity":1,"message":"341","line":4,"column":115,"nodeType":"278","messageId":"279","endLine":4,"endColumn":122},{"ruleId":"276","severity":1,"message":"312","line":4,"column":124,"nodeType":"278","messageId":"279","endLine":4,"endColumn":130},{"ruleId":"276","severity":1,"message":"342","line":5,"column":10,"nodeType":"278","messageId":"279","endLine":5,"endColumn":25},{"ruleId":"276","severity":1,"message":"343","line":13,"column":8,"nodeType":"278","messageId":"279","endLine":13,"endColumn":25},{"ruleId":"276","severity":1,"message":"344","line":24,"column":9,"nodeType":"278","messageId":"279","endLine":24,"endColumn":16},{"ruleId":"276","severity":1,"message":"345","line":25,"column":9,"nodeType":"278","messageId":"279","endLine":25,"endColumn":16},{"ruleId":"276","severity":1,"message":"346","line":26,"column":9,"nodeType":"278","messageId":"279","endLine":26,"endColumn":11},{"ruleId":"276","severity":1,"message":"347","line":43,"column":9,"nodeType":"278","messageId":"279","endLine":43,"endColumn":18},{"ruleId":"326","severity":1,"message":"327","line":87,"column":8,"nodeType":"328","endLine":87,"endColumn":10,"suggestions":"348"},{"ruleId":"276","severity":1,"message":"304","line":100,"column":19,"nodeType":"278","messageId":"279","endLine":100,"endColumn":22},{"ruleId":"276","severity":1,"message":"349","line":2,"column":20,"nodeType":"278","messageId":"279","endLine":2,"endColumn":29},{"ruleId":"276","severity":1,"message":"350","line":14,"column":12,"nodeType":"278","messageId":"279","endLine":14,"endColumn":22},{"ruleId":"276","severity":1,"message":"351","line":20,"column":12,"nodeType":"278","messageId":"279","endLine":20,"endColumn":21},{"ruleId":"276","severity":1,"message":"281","line":21,"column":12,"nodeType":"278","messageId":"279","endLine":21,"endColumn":19},{"ruleId":"276","severity":1,"message":"352","line":22,"column":11,"nodeType":"278","messageId":"279","endLine":22,"endColumn":25},{"ruleId":"306","severity":1,"message":"353","line":72,"column":25,"nodeType":"278","messageId":"308","endLine":72,"endColumn":28},{"ruleId":"306","severity":1,"message":"354","line":74,"column":25,"nodeType":"278","messageId":"308","endLine":74,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":100,"column":21,"nodeType":"286","messageId":"287","endLine":100,"endColumn":23},{"ruleId":"276","severity":1,"message":"355","line":111,"column":7,"nodeType":"278","messageId":"279","endLine":111,"endColumn":17},{"ruleId":"284","severity":1,"message":"285","line":111,"column":21,"nodeType":"286","messageId":"287","endLine":111,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":119,"column":22,"nodeType":"286","messageId":"287","endLine":119,"endColumn":24},{"ruleId":"284","severity":1,"message":"285","line":127,"column":23,"nodeType":"286","messageId":"287","endLine":127,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":140,"column":38,"nodeType":"290","messageId":"287","endLine":140,"endColumn":40},{"ruleId":"276","severity":1,"message":"282","line":35,"column":19,"nodeType":"278","messageId":"279","endLine":35,"endColumn":25},{"ruleId":"276","severity":1,"message":"304","line":37,"column":25,"nodeType":"278","messageId":"279","endLine":37,"endColumn":28},{"ruleId":"309","severity":1,"message":"310","line":111,"column":60,"nodeType":"311","endLine":111,"endColumn":105},{"ruleId":"276","severity":1,"message":"332","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":16},{"ruleId":"276","severity":1,"message":"340","line":2,"column":105,"nodeType":"278","messageId":"279","endLine":2,"endColumn":113},{"ruleId":"276","severity":1,"message":"341","line":2,"column":115,"nodeType":"278","messageId":"279","endLine":2,"endColumn":122},{"ruleId":"276","severity":1,"message":"312","line":2,"column":124,"nodeType":"278","messageId":"279","endLine":2,"endColumn":130},{"ruleId":"276","severity":1,"message":"349","line":3,"column":27,"nodeType":"278","messageId":"279","endLine":3,"endColumn":36},{"ruleId":"276","severity":1,"message":"356","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":14},{"ruleId":"276","severity":1,"message":"313","line":23,"column":7,"nodeType":"278","messageId":"279","endLine":23,"endColumn":18},{"ruleId":"276","severity":1,"message":"357","line":50,"column":12,"nodeType":"278","messageId":"279","endLine":50,"endColumn":16},{"ruleId":"276","severity":1,"message":"314","line":50,"column":18,"nodeType":"278","messageId":"279","endLine":50,"endColumn":25},{"ruleId":"276","severity":1,"message":"358","line":60,"column":11,"nodeType":"278","messageId":"279","endLine":60,"endColumn":20},{"ruleId":"276","severity":1,"message":"359","line":65,"column":12,"nodeType":"278","messageId":"279","endLine":65,"endColumn":22},{"ruleId":"276","severity":1,"message":"360","line":65,"column":24,"nodeType":"278","messageId":"279","endLine":65,"endColumn":37},{"ruleId":"276","severity":1,"message":"361","line":69,"column":12,"nodeType":"278","messageId":"279","endLine":69,"endColumn":25},{"ruleId":"276","severity":1,"message":"362","line":69,"column":27,"nodeType":"278","messageId":"279","endLine":69,"endColumn":43},{"ruleId":"276","severity":1,"message":"293","line":70,"column":12,"nodeType":"278","messageId":"279","endLine":70,"endColumn":18},{"ruleId":"276","severity":1,"message":"294","line":70,"column":20,"nodeType":"278","messageId":"279","endLine":70,"endColumn":29},{"ruleId":"276","severity":1,"message":"363","line":72,"column":12,"nodeType":"278","messageId":"279","endLine":72,"endColumn":26},{"ruleId":"276","severity":1,"message":"364","line":72,"column":28,"nodeType":"278","messageId":"279","endLine":72,"endColumn":45},{"ruleId":"276","severity":1,"message":"315","line":73,"column":12,"nodeType":"278","messageId":"279","endLine":73,"endColumn":20},{"ruleId":"276","severity":1,"message":"365","line":80,"column":12,"nodeType":"278","messageId":"279","endLine":80,"endColumn":17},{"ruleId":"276","severity":1,"message":"366","line":80,"column":19,"nodeType":"278","messageId":"279","endLine":80,"endColumn":27},{"ruleId":"276","severity":1,"message":"303","line":173,"column":9,"nodeType":"278","messageId":"279","endLine":173,"endColumn":14},{"ruleId":"276","severity":1,"message":"367","line":174,"column":9,"nodeType":"278","messageId":"279","endLine":174,"endColumn":14},{"ruleId":"276","severity":1,"message":"368","line":281,"column":14,"nodeType":"278","messageId":"279","endLine":281,"endColumn":21},{"ruleId":"276","severity":1,"message":"369","line":297,"column":14,"nodeType":"278","messageId":"279","endLine":297,"endColumn":24},{"ruleId":"276","severity":1,"message":"370","line":304,"column":14,"nodeType":"278","messageId":"279","endLine":304,"endColumn":28},"no-native-reassign",["371"],"no-negated-in-lhs",["372"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'message' is assigned a value but never used.","'result' is assigned a value but never used.","'user' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'AirportShuttle' is defined but never used.","'Star' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'setCreatedBy' is assigned a value but never used.","'like' is assigned a value but never used.","'contentStatus' is assigned a value but never used.","'displayContent' is assigned a value but never used.","'notify' is assigned a value but never used.","'setNotify' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'ready' is assigned a value but never used.","'res' is assigned a value but never used.","'onLike' is assigned a value but never used.","no-redeclare","'user' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faSync' is defined but never used.","'initialList' is assigned a value but never used.","'setName' is assigned a value but never used.","'newPlace' is assigned a value but never used.","'fetchEvents' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'setLikeColor' is assigned a value but never used.","'jwt' is assigned a value but never used.","'tok' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'handleSearch' is defined but never used.","'username' is assigned a value but never used.","'preferences' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.","ArrayExpression",["373"],"'ud' is assigned a value but never used.",["374"],"'faPlus' is defined but never used.","'faTimesCircle' is defined but never used.","'faRunning' is defined but never used.","'faFlask' is defined but never used.","'faUserGraduate' is defined but never used.","'faPalette' is defined but never used.","'faGuitar' is defined but never used.","'faShoppingBag' is defined but never used.","'faSearch' is defined but never used.","'faHeart' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useOnclickOutside' is defined but never used.","'storage' is assigned a value but never used.","'testArr' is assigned a value but never used.","'bp' is assigned a value but never used.","'createdBy' is assigned a value but never used.",["375"],"'useEffect' is defined but never used.","'passOption' is assigned a value but never used.","'displayed' is assigned a value but never used.","'changePassword' is assigned a value but never used.","'jwt' is already defined.","'ud' is already defined.","'SkipOption' is assigned a value but never used.","'TopNav' is defined but never used.","'name' is assigned a value but never used.","'editProps' is assigned a value but never used.","'userEvents' is assigned a value but never used.","'setUserEvents' is assigned a value but never used.","'eventToDelete' is assigned a value but never used.","'setEventToDelete' is assigned a value but never used.","'currentPlaceId' is assigned a value but never used.","'setCurrentPlaceId' is assigned a value but never used.","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.","'value' is assigned a value but never used.","'getIcon' is defined but never used.","'compareIds' is defined but never used.","'handleOpenEdit' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"378","fix":"380"},"Update the dependencies array to be: [endDate, props.date, startDate]",{"range":"381","text":"382"},"Update the dependencies array to be: [endDate, startDate]",{"range":"383","text":"384"},{"range":"385","text":"384"},[1947,1959],"[endDate, props.date, startDate]",[1660,1662],"[endDate, startDate]",[2470,2472]]