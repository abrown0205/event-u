{"ast":null,"code":"import { INPUT_EVENT_TYPES } from '../constants';\nimport { window, userAgent, passiveSupported } from '../utils/globals';\nconst firefox = userAgent.indexOf('firefox') !== -1;\nconst {\n  WHEEL_EVENTS\n} = INPUT_EVENT_TYPES;\nconst EVENT_TYPE = 'wheel';\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\nconst SHIFT_MULTIPLIER = 0.25;\nexport default class WheelInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n    this.options = Object.assign({\n      enable: true\n    }, options);\n    this.events = WHEEL_EVENTS.concat(options.events || []);\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(event => element.addEventListener(event, this.handleEvent, passiveSupported ? {\n      passive: false\n    } : false));\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  enableEventType(eventType, enabled) {\n    if (eventType === EVENT_TYPE) {\n      this.options.enable = enabled;\n    }\n  }\n\n  handleEvent(event) {\n    if (!this.options.enable) {\n      return;\n    }\n\n    let value = event.deltaY;\n\n    if (window.WheelEvent) {\n      if (firefox && event.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) {\n        value /= window.devicePixelRatio;\n      }\n\n      if (event.deltaMode === window.WheelEvent.DOM_DELTA_LINE) {\n        value *= WHEEL_DELTA_PER_LINE;\n      }\n    }\n\n    const wheelPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n      value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n    }\n\n    if (event.shiftKey && value) {\n      value = value * SHIFT_MULTIPLIER;\n    }\n\n    this._onWheel(event, -value, wheelPosition);\n  }\n\n  _onWheel(srcEvent, delta, position) {\n    this.callback({\n      type: EVENT_TYPE,\n      center: position,\n      delta,\n      srcEvent,\n      pointerType: 'mouse',\n      target: srcEvent.target\n    });\n  }\n\n}","map":{"version":3,"sources":["../../../src/inputs/wheel-input.js"],"names":["firefox","userAgent","WHEEL_EVENTS","EVENT_TYPE","WHEEL_DELTA_MAGIC_SCALER","WHEEL_DELTA_PER_LINE","SHIFT_MULTIPLIER","constructor","options","enable","event","passiveSupported","passive","destroy","enableEventType","eventType","handleEvent","value","window","wheelPosition","x","y","clientY","Math","_onWheel","type","center","pointerType","target","srcEvent"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {INPUT_EVENT_TYPES} from '../constants';\nimport {window, userAgent, passiveSupported} from '../utils/globals';\n\nconst firefox = userAgent.indexOf('firefox') !== -1;\n\nconst {WHEEL_EVENTS} = INPUT_EVENT_TYPES;\nconst EVENT_TYPE = 'wheel';\n\n// Constants for normalizing input delta\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\n// Slow down zoom if shift key is held for more precise zooming\nconst SHIFT_MULTIPLIER = 0.25;\n\nexport default class WheelInput {\n  constructor(element, callback, options = {}) {\n    this.element = element;\n    this.callback = callback;\n\n    this.options = Object.assign({enable: true}, options);\n\n    this.events = WHEEL_EVENTS.concat(options.events || []);\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(event =>\n      element.addEventListener(event, this.handleEvent, passiveSupported ? {passive: false} : false)\n    );\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === EVENT_TYPE) {\n      this.options.enable = enabled;\n    }\n  }\n\n  /* eslint-disable complexity, max-statements */\n  handleEvent(event) {\n    if (!this.options.enable) {\n      return;\n    }\n\n    let value = event.deltaY;\n    if (window.WheelEvent) {\n      // Firefox doubles the values on retina screens...\n      if (firefox && event.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) {\n        value /= window.devicePixelRatio;\n      }\n      if (event.deltaMode === window.WheelEvent.DOM_DELTA_LINE) {\n        value *= WHEEL_DELTA_PER_LINE;\n      }\n    }\n\n    const wheelPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n      // This one is definitely a mouse wheel event.\n      // Normalize this value to match trackpad.\n      value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n    }\n\n    if (event.shiftKey && value) {\n      value = value * SHIFT_MULTIPLIER;\n    }\n\n    this._onWheel(event, -value, wheelPosition);\n  }\n\n  _onWheel(srcEvent, delta, position) {\n    this.callback({\n      type: EVENT_TYPE,\n      center: position,\n      delta,\n      srcEvent,\n      pointerType: 'mouse',\n      target: srcEvent.target\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}